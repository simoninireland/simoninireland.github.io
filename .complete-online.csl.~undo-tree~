(undo-tree-save-format-version . 1)
"80c5a3419c04c09616015162fd498c8e92ef44e0"
[nil nil nil nil (25409 23071 989637 318000) 0 nil]
([nil nil ((#("S" 0 1 (fontified t face font-lock-string-face)) . -178) (undo-tree-id871 . -1) 179 (t 25409 22759 750976 421000)) nil (25409 23071 989636 761000) 0 nil])
([nil nil ((178 . 179)) nil (25409 23071 989636 197000) 0 nil])
([nil nil ((#("U" 0 1 (fontified t face font-lock-string-face)) . -177) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (#("K" 0 1 (fontified t face font-lock-string-face)) . -178) (undo-tree-id869 . -1) (undo-tree-id870 . -1) 179) nil (25409 23071 989635 900000) 0 nil])
([nil nil ((177 . 180)) nil (25409 23071 989634 518000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t face font-lock-string-face)) . -178) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (#("B" 0 1 (fontified t face font-lock-string-face)) . -179) (undo-tree-id865 . -1) (undo-tree-id866 . -1) 180) nil (25409 23071 989634 101000) 0 nil])
([nil nil ((178 . 179)) nil (25409 23071 989632 804000) 0 nil])
([nil nil ((#("Society" 0 7 (fontified t face (nxml-text))) . -220) (undo-tree-id862 . -7) 227) nil (25409 23071 989632 486000) 0 nil])
([nil nil ((#("Physical " 0 9 (fontified t face (nxml-text))) . -211) (undo-tree-id860 . -9) (undo-tree-id861 . -9) 220) nil (25409 23071 989631 697000) 0 nil])
([nil nil ((#("American " 0 9 (fontified t face (nxml-text))) . -202) (undo-tree-id858 . -9) (undo-tree-id859 . -9) 211) nil (25409 23071 989630 541000) 0 nil])
([nil nil ((202 . 223)) nil (25409 23071 989629 582000) 0 nil])
([nil nil ((223 . 225)) nil (25409 23071 989629 391000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face (nxml-text))) . -222) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (#("i" 0 1 (fontified t face (nxml-text))) . -223) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (#("o" 0 1 (fontified t face (nxml-text))) . -224) (undo-tree-id856 . -1) (undo-tree-id857 . -1) 225) nil (25409 23071 989628 866000) 0 nil])
([nil nil ((222 . 230)) nil (25409 23071 989626 332000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face (nxml-text))) . -227) (undo-tree-id851 . -1) 228) nil (25409 23071 989625 929000) 0 nil])
([nil nil ((227 . 228)) nil (25409 23071 989625 336000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t face (nxml-text))) . -203) (undo-tree-id850 . -1) 204) nil (25409 23071 989624 965000) 0 nil])
([nil nil ((203 . 204)) nil (25409 23071 989624 410000) 0 nil])
([nil nil ((#("APS" 0 3 (fontified t face (nxml-text))) . -256) (undo-tree-id849 . -3) 259) nil (25409 23071 989624 38000) 0 nil])
([nil nil ((256 . 262)) nil (25409 23071 989623 472000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face (nxml-text))) . 292) (#("." 0 1 (fontified t face (nxml-text))) . 292) (#("o" 0 1 (fontified t face (nxml-text))) . 292) (#("r" 0 1 (fontified t face (nxml-text))) . 292) (#("e" 0 1 (fontified t face (nxml-text))) . 292) (#("t" 0 1 (fontified t face (nxml-text))) . 292) (#("o" 0 1 (fontified t face (nxml-text))) . 292) (#("z" 0 1 (fontified t face (nxml-text))) . 292) (#("." 0 1 (fontified t face (nxml-text))) . 292) (#("w" 0 1 (fontified t face (nxml-text))) . 292) (#("w" 0 1 (fontified t face (nxml-text))) . 292) (#("w" 0 1 (fontified t face (nxml-text))) . 292)) nil (25409 23071 989622 370000) 0 nil])
([nil nil ((#("h" 0 1 (fontified t face (nxml-text))) . 292) (#("p" 0 1 (fontified t face (nxml-text))) . 292) (#("-" 0 1 (fontified t face (nxml-text))) . 292) (#("n" 0 1 (fontified t face (nxml-text))) . 292) (#("a" 0 1 (fontified t face (nxml-text))) . 292) (#("c" 0 1 (fontified t face (nxml-text))) . 292) (#("i" 0 1 (fontified t face (nxml-text))) . 292) (#("r" 0 1 (fontified t face (nxml-text))) . 292) (#("e" 0 1 (fontified t face (nxml-text))) . 292) (#("m" 0 1 (fontified t face (nxml-text))) . 292) (#("a" 0 1 (fontified t face (nxml-text))) . 292) (#("/" 0 1 (fontified t face (nxml-text))) . 292) (#("s" 0 1 (fontified t face (nxml-text))) . 292) (#("e" 0 1 (fontified t face (nxml-text))) . 292) (#("l" 0 1 (fontified t face (nxml-text))) . 292) (#("y" 0 1 (fontified t face (nxml-text))) . 292) (#("t" 0 1 (fontified t face (nxml-text))) . 292) (#("s" 0 1 (fontified t face (nxml-text))) . 292) (#("/" 0 1 (fontified t face (nxml-text))) . 292) (#("g" 0 1 (fontified t face (nxml-text))) . 292) (#("r" 0 1 (fontified t face (nxml-text))) . 292)) nil (25409 23071 989620 86000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t face (nxml-text))) . 292) (#("t" 0 1 (fontified t face (nxml-text))) . 292) (#("e" 0 1 (fontified t face (nxml-text))) . 292) (#("i" 0 1 (fontified t face (nxml-text))) . 292) (#("c" 0 1 (fontified t face (nxml-text))) . 292) (#("o" 0 1 (fontified t face (nxml-text))) . 292) (#("s" 0 1 (fontified t face (nxml-text))) . 292) (#("-" 0 1 (fontified t face (nxml-text))) . 292) (#("s" 0 1 (fontified t face (nxml-text))) . 292) (#("c" 0 1 (fontified t face (nxml-text))) . 292) (#("i" 0 1 (fontified t face (nxml-text))) . 292) (#("s" 0 1 (fontified t face (nxml-text))) . 292) (#("y" 0 1 (fontified t face (nxml-text))) . 292)) nil (25409 23071 989618 323000) 0 nil])
([nil nil ((292 . 297)) nil (25409 23071 989617 149000) 0 nil])
([nil nil ((289 . 290)) nil (25409 23071 989616 890000) 0 nil])
([nil nil ((298 . 308)) nil (25409 23071 989616 696000) 0 nil])
([nil nil ((308 . 309)) nil (25409 23071 989616 494000) 0 nil])
([nil nil ((309 . 312)) nil (25409 23071 989616 303000) 0 nil])
([nil nil ((312 . 328)) nil (25409 23071 989616 64000) 0 nil])
([nil nil ((nil rear-nonsticky nil 417 . 418) (nil fontified nil 417 . 418) (nil fontified nil 416 . 417) (nil fontified nil 415 . 416) (nil fontified nil 409 . 415) (nil fontified nil 408 . 409) (nil fontified nil 405 . 408) (nil fontified nil 404 . 405) (nil fontified nil 349 . 404) (nil fontified nil 348 . 349) (nil fontified nil 344 . 348) (nil fontified nil 343 . 344) (nil fontified nil 339 . 343) (nil fontified nil 338 . 339) (nil fontified nil 334 . 338) (334 . 418)) nil (25409 23071 989615 599000) 0 nil])
([nil nil ((#("\"http://www.zotero.org/styles/american-physics-society\"" 0 55 (fontified t face font-lock-string-face)) . -349) (undo-tree-id844 . -55) (undo-tree-id845 . -55) (undo-tree-id846 . 25) (undo-tree-id847 . -38) (undo-tree-id848 . -55) 404) nil (25409 23071 989614 578000) 0 nil])
([nil nil ((nil rear-nonsticky nil 392 . 393) (nil fontified nil 392 . 393) (nil fontified nil 391 . 392) (nil fontified nil 390 . 391) (nil fontified nil 389 . 390) (nil fontified nil 388 . 389) (nil fontified nil 387 . 388) (nil fontified nil 386 . 387) (nil fontified nil 385 . 386) (nil fontified nil 384 . 385) (nil fontified nil 383 . 384) (nil fontified nil 382 . 383) (nil fontified nil 381 . 382) (nil fontified nil 380 . 381) (nil fontified nil 379 . 380) (nil fontified nil 378 . 379) (nil fontified nil 377 . 378) (nil fontified nil 376 . 377) (nil fontified nil 375 . 376) (nil fontified nil 374 . 375) (nil fontified nil 373 . 374) (nil fontified nil 372 . 373) (nil fontified nil 371 . 372) (nil fontified nil 370 . 371) (nil fontified nil 369 . 370) (nil fontified nil 368 . 369) (nil fontified nil 367 . 368) (nil fontified nil 366 . 367) (nil fontified nil 365 . 366) (nil fontified nil 364 . 365) (nil fontified nil 363 . 364) (nil fontified nil 362 . 363) (nil fontified nil 361 . 362) (nil fontified nil 360 . 361) (nil fontified nil 359 . 360) (nil fontified nil 358 . 359) (nil fontified nil 356 . 358) (nil fontified nil 354 . 356) (nil fontified nil 350 . 354) (nil fontified nil 349 . 350) (349 . 393)) nil (25409 23071 989612 701000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t face (nxml-tag-delimiter))) . -349) (undo-tree-id843 . -1) 350) nil (25409 23071 989609 749000) 0 nil])
([nil nil ((349 . 350)) nil (25409 23071 989609 145000) 0 nil])
([nil nil ((393 . 394)) nil (25409 23071 989608 808000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -546) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -547) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -548) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -549) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -550) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -551) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -552) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -553) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -554) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -555) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -556) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -557) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -558) (undo-tree-id842 . -1) 559) nil (25409 23071 989607 277000) 0 nil])
([nil nil ((553 . 562)) nil (25409 23071 989598 443000) 0 nil])
([nil nil ((#("    <link href=\"http://www.zotero.org/styles/american-physics-society\" rel=\"self\"/>" 0 1 (face (nxml-text font-lock-string-face) fontified t) 1 4 (face (nxml-text font-lock-string-face) fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t) 15 16 (fontified t face font-lock-string-face) 16 69 (fontified t face font-lock-string-face) 69 70 (fontified t face font-lock-string-face) 70 71 (fontified t) 71 74 (fontified t face (nxml-attribute-local-name)) 74 75 (fontified t) 75 76 (fontified t face font-lock-string-face) 76 80 (fontified t face font-lock-string-face) 80 81 (fontified t face font-lock-string-face) 81 82 (fontified t face (nxml-tag-slash)) 82 83 (fontified t face (nxml-tag-delimiter))) . 408)) nil (25409 23071 989598 167000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 408)) nil (25409 23071 989597 878000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face font-lock-string-face)) . -475) (undo-tree-id817 . -1) 476) nil (25409 23071 989597 446000) 0 nil])
([nil nil ((#("    <link href=\"https://journals.aps.org/prl/authors#techformat\" rel=\"documentation\"/>" 0 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t) 15 16 (fontified t face font-lock-string-face) 16 63 (fontified t face font-lock-string-face) 63 64 (fontified t face font-lock-string-face) 64 65 (fontified t) 65 68 (fontified t face (nxml-attribute-local-name)) 68 69 (fontified t) 69 70 (fontified t face font-lock-string-face) 70 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t face (nxml-tag-slash)) 85 86 (fontified t face (nxml-tag-delimiter))) . 496)) nil (25409 23071 989596 754000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 496)) nil (25409 23071 989596 151000) 0 nil])
([nil nil ((#("Karnesky" 0 8 (fontified t face (nxml-text))) . -529) (undo-tree-id814 . -8) (undo-tree-id815 . 8) (undo-tree-id816 . -8) 537) nil (25409 23071 989595 766000) 0 nil])
([nil nil ((#("Richard " 0 8 (fontified t face (nxml-text))) . -521) (undo-tree-id810 . -8) (undo-tree-id811 . -8) (undo-tree-id812 . -8) (undo-tree-id813 . -8) 529) nil (25409 23071 989593 963000) 0 nil])
([nil nil ((521 . 533)) nil (25409 23071 989592 329000) 0 nil])
([nil nil ((#("com" 0 3 (fontified t face (nxml-text))) . -576) (undo-tree-id809 . -3) 579) nil (25409 23071 989591 919000) 0 nil])
([nil nil ((#("gmail." 0 6 (fontified t face (nxml-text))) . -570) (undo-tree-id801 . -6) (undo-tree-id802 . -6) (undo-tree-id803 . -5) (undo-tree-id804 . -5) (undo-tree-id805 . 6) (undo-tree-id806 . -5) (undo-tree-id807 . -6) (undo-tree-id808 . -6) 576) nil (25409 23071 989591 256000) 0 nil])
([nil nil ((#("zotero@" 0 7 (fontified t face (nxml-text))) . -563) (undo-tree-id791 . -7) (undo-tree-id792 . -7) (undo-tree-id793 . -7) (undo-tree-id794 . -7) (undo-tree-id795 . -7) (undo-tree-id796 . -7) (undo-tree-id797 . 7) (undo-tree-id798 . -6) (undo-tree-id799 . -7) (undo-tree-id800 . -7) 570) nil (25409 23071 989588 117000) 0 nil])
([nil nil ((#("karnesky+" 0 9 (fontified t face (nxml-text))) . -554) (undo-tree-id777 . -9) (undo-tree-id778 . -9) (undo-tree-id779 . -9) (undo-tree-id780 . -9) (undo-tree-id781 . -9) (undo-tree-id782 . -9) (undo-tree-id783 . -9) (undo-tree-id784 . -9) (undo-tree-id785 . 9) (undo-tree-id786 . -8) (undo-tree-id787 . -9) (undo-tree-id788 . -9) (undo-tree-id789 . -9) (undo-tree-id790 . -9) 563) nil (25409 23071 989584 3000) 0 nil])
([nil nil ((554 . 575)) nil (25409 23071 989579 158000) 0 nil])
([nil nil ((575 . 579)) nil (25409 23071 989578 527000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t face (nxml-text))) . -564) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) 565) nil (25409 23071 989578 184000) 0 nil])
([nil nil ((#("Karnesky" 0 8 (fontified t face (nxml-text))) . -641) (undo-tree-id770 . -8) (undo-tree-id771 . 8) (undo-tree-id772 . -8) 649) nil (25409 23071 989576 377000) 0 nil])
([nil nil ((#("Richard_" 0 8 (fontified t face (nxml-text))) . -633) (undo-tree-id766 . -8) (undo-tree-id767 . -8) (undo-tree-id768 . -8) (undo-tree-id769 . -8) 641) nil (25409 23071 989574 995000) 0 nil])
([nil nil ((#("edu/" 0 4 (fontified t face (nxml-text))) . -629) (undo-tree-id758 . -4) (undo-tree-id759 . -4) (undo-tree-id760 . -4) (undo-tree-id761 . -4) (undo-tree-id762 . 4) (undo-tree-id763 . -3) (undo-tree-id764 . -4) (undo-tree-id765 . -4) 633) nil (25409 23071 989573 395000) 0 nil])
([nil nil ((#("northwestern." 0 13 (fontified t face (nxml-text))) . -616) (undo-tree-id750 . -13) (undo-tree-id751 . -13) (undo-tree-id752 . -13) (undo-tree-id753 . -13) (undo-tree-id754 . -13) (undo-tree-id755 . -13) (undo-tree-id756 . -13) (undo-tree-id757 . -13) 629) nil (25409 23071 989570 572000) 0 nil])
([nil nil ((#("nucapt." 0 7 (fontified t face (nxml-text))) . -609) (undo-tree-id732 . -7) (undo-tree-id733 . -7) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -7) (undo-tree-id741 . -7) (undo-tree-id742 . -7) (undo-tree-id743 . -7) (undo-tree-id744 . -7) (undo-tree-id745 . -7) (undo-tree-id746 . 7) (undo-tree-id747 . -6) (undo-tree-id748 . -7) (undo-tree-id749 . -7) 616) nil (25409 23071 989567 510000) 0 nil])
([nil nil ((#("arc." 0 4 (fontified t face (nxml-text))) . -605) (undo-tree-id714 . -4) (undo-tree-id715 . -4) (undo-tree-id716 . -4) (undo-tree-id717 . -4) (undo-tree-id718 . -4) (undo-tree-id719 . -4) (undo-tree-id720 . -4) (undo-tree-id721 . -4) (undo-tree-id722 . -4) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) 609) nil (25409 23071 989560 792000) 0 nil])
([nil nil ((#("http://" 0 7 (fontified t face (nxml-text))) . -598) (undo-tree-id690 . -7) (undo-tree-id691 . -7) (undo-tree-id692 . -7) (undo-tree-id693 . -7) (undo-tree-id694 . -7) (undo-tree-id695 . -7) (undo-tree-id696 . -7) (undo-tree-id697 . -7) (undo-tree-id698 . -7) (undo-tree-id699 . -7) (undo-tree-id700 . -7) (undo-tree-id701 . -7) (undo-tree-id702 . -7) (undo-tree-id703 . -7) (undo-tree-id704 . -7) (undo-tree-id705 . -7) (undo-tree-id706 . -7) (undo-tree-id707 . -7) (undo-tree-id708 . 7) (undo-tree-id709 . -4) (undo-tree-id710 . -7) (undo-tree-id711 . -7) (undo-tree-id712 . -7) (undo-tree-id713 . -7) 605) nil (25409 23071 989546 385000) 0 nil])
([nil nil ((598 . 604)) nil (25409 23071 989537 569000) 0 nil])
([nil nil ((604 . 606)) nil (25409 23071 989537 232000) 0 nil])
([nil nil ((606 . 621)) nil (25409 23071 989536 997000) 0 nil])
([nil nil ((#("    <author>" 0 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter))) . 642) (undo-tree-id689 . -12)) nil (25409 23071 989536 643000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 642) (undo-tree-id687 . 1) (undo-tree-id688 . -1)) nil (25409 23071 989535 891000) 0 nil])
([nil nil ((#("      <name>Brenton M. Wiernik</name>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter)) 12 30 (fontified t face (nxml-text)) 30 31 (fontified t face (nxml-tag-delimiter)) 31 32 (fontified t face (nxml-tag-slash)) 32 36 (fontified t face (nxml-element-local-name)) 36 37 (fontified t face (nxml-tag-delimiter))) . 642) (undo-tree-id685 . 37) (undo-tree-id686 . -37)) nil (25409 23071 989535 6000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 642) (undo-tree-id683 . 1) (undo-tree-id684 . -1)) nil (25409 23071 989533 861000) 0 nil])
([nil nil ((#("    </author>" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 6 (fontified t face (nxml-tag-slash)) 6 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 642) (undo-tree-id681 . 13) (undo-tree-id682 . -13)) nil (25409 23071 989533 54000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 642) (undo-tree-id679 . 1) (undo-tree-id680 . -1)) nil (25409 23071 989532 105000) 0 nil])
([nil nil ((#("    <contributor>" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 16 (fontified t face (nxml-element-local-name)) 16 17 (fontified t face (nxml-tag-delimiter))) . 642) (undo-tree-id677 . 17) (undo-tree-id678 . -17)) nil (25409 23071 989531 309000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 642) (undo-tree-id675 . 1) (undo-tree-id676 . -1)) nil (25409 23071 989530 455000) 0 nil])
([nil nil ((#("      <name>Anna C. Véron</name>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter)) 12 25 (fontified t face (nxml-text)) 25 26 (fontified t face (nxml-tag-delimiter)) 26 27 (fontified t face (nxml-tag-slash)) 27 31 (fontified t face (nxml-element-local-name)) 31 32 (fontified t face (nxml-tag-delimiter))) . 642) (undo-tree-id673 . 32) (undo-tree-id674 . -32)) nil (25409 23071 989529 584000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 642) (undo-tree-id671 . 1) (undo-tree-id672 . -1)) nil (25409 23071 989528 771000) 0 nil])
([nil nil ((#("    </contributor>" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 6 (fontified t face (nxml-tag-slash)) 6 17 (fontified t face (nxml-element-local-name)) 17 18 (fontified t face (nxml-tag-delimiter))) . 642) (undo-tree-id668 . 12) (undo-tree-id669 . -17) (undo-tree-id670 . -18)) nil (25409 23071 989527 611000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 642) (undo-tree-id666 . 1) (undo-tree-id667 . -1)) nil (25409 23071 989525 15000) 0 nil])
([nil nil ((#("physics" 0 7 (fontified t face font-lock-string-face)) . -705) (undo-tree-id665 . -7) 712) nil (25409 23071 989523 778000) 0 nil])
([nil nil ((705 . 713)) nil (25409 23071 989523 220000) 0 nil])
([nil nil ((#("publications." 0 13 (fontified t face (nxml-text))) . -754) (undo-tree-id664 . -13) 767) nil (25409 23071 989522 906000) 0 nil])
([nil nil ((#("APS " 0 4 (fontified t face (nxml-text))) . -750) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . 4) (undo-tree-id661 . -3) (undo-tree-id662 . -4) (undo-tree-id663 . -4) 754) nil (25409 23071 989522 218000) 0 nil])
([nil nil ((#("by " 0 3 (fontified t face (nxml-text))) . -747) (undo-tree-id652 . -3) (undo-tree-id653 . -3) (undo-tree-id654 . -3) (undo-tree-id655 . -3) (undo-tree-id656 . -3) (undo-tree-id657 . -3) 750) nil (25409 23071 989520 372000) 0 nil])
([nil nil ((#("use " 0 4 (fontified t face (nxml-text))) . -743) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) 747) nil (25409 23071 989518 233000) 0 nil])
([nil nil ((#("style " 0 6 (fontified t face (nxml-text))) . -737) (undo-tree-id634 . -6) (undo-tree-id635 . -6) (undo-tree-id636 . -6) (undo-tree-id637 . -6) (undo-tree-id638 . -6) (undo-tree-id639 . -6) (undo-tree-id640 . -6) (undo-tree-id641 . -6) (undo-tree-id642 . -6) (undo-tree-id643 . -6) 743) nil (25409 23071 989514 976000) 0 nil])
([nil nil ((#("Common " 0 7 (fontified t face (nxml-text))) . -730) (undo-tree-id622 . -7) (undo-tree-id623 . -7) (undo-tree-id624 . -7) (undo-tree-id625 . -7) (undo-tree-id626 . -7) (undo-tree-id627 . -7) (undo-tree-id628 . -7) (undo-tree-id629 . -7) (undo-tree-id630 . -7) (undo-tree-id631 . -7) (undo-tree-id632 . -7) (undo-tree-id633 . -7) 737) nil (25409 23071 989511 693000) 0 nil])
([nil nil ((730 . 751)) nil (25409 23071 989507 406000) 0 nil])
([nil nil ((751 . 767)) nil (25409 23071 989506 994000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face (nxml-text))) . -765) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (#(" " 0 1 (fontified t face (nxml-text))) . -766) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) 767) nil (25409 23071 989506 513000) 0 nil])
([nil nil ((#("as" 0 1 (fontified t face (nxml-text)) 1 2 (fontified t face (nxml-text))) . -763) (undo-tree-id590 . -2) (undo-tree-id591 . -2) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -2) (undo-tree-id595 . -1) (undo-tree-id596 . -2) (undo-tree-id597 . -2) (undo-tree-id598 . -2) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -2) (undo-tree-id602 . -2) (undo-tree-id603 . -2) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -2) 765) nil (25409 23071 989502 598000) 0 nil])
([nil nil ((#("aimed " 0 1 (fontified t face (nxml-text)) 1 2 (fontified t face (nxml-text)) 2 3 (fontified t face (nxml-text)) 3 4 (fontified t face (nxml-text)) 4 5 (fontified t face (nxml-text)) 5 6 (fontified t face (nxml-text))) . -757) (undo-tree-id551 . -6) (undo-tree-id552 . -6) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -2) (undo-tree-id556 . -1) (undo-tree-id557 . -2) (undo-tree-id558 . -3) (undo-tree-id559 . -2) (undo-tree-id560 . -3) (undo-tree-id561 . -4) (undo-tree-id562 . -3) (undo-tree-id563 . -4) (undo-tree-id564 . -5) (undo-tree-id565 . -4) (undo-tree-id566 . -5) (undo-tree-id567 . -6) (undo-tree-id568 . -6) (undo-tree-id569 . -6) (undo-tree-id570 . -6) (undo-tree-id571 . -6) (undo-tree-id572 . -6) (undo-tree-id573 . -6) (undo-tree-id574 . -6) (undo-tree-id575 . -6) (undo-tree-id576 . -6) (undo-tree-id577 . -6) (undo-tree-id578 . -6) (undo-tree-id579 . -6) (undo-tree-id580 . -6) (undo-tree-id581 . -6) (undo-tree-id582 . -6) (undo-tree-id583 . -6) (undo-tree-id584 . -6) (undo-tree-id585 . -6) (undo-tree-id586 . -6) (undo-tree-id587 . -6) (undo-tree-id588 . -6) (undo-tree-id589 . -6) 763) nil (25409 23071 989495 597000) 0 nil])
([nil nil ((757 . 770)) nil (25409 23071 989480 929000) 0 nil])
([nil nil ((793 . 795) (784 . 789) (#(" " 0 1 (fontified t face (nxml-text))) . 784) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (770 . 789)) nil (25409 23071 989480 562000) 0 nil])
([nil nil ((795 . 798)) nil (25409 23071 989479 332000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (nxml-text))) . 784) (#(" " 0 1 (fontified t face (nxml-text))) . 784) (#(" " 0 1 (fontified t face (nxml-text))) . 784) (#("
" 0 1 (fontified t face (nxml-text))) . 784)) nil (25409 23071 989478 833000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face (nxml-text))) . -772) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) 773) nil (25409 23071 989478 351000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face (nxml-text))) . -747) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) 748) nil (25409 23071 989476 747000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face (nxml-text))) . -821) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("4" 0 1 (fontified t face (nxml-text))) . -822) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("-" 0 1 (fontified t face (nxml-text))) . -823) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("1" 0 1 (fontified t face (nxml-text))) . -824) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("4" 0 1 (fontified t face (nxml-text))) . -825) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (#("T" 0 1 (fontified t face (nxml-text))) . -826) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (#("1" 0 1 (fontified t face (nxml-text))) . -827) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#("3" 0 1 (fontified t face (nxml-text))) . -828) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (#(":" 0 1 (fontified t face (nxml-text))) . -829) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("0" 0 1 (fontified t face (nxml-text))) . -830) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("3" 0 1 (fontified t face (nxml-text))) . -831) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (#(":" 0 1 (fontified t face (nxml-text))) . -832) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (#("0" 0 1 (fontified t face (nxml-text))) . -833) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (#("3" 0 1 (fontified t face (nxml-text))) . -834) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (#("+" 0 1 (fontified t face (nxml-text))) . -835) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (#("0" 0 1 (fontified t face (nxml-text))) . -836) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (#("0" 0 1 (fontified t face (nxml-text))) . -837) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (#(":" 0 1 (fontified t face (nxml-text))) . -838) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (#("0" 0 1 (fontified t face (nxml-text))) . -839) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (#("0" 0 1 (fontified t face (nxml-text))) . -840) (undo-tree-id539 . -1) 841) nil (25409 23071 989467 979000) 0 nil])
([nil nil ((821 . 826)) nil (25409 23071 987848 901000) 0 nil])
([nil nil ((1006 . 1009)) nil (25409 23071 987848 542000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -1007) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (6642 . 6643) ("        " . 6642) (6630 . 6633) ("          " . 6630) (6616 . 6621) ("            " . 6616) (6600 . 6607) ("              " . 6600) (6589 . 6591) ("                " . 6589) (6537 . 6541) ("                  " . 6537) (6523 . 6527) ("                  " . 6523) (6509 . 6515) ("                    " . 6509) (6458 . 6466) ("                      " . 6458) (6445 . 6451) ("                    " . 6445) (6433 . 6439) ("                    " . 6433) (6399 . 6407) ("                      " . 6399) (6370 . 6376) ("                    " . 6370) (6357 . 6361) ("                  " . 6357) (6333 . 6335) ("                " . 6333) (6286 . 6288) ("                " . 6286) (6256 . 6263) ("              " . 6256) (6183 . 6190) ("              " . 6183) (6156 . 6161) ("            " . 6156) (6088 . 6093) ("            " . 6088) (6062 . 6065) ("          " . 6062) (5982 . 5985) ("          " . 5982) (5974 . 5975) ("        " . 5974) (5962 . 5963) ("        " . 5962) (5950 . 5953) ("          " . 5950) (5935 . 5940) ("            " . 5935) (5920 . 5927) ("              " . 5920) (5888 . 5890) ("                " . 5888) (5874 . 5881) ("              " . 5874) (5856 . 5863) ("              " . 5856) (5831 . 5833) ("                " . 5831) (5799 . 5806) ("              " . 5799) (5786 . 5793) ("              " . 5786) (5735 . 5737) ("                " . 5735) (5708 . 5715) ("              " . 5708) (5694 . 5699) ("            " . 5694) (5626 . 5631) ("            " . 5626) (5600 . 5603) ("          " . 5600) (5566 . 5569) ("          " . 5566) (5472 . 5475) ("          " . 5472) (5361 . 5362) ("        " . 5361) (5349 . 5350) ("        " . 5349) (5337 . 5340) ("          " . 5337) (5322 . 5327) ("            " . 5322) (5307 . 5314) ("              " . 5307) (5279 . 5281) ("                " . 5279) (5265 . 5272) ("              " . 5265) (5252 . 5259) ("              " . 5252) (5215 . 5217) ("                " . 5215) (5176 . 5183) ("              " . 5176) (5162 . 5167) ("            " . 5162) (5094 . 5099) ("            " . 5094) (5068 . 5071) ("          " . 5068) (5030 . 5031) ("        " . 5030) (5018 . 5019) ("        " . 5018) (5006 . 5009) ("          " . 5006) (4975 . 4980) ("            " . 4975) (4941 . 4946) ("            " . 4941) (4927 . 4932) ("            " . 4927) (4911 . 4918) ("              " . 4911) (4883 . 4885) ("                " . 4883) (4818 . 4820) ("                " . 4818) (4789 . 4796) ("              " . 4789) (4757 . 4764) ("              " . 4757) (4730 . 4735) ("            " . 4730) (4682 . 4687) ("            " . 4682) (4656 . 4659) ("          " . 4656) (4612 . 4613) ("        " . 4612) (4600 . 4601) ("        " . 4600) (4588 . 4591) ("          " . 4588) (4574 . 4579) ("            " . 4574) (4520 . 4527) ("              " . 4520) (4487 . 4494) ("              " . 4487) (4460 . 4465) ("            " . 4460) (4392 . 4397) ("            " . 4392) (4366 . 4369) ("          " . 4366) (4341 . 4342) ("        " . 4341) (4329 . 4330) ("        " . 4329) (4317 . 4320) ("          " . 4317) (4303 . 4308) ("            " . 4303) (4287 . 4294) ("              " . 4287) (4276 . 4278) ("                " . 4276) (4248 . 4252) ("                  " . 4248) (4206 . 4210) ("                  " . 4206) (4182 . 4184) ("                " . 4182) (4154 . 4156) ("                " . 4154) (4124 . 4131) ("              " . 4124) (4108 . 4115) ("              " . 4108) (4075 . 4077) ("                " . 4075) (4050 . 4052) ("                " . 4050) (3975 . 3977) ("                " . 3975) (3945 . 3952) ("              " . 3945) (3920 . 3927) ("              " . 3920) (3893 . 3898) ("            " . 3893) (3825 . 3830) ("            " . 3825) (3799 . 3802) ("          " . 3799) (3692 . 3693) ("        " . 3692) (3685 . 3686) ("        " . 3685) (3673 . 3676) ("          " . 3673) (3642 . 3647) ("            " . 3642) (3628 . 3633) ("            " . 3628) (3590 . 3597) ("              " . 3590) (3520 . 3527) ("              " . 3520) (3492 . 3497) ("            " . 3492) (3467 . 3470) ("          " . 3467) (3363 . 3364) ("        " . 3363) (2687 . 2688) ("        " . 2687) (2617 . 2618) ("        " . 2617) (2564 . 2565) ("        " . 2564) (2534 . 2537) ("          " . 2534) (2526 . 2527) ("        " . 2526) (2519 . 2520) ("        " . 2519) (2507 . 2510) ("          " . 2507) (2466 . 2471) ("            " . 2466) (2417 . 2422) ("            " . 2417) (2392 . 2395) (#("          " 0 10 (fontified t)) . 2392) (2365 . 2366) (#("        " 0 8 (fontified t)) . 2365) (1989 . 1990) (#("        " 0 5 (fontified t) 5 8 (fontified t)) . 1989) (1955 . 1956) (#("        " 0 8 (fontified t)) . 1955) (1927 . 1930) (#("          " 0 10 (fontified t)) . 1927) (1875 . 1878) (#("          " 0 6 (fontified t) 6 10 (fontified t)) . 1875) (1837 . 1840) (#("          " 0 4 (fontified t) 4 10 (fontified t)) . 1837) (1811 . 1812) (#("        " 0 8 (fontified t)) . 1811) (1667 . 1668) (#("        " 0 8 (fontified t)) . 1667) (1633 . 1634) (#("        " 0 8 (fontified t)) . 1633) (1605 . 1608) (#("          " 0 10 (fontified t)) . 1605) (1579 . 1580) (#("        " 0 8 (fontified t)) . 1579) (1257 . 1258) (#("        " 0 8 (fontified t)) . 1257) (1229 . 1230) (#("        " 0 8 (fontified t)) . 1229) 1009) nil (25409 23071 987823 370000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . 1085) (#("l" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("a" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("-" 0 1 (fontified t)) . 1085) (#("t" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("e" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#(" " 0 1 (fontified t)) . 1085) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 1085) (#("1" 0 1 (fontified t)) . 1085) (#("1" 0 1 (fontified t)) . 1085) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 1085) (#("=" 0 1 (fontified t)) . 1085) (#("n" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("m" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("-" 0 1 (fontified t)) . 1085) (#("l" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("a" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("-" 0 1 (fontified t)) . 1085) (#("t" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("e" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (t 25409 23071 997199 198000)) nil (25409 40265 657947 766000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("a" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("t" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("n" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#(" " 0 1 (fontified t)) . 1085) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 1085) (#("1" 0 1 (fontified t)) . 1085) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 1085) (#("=" 0 1 (fontified t)) . 1085) (#("t" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("s" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("r" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("f" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("-" 0 1 (fontified t)) . 1085) (#("e" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("s" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("u" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085)) nil (25409 40265 657944 935000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1085) (#("." 0 1 (fontified t)) . 1085) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 1085) (#("=" 0 1 (fontified t)) . 1085) (#("h" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("t" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("w" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("-" 0 1 (fontified t)) . 1085) (#("e" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("z" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 1085)) nil (25409 40265 657942 983000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 1086) (#("=" 0 1 (fontified t face font-lock-string-face)) . 1086) (#("r" 0 1 (fontified t face (nxml-attribute-local-name font-lock-string-face))) . 1086) (#("e" 0 1 (fontified t face (nxml-attribute-local-name font-lock-string-face))) . 1086) (#("t" 0 1 (fontified t face (nxml-attribute-local-name font-lock-string-face))) . 1086) (#("i" 0 1 (fontified t face (nxml-attribute-local-name font-lock-string-face))) . 1086) (#("m" 0 1 (fontified t face (nxml-attribute-local-name font-lock-string-face))) . 1086) (#("i" 0 1 (fontified t face (nxml-attribute-local-name font-lock-string-face))) . 1086) (#("l" 0 1 (fontified t face (nxml-attribute-local-name font-lock-string-face))) . 1086) (#("e" 0 1 (fontified t face (nxml-attribute-local-name font-lock-string-face))) . 1086) (#("d" 0 1 (fontified t face (nxml-attribute-local-name font-lock-string-face))) . 1086) (#(" " 0 1 (fontified t face font-lock-string-face)) . 1086)) nil (25409 40265 657940 740000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -1085) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . 1) (undo-tree-id879 . -1) 1086) nil (25409 40265 657939 409000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 1085) (#(" " 0 1 (fontified t)) . 1085) (#("," 0 1 (fontified t)) . 1085)) nil (25409 40265 657937 345000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1084) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) 1085) nil (25409 40265 657935 91000) 0 nil])
([nil nil ((2679 . 2682) (t 25409 40265 665254 514000)) nil (25409 40506 504837 167000) 0 nil])
([nil nil ((2909 . 2912)) nil (25409 40506 504836 833000) 0 nil])
([nil nil ((#("    <!-- Reference for book, chapter, report layouts: https://doi.org/10.1103/PhysRevX.10.011010 -->" 0 4 (fontified t) 4 5 (syntax-table (2097163) fontified t face font-lock-comment-delimiter-face) 5 9 (fontified t face font-lock-comment-delimiter-face) 9 96 (fontified t face font-lock-comment-face) 96 99 (fontified t face font-lock-comment-delimiter-face) 99 100 (syntax-table (2097164) fontified t face font-lock-comment-delimiter-face)) . 2975)) nil (25409 40506 504836 626000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2975)) nil (25409 40506 504836 412000) 0 nil])
([nil nil ((#("    <!-- Reference for arXiv: https://doi.org/10.1103/PhysRevX.10.011004 -->" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t face font-lock-comment-delimiter-face syntax-table (2097163)) 5 9 (fontified t face font-lock-comment-delimiter-face) 9 72 (fontified t face font-lock-comment-face) 72 75 (fontified t face font-lock-comment-delimiter-face) 75 76 (fontified t face font-lock-comment-delimiter-face syntax-table (2097164))) . 2975)) nil (25409 40506 504836 141000) 0 nil])
([nil nil ((2975 . 2979)) nil (25409 40506 504835 914000) 0 nil])
([nil nil ((2979 . 2993)) nil (25409 40506 504835 405000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -2986) (undo-tree-id922 . -1) 2987) nil (25409 40506 504834 896000) 0 nil])
([nil nil ((2988 . 3003)) nil (25409 40506 504833 675000) 0 nil])
([nil nil ((#("    <!-- Books and book-like -->" 0 4 (fontified t) 4 5 (fontified t syntax-table (2097163) face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 7 (fontified t face font-lock-comment-delimiter-face) 7 8 (fontified t face font-lock-comment-delimiter-face) 8 9 (fontified t face font-lock-comment-delimiter-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face) 25 26 (fontified t face font-lock-comment-face) 26 27 (fontified t face font-lock-comment-face) 27 28 (fontified t face font-lock-comment-face) 28 29 (fontified t face font-lock-comment-delimiter-face) 29 30 (fontified t face font-lock-comment-delimiter-face) 30 31 (fontified t face font-lock-comment-delimiter-face) 31 32 (fontified t syntax-table (2097164) face font-lock-comment-delimiter-face)) . 2975) (undo-tree-id921 . -13)) nil (25409 40506 504833 177000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2975)) nil (25409 40506 504831 901000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -3097) (undo-tree-id920 . -1) 3098) nil (25409 40506 504831 408000) 0 nil])
([nil nil ((3097 . 3098)) nil (25409 40506 504830 274000) 0 nil])
([nil nil ((#("      <text variable=\"citation-number\" prefix=\"[\" suffix=\"]\"/>" 0 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 20 (fontified t face (nxml-attribute-local-name)) 20 21 (fontified t) 21 38 (fontified t face font-lock-string-face) 38 39 (fontified t) 39 45 (fontified t face (nxml-attribute-local-name)) 45 46 (fontified t) 46 49 (fontified t face font-lock-string-face) 49 50 (fontified t) 50 56 (fontified t face (nxml-attribute-local-name)) 56 57 (fontified t) 57 60 (fontified t face font-lock-string-face) 60 61 (fontified t face (nxml-tag-slash)) 61 62 (fontified t face (nxml-tag-delimiter))) . 2999)) nil (25409 40506 504829 664000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2999)) nil (25409 40506 504828 887000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2986) (undo-tree-id909 . -1) (#("s" 0 1 (fontified t)) . -2987) (undo-tree-id910 . -1) (#("u" 0 1 (fontified t)) . -2988) (undo-tree-id911 . -1) (#("f" 0 1 (fontified t)) . -2989) (undo-tree-id912 . -1) (#("f" 0 1 (fontified t)) . -2990) (undo-tree-id913 . -1) (#("i" 0 1 (fontified t)) . -2991) (undo-tree-id914 . -1) (#("x" 0 1 (fontified t)) . -2992) (undo-tree-id915 . -1) (#("=" 0 1 (fontified t)) . -2993) (undo-tree-id916 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -2994) (undo-tree-id917 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -2995) (undo-tree-id918 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -2996) (undo-tree-id919 . -1) 2997) nil (25409 40506 504827 320000) 0 nil])
([nil nil ((3043 . 3045)) nil (25409 40506 504820 50000) 0 nil])
([nil nil ((3045 . 3059)) nil (25409 40506 504819 543000) 0 nil])
([nil nil ((3390 . 3391) (#("	" 0 1 (fontified t face (nxml-tag-delimiter))) . 3389) (undo-tree-id908 . -1) (3388 . 3391)) nil (25409 40506 504818 886000) 0 nil])
([nil nil ((3391 . 3396)) nil (25409 40506 504817 966000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face (nxml-text))) . -3391) (undo-tree-id907 . -1) 3392) nil (25409 40506 504817 419000) 0 nil])
([nil nil ((3391 . 3392)) nil (25409 40506 504816 35000) 0 nil])
([nil nil ((3396 . 3408)) nil (25409 40506 504815 706000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-comment-face)) . -3399) (undo-tree-id906 . -1) 3400) nil (25409 40506 504815 207000) 0 nil])
([nil nil ((3407 . 3424)) nil (25409 40506 504814 199000) 0 nil])
([nil nil ((3424 . 3430)) nil (25409 40506 504813 851000) 0 nil])
([nil nil ((#("	<else-if type=\"patent\">" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t) 15 23 (fontified t face font-lock-string-face) 23 24 (fontified t face (nxml-tag-delimiter))) . 4080)) nil (25409 40506 504813 475000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4080)) nil (25409 40506 504813 17000) 0 nil])
([nil nil ((#("	  <group delimiter=\", \">" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 24 (fontified t face font-lock-string-face) 24 25 (fontified t face (nxml-tag-delimiter))) . 4080)) nil (25409 40506 504812 619000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4080)) nil (25409 40506 504812 202000) 0 nil])
([nil nil ((#("	    <text variable=\"title\" text-case=\"title\" font-style=\"italic\"/>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 27 (fontified t face font-lock-string-face) 27 28 (fontified t) 28 37 (fontified t face (nxml-attribute-local-name)) 37 38 (fontified t) 38 45 (fontified t face font-lock-string-face) 45 46 (fontified t) 46 56 (fontified t face (nxml-attribute-local-name)) 56 57 (fontified t) 57 65 (fontified t face font-lock-string-face) 65 66 (fontified t face (nxml-tag-slash)) 66 67 (fontified t face (nxml-tag-delimiter))) . 4080)) nil (25409 40506 504811 680000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4080)) nil (25409 40506 504811 165000) 0 nil])
([nil nil ((#("	    <group delimiter=\" \">" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 16 (fontified t face (nxml-attribute-local-name)) 16 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-delimiter))) . 4080)) nil (25409 40506 504810 799000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4080)) nil (25409 40506 504810 461000) 0 nil])
([nil nil ((#("	      <text variable=\"number\"/>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t) 13 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 30 (fontified t face font-lock-string-face) 30 31 (fontified t face (nxml-tag-slash)) 31 32 (fontified t face (nxml-tag-delimiter))) . 4080)) nil (25409 40506 504810 159000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4080)) nil (25409 40506 504809 693000) 0 nil])
([nil nil ((#("	      <text macro=\"day-date\" prefix=\"(\" suffix=\")\"/>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t) 13 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t) 19 29 (fontified t face font-lock-string-face) 29 30 (fontified t) 30 36 (fontified t face (nxml-attribute-local-name)) 36 37 (fontified t) 37 40 (fontified t face font-lock-string-face) 40 41 (fontified t) 41 47 (fontified t face (nxml-attribute-local-name)) 47 48 (fontified t) 48 51 (fontified t face font-lock-string-face) 51 52 (fontified t face (nxml-tag-slash)) 52 53 (fontified t face (nxml-tag-delimiter))) . 4080)) nil (25409 40506 504809 157000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4080)) nil (25409 40506 504808 656000) 0 nil])
([nil nil ((#("	    </group>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-tag-slash)) 7 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 4080)) nil (25409 40506 504808 88000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4080)) nil (25409 40506 504807 621000) 0 nil])
([nil nil ((#("	  </group>" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 5 (fontified t face (nxml-tag-slash)) 5 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 4080)) nil (25409 40506 504807 259000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4080)) nil (25409 40506 504806 873000) 0 nil])
([nil nil ((#("	</else-if>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-slash)) 3 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 4080) (undo-tree-id904 . 8) (undo-tree-id905 . -10)) nil (25409 40506 504806 280000) 0 nil])
([nil nil ((4081 . 4082) (#("	" 0 1 (fontified nil)) . 4080) (4080 . 4081) (4080 . 4081)) nil (25409 40506 504804 307000) 0 nil])
([nil nil ((4082 . 4097)) nil (25409 40506 504803 225000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -4091) (undo-tree-id903 . -1) 4092) nil (25409 40506 504802 492000) 0 nil])
([nil nil ((4091 . 4092)) nil (25409 40506 504801 465000) 0 nil])
([nil nil ((4848 . 4849) (#("	" 0 1 (fontified t face (nxml-tag-delimiter))) . 4847) (undo-tree-id902 . -1) (4846 . 4849)) nil (25409 40506 504800 986000) 0 nil])
([nil nil ((4849 . 4866)) nil (25409 40506 504799 900000) 0 nil])
([nil nil ((5481 . 5482) (#("	" 0 1 (fontified t face (nxml-tag-delimiter))) . 5480) (undo-tree-id901 . -1) (5479 . 5482)) nil (25409 40506 504799 376000) 0 nil])
([nil nil ((5482 . 5503)) nil (25409 40506 504798 457000) 0 nil])
([nil nil ((5503 . 5507)) nil (25409 40506 504797 913000) 0 nil])
([nil nil ((5514 . 5533)) nil (25409 40506 504797 518000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-string-face)) . -5529) (undo-tree-id900 . -1) 5530) nil (25409 40506 504796 908000) 0 nil])
([nil nil ((5532 . 5533)) nil (25409 40506 504795 639000) 0 nil])
([nil nil ((5525 . 5527)) nil (25409 40506 504795 150000) 0 nil])
([nil nil ((5527 . 5533)) nil (25409 40506 504794 689000) 0 nil])
([nil nil ((5540 . 5558)) nil (25409 40506 504794 159000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-string-face)) . -5554) (undo-tree-id896 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -5555) (undo-tree-id897 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -5556) (undo-tree-id898 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -5557) (undo-tree-id899 . -1) 5558) nil (25409 40506 504793 123000) 0 nil])
([nil nil ((5554 . 5558)) nil (25409 40506 504790 231000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5558) (undo-tree-id895 . -1) 5559) nil (25409 40506 504789 637000) 0 nil])
([nil nil ((#("	  <!--article-journal article-magazine article-newspaper review review-book-->" 0 3 (fontified t) 3 4 (syntax-table (2097163) fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 76 (fontified t face font-lock-comment-face) 76 78 (fontified t face font-lock-comment-delimiter-face) 78 79 (syntax-table (2097164) fontified t face font-lock-comment-delimiter-face)) . 5560)) nil (25409 40506 504788 617000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5560)) nil (25409 40506 504788 159000) 0 nil])
([nil nil ((6147 . 6150)) nil (25409 40506 504787 487000) 0 nil])
([nil nil ((6153 . 6154) (#("	" 0 1 (fontified t face (nxml-tag-delimiter))) . 6152) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (6151 . 6154)) nil (25409 40506 504786 936000) 0 nil])
([nil nil ((6154 . 6174)) nil (25409 40506 504783 574000) 0 nil])
([nil nil ((6174 . 6176)) nil (25409 40506 504783 216000) 0 nil])
([nil nil ((6176 . 6183)) nil (25409 40506 504782 742000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face (nxml-element-local-name))) . -6178) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) 6179) nil (25409 40506 504782 354000) 0 nil])
([nil nil ((6182 . 6186)) nil (25409 40506 504780 43000) 0 nil])
([nil nil ((6186 . 6187)) nil (25409 40506 504779 672000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -6184) (undo-tree-id880 . -2) (undo-tree-id881 . -2) (undo-tree-id882 . -2) (undo-tree-id883 . -2) (undo-tree-id884 . -2) (undo-tree-id885 . -2) (6187 . 6188)) nil (25409 40506 504778 910000) 0 nil])
([nil nil ((6186 . 6191)) nil (25409 40506 504770 820000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -2908) (#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -2680) 6191) nil (25409 40506 504766 679000) 0 nil])
([nil nil ((#("prefix=\"(\" suffix=\")\"" 0 6 (fontified t face (nxml-attribute-local-name)) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t) 11 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face)) . 2030) (undo-tree-id993 . -21) (undo-tree-id994 . -21) (undo-tree-id995 . -21) (undo-tree-id996 . -21) (undo-tree-id997 . -21) 2051 (t 25409 40506 512372 734000)) nil (25410 60472 830449 186000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2030)) nil (25410 60472 830446 575000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-string-face)) . -1929) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1930) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1931) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -1932) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -1933) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1934) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1935) (undo-tree-id992 . -1) 1936) nil (25410 60472 830442 82000) 0 nil])
([nil nil ((6149 . 6153) (t 25410 60472 837076 619000)) nil (25410 60531 611575 662000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6214 . 6215) (nil fontified nil 6214 . 6215) (nil fontified nil 6213 . 6214) (nil fontified nil 6205 . 6213) (nil fontified nil 6204 . 6205) (nil fontified nil 6194 . 6204) (nil fontified nil 6193 . 6194) (nil fontified nil 6186 . 6193) (nil fontified nil 6185 . 6186) (nil fontified nil 6176 . 6185) (nil fontified nil 6175 . 6176) (nil fontified nil 6173 . 6175) (nil fontified nil 6171 . 6173) (nil fontified nil 6168 . 6171) (nil fontified nil 6167 . 6168) (nil fontified nil 6159 . 6167) (nil fontified nil 6158 . 6159) (nil fontified nil 6154 . 6158) (nil fontified nil 6153 . 6154) (6153 . 6215)) nil (25410 60531 611572 864000) 0 nil])
([nil nil ((6137 . 6158) (t 25410 60531 619760 812000)) nil (25410 60659 848200 67000) 0 nil])
([nil nil ((6158 . 6159)) nil (25410 60659 848199 529000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-comment-face)) . -6151) (undo-tree-id1050 . -1) 6152) nil (25410 60659 848199 157000) 0 nil])
([nil nil ((2954 . 2961)) nil (25410 60659 848198 606000) 0 nil])
([nil nil ((2961 . 2968)) nil (25410 60659 848198 407000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -2966) (undo-tree-id1048 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -2967) (undo-tree-id1049 . -1) 2968) nil (25410 60659 848198 17000) 0 nil])
([nil nil ((2966 . 2987)) nil (25410 60659 848197 233000) 0 nil])
([nil nil ((2987 . 2998)) nil (25410 60659 848196 891000) 0 nil])
([nil nil ((2998 . 3005)) nil (25410 60659 848196 684000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2998) (undo-tree-id1041 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -2999) (undo-tree-id1042 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3000) (undo-tree-id1043 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3001) (undo-tree-id1044 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3002) (undo-tree-id1045 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3003) (undo-tree-id1046 . -1) (#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . -3004) (undo-tree-id1047 . -1) 3005) nil (25410 60659 848195 847000) 0 nil])
([nil nil ((3039 . 3046)) nil (25410 60659 848193 134000) 0 nil])
([nil nil ((6265 . 6268) (#(" " 0 1 (fontified t)) . 6265) (6286 . 6287)) nil (25410 60659 848192 820000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (nxml-text))) . -6288) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) 6289) nil (25410 60659 848192 193000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face (nxml-attribute-local-name))) . 6265) (undo-tree-id1033 . 1) (#("	" 0 1 (fontified t)) . 6265) (undo-tree-id1034 . 1) (#("	" 0 1 (fontified t)) . 6265) (undo-tree-id1035 . 1) (#("
" 0 1 (fontified t)) . 6265)) nil (25410 60659 848188 797000) 0 nil])
([nil nil ((6265 . 6267)) nil (25410 60659 848187 529000) 0 nil])
([nil nil ((6285 . 6298) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 6285) (6285 . 6286)) nil (25410 60659 848187 136000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t face font-lock-string-face)) . -6296) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) 6297) nil (25410 60659 848186 529000) 0 nil])
([nil nil ((6296 . 6297)) nil (25410 60659 848185 175000) 0 nil])
([nil nil ((6221 . 6225)) nil (25410 60659 848184 972000) 0 nil])
([nil nil ((6225 . 6245)) nil (25410 60659 848184 754000) 0 nil])
([nil nil ((#("o" 0 1 (fontified nil face (nxml-attribute-local-name))) . 6241) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . 1) (6240 . 6241) (#("r" 0 1 (fontified t face (nxml-attribute-local-name))) . 6239) (6240 . 6241)) nil (25410 60659 848184 327000) 0 nil])
([nil nil ((6245 . 6246)) nil (25410 60659 848182 509000) 0 nil])
([nil nil ((6250 . 6252) 6271) nil (25410 60659 848182 245000) 0 nil])
([nil nil ((6315 . 6317) 6327) nil (25410 60659 848181 895000) 0 nil])
([nil nil ((6329 . 6335)) nil (25410 60659 848181 540000) 0 nil])
([nil nil ((6335 . 6336)) nil (25410 60659 848181 287000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -6333) (undo-tree-id1019 . -2) (undo-tree-id1020 . -2) (undo-tree-id1021 . -2) (undo-tree-id1022 . -2) (undo-tree-id1023 . -2) (undo-tree-id1024 . -2) (6336 . 6337)) nil (25410 60659 848180 897000) 0 nil])
([nil nil ((6335 . 6340)) nil (25410 60659 848178 370000) 0 nil])
([nil nil ((6340 . 6341)) nil (25410 60659 848178 160000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6312) (undo-tree-id1009 . 1) (#(" " 0 1 (fontified t)) . 6312) (undo-tree-id1010 . 1) (#("	" 0 1 (fontified t)) . 6312) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . 1) (#("	" 0 1 (fontified t)) . 6312) (undo-tree-id1018 . 1) (#("
" 0 1 (fontified t)) . 6312)) nil (25410 60659 848177 554000) 0 nil])
([nil nil ((6292 . 6297) (#(" " 0 1 (fontified t)) . 6292) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (6312 . 6313)) nil (25410 60659 848173 556000) 0 nil])
([nil nil ((6292 . 6293)) nil (25410 60659 848171 292000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 6293) (undo-tree-id998 . 1) (#(" " 0 1 (fontified t)) . 6293) (undo-tree-id999 . 1) (#("	" 0 1 (fontified t)) . 6293) (undo-tree-id1000 . 1) (#("	" 0 1 (fontified t)) . 6293) (undo-tree-id1001 . 1) (#("
" 0 1 (fontified t)) . 6293) (undo-tree-id1002 . 1)) nil (25410 60659 848170 472000) 0 nil])
([nil nil ((#("	    " 0 5 (fontified nil)) . 6326) (6326 . 6331) (6326 . 6327)) nil (25410 60659 848164 370000) 0 nil])
([nil nil ((6326 . 6331)) nil (25410 60659 848164 13000) 0 nil])
([nil nil ((6331 . 6352)) nil (25410 60659 848163 724000) 0 nil])
([nil nil ((6352 . 6353)) nil (25410 60659 848163 498000) 0 nil])
([nil nil ((6353 . 6354)) nil (25410 60659 848162 990000) 0 nil])
([nil nil ((6352 . 6363)) nil (25410 60659 848162 615000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -3040) 6363) nil (25410 60659 848159 459000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face (nxml-attribute-local-name))) . -6229) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) 6230 (t 25410 60659 854930 886000)) nil (25410 60668 298335 525000) 0 nil])
([nil nil ((6229 . 6230)) nil (25410 60668 298310 539000) 0 nil])
([nil nil ((#("separator" 0 1 (fontified t face (nxml-attribute-local-name)) 1 2 (fontified t face (nxml-attribute-local-name)) 2 3 (fontified t face (nxml-attribute-local-name)) 3 4 (fontified t face (nxml-attribute-local-name)) 4 5 (fontified t face (nxml-attribute-local-name)) 5 6 (fontified t face (nxml-attribute-local-name)) 6 7 (fontified t face (nxml-attribute-local-name)) 7 8 (fontified t face (nxml-attribute-local-name)) 8 9 (fontified t face (nxml-attribute-local-name))) . -6226) (undo-tree-id1058 . -9) (undo-tree-id1059 . -9) (undo-tree-id1060 . -9) (undo-tree-id1061 . -9) (undo-tree-id1062 . -9) (undo-tree-id1063 . -9) (undo-tree-id1064 . -9) 6235 (t 25410 60668 301494 726000)) nil (25410 60768 597619 312000) 0 nil])
([nil nil ((6226 . 6235)) nil (25410 60768 597610 80000) 0 nil])
([nil nil ((#("	    <group delimiter=\", \">" 0 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 26 (fontified t face font-lock-string-face) 26 27 (fontified t face (nxml-tag-delimiter))) . 3201) (undo-tree-id1075 . -27) (t 25410 60768 606940 331000)) nil (25410 60825 33397 745000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3201) (undo-tree-id1073 . 1) (undo-tree-id1074 . -1)) nil (25410 60825 33396 927000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3206) 3201) nil (25410 60825 33395 877000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3274)) nil (25410 60825 33395 507000) 0 nil])
([nil nil ((#("</group>" 0 1 (fontified t face (nxml-tag-delimiter)) 1 2 (fontified t face (nxml-tag-slash)) 2 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-tag-delimiter))) . 3310) (undo-tree-id1072 . -8)) nil (25410 60825 33395 138000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3310) (undo-tree-id1070 . 1) (undo-tree-id1071 . -1)) nil (25410 60825 33394 376000) 0 nil])
([nil nil ((#("	    " 0 1 (fontified t) 1 5 (fontified t)) . -3310)) nil (25410 60825 33392 619000) 0 nil])
([nil nil ((3271 . 3281) (3246 . 3251) (#(" " 0 1 (fontified t)) . 3246) (3266 . 3267)) nil (25410 60825 33392 261000) 0 nil])
([nil nil ((3246 . 3247)) nil (25410 60825 33391 756000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3247) (undo-tree-id1065 . 1) (#(" " 0 1 (fontified t)) . 3247) (undo-tree-id1066 . 1) (#("	" 0 1 (fontified t)) . 3247) (undo-tree-id1067 . 1) (#("	" 0 1 (fontified t)) . 3247) (undo-tree-id1068 . 1) (#("
" 0 1 (fontified t)) . 3247) (undo-tree-id1069 . 1)) nil (25410 60825 33390 817000) 0 nil])
([nil nil ((3313 . 3324)) nil (25410 60825 33385 516000) 0 nil])
([nil nil ((3355 . 3366)) nil (25410 60825 33382 629000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -2034) (undo-tree-id1174 . -1) 2035 (t 25410 60825 42919 924000)) nil (25410 60938 28528 848000) 0 nil])
([nil nil ((2070 . 2081)) nil (25410 60938 28528 167000) 0 nil])
([nil nil ((2140 . 2151)) nil (25410 60938 28527 875000) 0 nil])
([nil nil ((2034 . 2035)) nil (25410 60938 28527 560000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2071) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . 1) (#("." 0 1 (fontified t)) . 2071) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . 1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 2071) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . 1) (#("=" 0 1 (fontified t)) . 2071) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . 1) (#("x" 0 1 (fontified t face (nxml-attribute-local-name))) . 2071) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . 1) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 2071) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . 1) (#("f" 0 1 (fontified t face (nxml-attribute-local-name))) . 2071) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . 1) (#("f" 0 1 (fontified t face (nxml-attribute-local-name))) . 2071) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . 1) (#("u" 0 1 (fontified t face (nxml-attribute-local-name))) . 2071) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . 1) (#("s" 0 1 (fontified t face (nxml-attribute-local-name))) . 2071) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . 1) (#(" " 0 1 (fontified t)) . 2071) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1)) nil (25410 60938 28525 273000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2130) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . 1) (#("." 0 1 (fontified t)) . 2130) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . 1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 2130) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . 1) (#("=" 0 1 (fontified t)) . 2130) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . 1) (#("x" 0 1 (fontified t face (nxml-attribute-local-name))) . 2130) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . 1) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 2130) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . 1) (#("f" 0 1 (fontified t face (nxml-attribute-local-name))) . 2130) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . 1) (#("f" 0 1 (fontified t face (nxml-attribute-local-name))) . 2130) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . 1) (#("u" 0 1 (fontified t face (nxml-attribute-local-name))) . 2130) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . 1) (#("s" 0 1 (fontified t face (nxml-attribute-local-name))) . 2130) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . 1) (#(" " 0 1 (fontified t)) . 2130) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1)) nil (25410 60938 26796 470000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3410 . 3411) (nil fontified nil 3410 . 3411) (nil fontified nil 3409 . 3410) (nil fontified nil 3408 . 3409) (nil fontified nil 3407 . 3408) (nil fontified nil 3406 . 3407) (nil fontified nil 3405 . 3406) (nil fontified nil 3404 . 3405) (nil fontified nil 3403 . 3404) (nil fontified nil 3402 . 3403) (nil fontified nil 3401 . 3402) (nil fontified nil 3400 . 3401) (nil fontified nil 3399 . 3400) (nil fontified nil 3398 . 3399) (nil fontified nil 3397 . 3398) (nil fontified nil 3386 . 3397) (nil fontified nil 3385 . 3386) (nil fontified nil 3380 . 3385) (nil fontified nil 3379 . 3380) (nil fontified nil 3375 . 3379) (nil fontified nil 3374 . 3375) (nil fontified nil 3369 . 3374) (3369 . 3411) (t 25410 60938 34861 263000)) nil (25410 60967 664890 274000) 0 nil])
([nil nil ((#("publisher" 0 9 (fontified t face font-lock-string-face)) . -3387) (undo-tree-id1175 . -9) 3396) nil (25410 60967 664888 221000) 0 nil])
([nil nil ((3387 . 3391)) nil (25410 60967 664881 331000) 0 nil])
([nil nil ((#("macro" 0 5 (fontified t face (nxml-attribute-local-name))) . -3380) (undo-tree-id1196 . -5) (undo-tree-id1197 . -5) (undo-tree-id1198 . -5) (undo-tree-id1199 . -5) (undo-tree-id1200 . -5) (undo-tree-id1201 . -5) (undo-tree-id1202 . -5) 3385 (t 25410 60967 671167 332000)) nil (25410 60980 651297 773000) 0 nil])
([nil nil ((3380 . 3390)) nil (25410 60980 651295 85000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face (nxml-attribute-local-name))) . -3388) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) 3389) nil (25410 60980 651294 428000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face (nxml-attribute-local-name))) . -3386) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) 3387) nil (25410 60980 651288 685000) 0 nil])
([nil nil ((#("bill " 0 5 (fontified t face font-lock-string-face)) . -3083) (undo-tree-id1466 . -5) (undo-tree-id1467 . -5) (undo-tree-id1468 . -5) (undo-tree-id1469 . -5) (undo-tree-id1470 . -5) (undo-tree-id1471 . -5) (undo-tree-id1472 . -5) 3088 (t 25410 60980 657675 984000)) nil (25410 61057 504382 553000) 0 nil])
([nil nil ((#("treaty" 0 6 (fontified t face font-lock-string-face)) . -3150) (undo-tree-id1465 . -6) 3156) nil (25410 61057 504379 541000) 0 nil])
([nil nil ((#("song " 0 5 (fontified t face font-lock-string-face)) . -3145) (undo-tree-id1461 . -5) (undo-tree-id1462 . -5) (undo-tree-id1463 . -5) (undo-tree-id1464 . -5) 3150) nil (25410 61057 504378 880000) 0 nil])
([nil nil ((#("picture " 0 8 (fontified t face font-lock-string-face)) . -3137) (undo-tree-id1454 . -8) (undo-tree-id1455 . -8) (undo-tree-id1456 . -8) (undo-tree-id1457 . -8) (undo-tree-id1458 . -8) (undo-tree-id1459 . -8) (undo-tree-id1460 . -8) 3145) nil (25410 61057 504377 234000) 0 nil])
([nil nil ((#("motion_" 0 7 (fontified t face font-lock-string-face)) . -3130) (undo-tree-id1444 . -7) (undo-tree-id1445 . -7) (undo-tree-id1446 . -7) (undo-tree-id1447 . -7) (undo-tree-id1448 . -7) (undo-tree-id1449 . -7) (undo-tree-id1450 . -7) (undo-tree-id1451 . -7) (undo-tree-id1452 . -7) (undo-tree-id1453 . -7) 3137) nil (25410 61057 504374 46000) 0 nil])
([nil nil ((#("map " 0 4 (fontified t face font-lock-string-face)) . -3126) (undo-tree-id1431 . -4) (undo-tree-id1432 . -4) (undo-tree-id1433 . -4) (undo-tree-id1434 . -4) (undo-tree-id1435 . -4) (undo-tree-id1436 . -4) (undo-tree-id1437 . -4) (undo-tree-id1438 . -4) (undo-tree-id1439 . -4) (undo-tree-id1440 . -4) (undo-tree-id1441 . -4) (undo-tree-id1442 . -4) (undo-tree-id1443 . -4) 3130) nil (25410 61057 504370 17000) 0 nil])
([nil nil ((#("legislation " 0 12 (fontified t face font-lock-string-face)) . -3114) (undo-tree-id1415 . -12) (undo-tree-id1416 . -12) (undo-tree-id1417 . -12) (undo-tree-id1418 . -12) (undo-tree-id1419 . -12) (undo-tree-id1420 . -12) (undo-tree-id1421 . -12) (undo-tree-id1422 . -12) (undo-tree-id1423 . -12) (undo-tree-id1424 . -12) (undo-tree-id1425 . -12) (undo-tree-id1426 . -12) (undo-tree-id1427 . -12) (undo-tree-id1428 . -12) (undo-tree-id1429 . -12) (undo-tree-id1430 . -12) 3126) nil (25410 61057 504365 295000) 0 nil])
([nil nil ((#("case " 0 5 (fontified t face font-lock-string-face)) . -3109) (undo-tree-id1396 . -5) (undo-tree-id1397 . -5) (undo-tree-id1398 . -5) (undo-tree-id1399 . -5) (undo-tree-id1400 . -5) (undo-tree-id1401 . -5) (undo-tree-id1402 . -5) (undo-tree-id1403 . -5) (undo-tree-id1404 . -5) (undo-tree-id1405 . -5) (undo-tree-id1406 . -5) (undo-tree-id1407 . -5) (undo-tree-id1408 . -5) (undo-tree-id1409 . -5) (undo-tree-id1410 . -5) (undo-tree-id1411 . -5) (undo-tree-id1412 . -5) (undo-tree-id1413 . -5) (undo-tree-id1414 . -5) 3114) nil (25410 61057 504358 489000) 0 nil])
([nil nil ((#("legal_" 0 6 (fontified t face font-lock-string-face)) . -3103) (undo-tree-id1374 . -6) (undo-tree-id1375 . -6) (undo-tree-id1376 . -6) (undo-tree-id1377 . -6) (undo-tree-id1378 . -6) (undo-tree-id1379 . -6) (undo-tree-id1380 . -6) (undo-tree-id1381 . -6) (undo-tree-id1382 . -6) (undo-tree-id1383 . -6) (undo-tree-id1384 . -6) (undo-tree-id1385 . -6) (undo-tree-id1386 . -6) (undo-tree-id1387 . -6) (undo-tree-id1388 . -6) (undo-tree-id1389 . -6) (undo-tree-id1390 . -6) (undo-tree-id1391 . -6) (undo-tree-id1392 . -6) (undo-tree-id1393 . -6) (undo-tree-id1394 . -6) (undo-tree-id1395 . -6) 3109) nil (25410 61057 503995 223000) 0 nil])
([nil nil ((#("graphic " 0 8 (fontified t face font-lock-string-face)) . -3095) (undo-tree-id1349 . -8) (undo-tree-id1350 . -8) (undo-tree-id1351 . -8) (undo-tree-id1352 . -8) (undo-tree-id1353 . -8) (undo-tree-id1354 . -8) (undo-tree-id1355 . -8) (undo-tree-id1356 . -8) (undo-tree-id1357 . -8) (undo-tree-id1358 . -8) (undo-tree-id1359 . -8) (undo-tree-id1360 . -8) (undo-tree-id1361 . -8) (undo-tree-id1362 . -8) (undo-tree-id1363 . -8) (undo-tree-id1364 . -8) (undo-tree-id1365 . -8) (undo-tree-id1366 . -8) (undo-tree-id1367 . -8) (undo-tree-id1368 . -8) (undo-tree-id1369 . -8) (undo-tree-id1370 . -8) (undo-tree-id1371 . -8) (undo-tree-id1372 . -8) (undo-tree-id1373 . -8) 3103) nil (25410 61057 503986 605000) 0 nil])
([nil nil ((#("figure " 0 7 (fontified t face font-lock-string-face)) . -3088) (undo-tree-id1319 . -7) (undo-tree-id1320 . -7) (undo-tree-id1321 . -7) (undo-tree-id1322 . -7) (undo-tree-id1323 . -7) (undo-tree-id1324 . -7) (undo-tree-id1325 . -7) (undo-tree-id1326 . -7) (undo-tree-id1327 . -7) (undo-tree-id1328 . -7) (undo-tree-id1329 . -7) (undo-tree-id1330 . -7) (undo-tree-id1331 . -7) (undo-tree-id1332 . -7) (undo-tree-id1333 . -7) (undo-tree-id1334 . -7) (undo-tree-id1335 . -7) (undo-tree-id1336 . -7) (undo-tree-id1337 . -7) (undo-tree-id1338 . -7) (undo-tree-id1339 . -7) (undo-tree-id1340 . -7) (undo-tree-id1341 . -7) (undo-tree-id1342 . -7) (undo-tree-id1343 . -7) (undo-tree-id1344 . -7) (undo-tree-id1345 . -7) (undo-tree-id1346 . -7) (undo-tree-id1347 . -7) (undo-tree-id1348 . -7) 3095) nil (25410 61057 503971 561000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3087) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) 3088) nil (25410 61057 502402 109000) 0 nil])
([nil nil ((#("broadcast " 0 10 (fontified t face font-lock-string-face)) . -3412) (undo-tree-id1273 . -10) (undo-tree-id1274 . -10) (undo-tree-id1275 . -10) (undo-tree-id1276 . -10) (undo-tree-id1277 . -10) (undo-tree-id1278 . -10) (undo-tree-id1279 . -10) 3422) nil (25410 61057 502387 905000) 0 nil])
([nil nil ((#("encyclopedia " 0 13 (fontified t face font-lock-string-face)) . -3449) (undo-tree-id1272 . -13) 3462) nil (25410 61057 502385 229000) 0 nil])
([nil nil ((#("entry-" 0 6 (fontified t face font-lock-string-face)) . -3443) (undo-tree-id1268 . -6) (undo-tree-id1269 . -6) (undo-tree-id1270 . -6) (undo-tree-id1271 . -6) 3449) nil (25410 61057 502384 481000) 0 nil])
([nil nil ((#("dictionary " 0 1 (fontified t face font-lock-string-face) 1 11 (fontified t face font-lock-string-face)) . -3432) (undo-tree-id1259 . -11) (undo-tree-id1260 . -11) (undo-tree-id1261 . -11) (undo-tree-id1262 . -11) (undo-tree-id1263 . -11) (undo-tree-id1264 . -11) (undo-tree-id1265 . -11) (undo-tree-id1266 . -11) (undo-tree-id1267 . -11) 3443) nil (25410 61057 502381 491000) 0 nil])
([nil nil ((#("entry-" 0 6 (fontified t face font-lock-string-face)) . -3426) (undo-tree-id1243 . 6) (undo-tree-id1244 . -5) (undo-tree-id1245 . -6) (undo-tree-id1246 . -6) (undo-tree-id1247 . -6) (undo-tree-id1248 . -6) (undo-tree-id1249 . -6) (undo-tree-id1250 . -6) (undo-tree-id1251 . -6) (undo-tree-id1252 . -6) (undo-tree-id1253 . -6) (undo-tree-id1254 . -6) (undo-tree-id1255 . -6) (undo-tree-id1256 . -6) (undo-tree-id1257 . -6) (undo-tree-id1258 . -6) 3432) nil (25410 61057 502378 492000) 0 nil])
([nil nil ((#("entry " 0 6 (fontified t face font-lock-string-face)) . -3420) (undo-tree-id1224 . -6) (undo-tree-id1225 . -6) (undo-tree-id1226 . -6) (undo-tree-id1227 . -6) (undo-tree-id1228 . -6) (undo-tree-id1229 . -6) (undo-tree-id1230 . -6) (undo-tree-id1231 . -6) (undo-tree-id1232 . -6) (undo-tree-id1233 . -6) (undo-tree-id1234 . -6) (undo-tree-id1235 . -6) (undo-tree-id1236 . -6) (undo-tree-id1237 . -6) (undo-tree-id1238 . -6) (undo-tree-id1239 . -6) (undo-tree-id1240 . -6) (undo-tree-id1241 . -6) (undo-tree-id1242 . -6) 3426) nil (25410 61057 502371 523000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -3472) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3473) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) 3474) nil (25410 61057 502364 179000) 0 nil])
([nil nil ((3472 . 3474)) nil (25410 61057 502357 384000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -3622) (undo-tree-id1204 . -1) 3623) nil (25410 61057 502356 960000) 0 nil])
([nil nil ((3622 . 3623)) nil (25410 61057 502356 162000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -3801) (undo-tree-id1203 . -1) 3802) nil (25410 61057 502355 518000) 0 nil])
([nil nil ((3801 . 3802)) nil (25410 61057 502348 783000) 0 nil])
([nil nil ((2611 . 2613) (t 25410 61057 510074 417000)) nil (25410 61198 453953 239000) 0 nil])
([nil nil ((2613 . 2618)) nil (25410 61198 453952 865000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face (nxml-element-local-name))) . -2616) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (#("t" 0 1 (fontified t face (nxml-element-local-name))) . -2617) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) 2618) nil (25410 61198 453952 228000) 0 nil])
([nil nil ((2616 . 2618)) nil (25410 61198 453948 232000) 0 nil])
([nil nil ((2618 . 2628)) nil (25410 61198 453947 824000) 0 nil])
([nil nil ((2628 . 2629)) nil (25410 61198 453947 367000) 0 nil])
([nil nil ((2629 . 2630)) nil (25410 61198 453947 162000) 0 nil])
([nil nil ((2630 . 2632)) nil (25410 61198 453946 613000) 0 nil])
([nil nil ((2632 . 2643)) nil (25410 61198 453946 70000) 0 nil])
([nil nil ((2643 . 2649)) nil (25410 61198 453945 599000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face (nxml-attribute-local-name))) . -2642) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (#("a" 0 1 (fontified t face (nxml-attribute-local-name))) . -2643) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (#("b" 0 1 (fontified t face (nxml-attribute-local-name))) . -2644) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (#("l" 0 1 (fontified t face (nxml-attribute-local-name))) . -2645) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (#("e" 0 1 (fontified t face (nxml-attribute-local-name))) . -2646) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (#("=" 0 1 (fontified t)) . -2647) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (#("c" 0 1 (fontified t)) . -2648) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) 2649) nil (25410 61198 453941 567000) 0 nil])
([nil nil ((2642 . 2663)) nil (25410 61198 452172 853000) 0 nil])
([nil nil ((2663 . 2666)) nil (25410 61198 452172 652000) 0 nil])
([nil nil ((2666 . 2667)) nil (25410 61198 452172 409000) 0 nil])
([nil nil ((2667 . 2668)) nil (25410 61198 452172 168000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t face font-lock-string-face)) . -2652) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) 2653) nil (25410 61198 452171 630000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . -2663) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) 2664) nil (25410 61198 452167 984000) 0 nil])
([nil nil ((#("		<group delimiter=\" \">
		  <label variable=\"page\" form=\"short\"/>
		  <text variable=\"page\"/>
		</group>
" 0 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-element-local-name)) 4 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t) 9 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t) 19 22 (fontified t face font-lock-string-face) 22 23 (fontified t face (nxml-tag-delimiter)) 23 24 (fontified t) 24 28 (fontified t) 28 29 (fontified t face (nxml-tag-delimiter)) 29 34 (fontified t face (nxml-element-local-name)) 34 35 (fontified t) 35 43 (fontified t face (nxml-attribute-local-name)) 43 44 (fontified t) 44 50 (fontified t face font-lock-string-face) 50 51 (fontified t) 51 55 (fontified t face (nxml-attribute-local-name)) 55 56 (fontified t) 56 63 (fontified t face font-lock-string-face) 63 64 (fontified t face (nxml-tag-slash)) 64 65 (fontified t face (nxml-tag-delimiter)) 65 66 (fontified t) 66 67 (fontified t) 67 70 (fontified t) 70 71 (fontified t face (nxml-tag-delimiter)) 71 73 (fontified t face (nxml-element-local-name)) 73 75 (fontified t face (nxml-element-local-name)) 75 76 (fontified t) 76 84 (fontified t face (nxml-attribute-local-name)) 84 85 (fontified t) 85 91 (fontified t face font-lock-string-face) 91 92 (fontified t face (nxml-tag-slash)) 92 93 (fontified t face (nxml-tag-delimiter)) 93 94 (fontified t) 94 96 (fontified t) 96 97 (fontified t face (nxml-tag-delimiter)) 97 98 (fontified t face (nxml-tag-slash)) 98 103 (fontified t face (nxml-element-local-name)) 103 104 (fontified t face (nxml-tag-delimiter)) 104 105 (fontified t)) . 3889) (undo-tree-id1692 . -105) (undo-tree-id1693 . -105) (undo-tree-id1694 . -105) (undo-tree-id1695 . -23) (undo-tree-id1696 . -23) (undo-tree-id1697 . -23) (undo-tree-id1698 . -23) (undo-tree-id1699 . -23) (undo-tree-id1700 . -105) (undo-tree-id1701 . -24) (undo-tree-id1702 . -24) (undo-tree-id1703 . -105) (undo-tree-id1704 . -105) 3994 (t 25410 61198 458379 413000)) nil (25410 61288 638924 258000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3704 . 3705) (nil fontified nil 3704 . 3705) (nil fontified nil 3703 . 3704) (nil fontified nil 3698 . 3703) (nil fontified nil 3697 . 3698) (nil fontified nil 3696 . 3697) (nil fontified nil 3694 . 3696) (nil fontified nil 3693 . 3694) (nil fontified nil 3692 . 3693) (nil fontified nil 3691 . 3692) (nil fontified nil 3685 . 3691) (nil fontified nil 3684 . 3685) (nil fontified nil 3676 . 3684) (nil fontified nil 3675 . 3676) (nil fontified nil 3673 . 3675) (nil fontified nil 3671 . 3673) (nil fontified nil 3670 . 3671) (nil fontified nil 3667 . 3670) (nil fontified nil 3666 . 3667) (nil fontified nil 3665 . 3666) (nil fontified nil 3664 . 3665) (nil fontified nil 3663 . 3664) (nil fontified nil 3656 . 3663) (nil fontified nil 3655 . 3656) (nil fontified nil 3651 . 3655) (nil fontified nil 3650 . 3651) (nil fontified nil 3644 . 3650) (nil fontified nil 3643 . 3644) (nil fontified nil 3635 . 3643) (nil fontified nil 3634 . 3635) (nil fontified nil 3629 . 3634) (nil fontified nil 3628 . 3629) (nil fontified nil 3624 . 3628) (nil fontified nil 3623 . 3624) (nil fontified nil 3622 . 3623) (nil fontified nil 3619 . 3622) (nil fontified nil 3618 . 3619) (nil fontified nil 3609 . 3618) (nil fontified nil 3608 . 3609) (nil fontified nil 3604 . 3608) (nil fontified nil 3603 . 3604) (nil fontified nil 3602 . 3603) (nil fontified nil 3600 . 3602) (3600 . 3705)) nil (25410 61288 638919 383000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3605) (3605 . 3606) (#("	" 0 1 (fontified nil)) . 3605) (undo-tree-id1691 . 1) (3601 . 3605) 3600) nil (25410 61288 638917 263000) 0 nil])
([nil nil ((#("	  " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified t)) . -3634) (undo-tree-id1689 . 2) (3634 . 3635) (#("	" 0 1 (fontified nil)) . 3634) (undo-tree-id1690 . 1) (3628 . 3634)) nil (25410 61288 638916 397000) 0 nil])
([nil nil ((#("	  " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified t)) . -3679) (undo-tree-id1687 . 2) (3679 . 3680) (#("	" 0 1 (fontified nil)) . 3679) (undo-tree-id1688 . 1) (3673 . 3679)) nil (25410 61288 638914 131000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3708) (3708 . 3709) (#("	" 0 1 (fontified nil)) . 3708) (undo-tree-id1686 . 1) (3704 . 3708)) nil (25410 61288 638912 944000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -3763) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -3764) (undo-tree-id1685 . -1) 3765) nil (25410 61288 638912 40000) 0 nil])
([nil nil ((3763 . 3765)) nil (25410 61288 638910 40000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-string-face)) . -3763) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -3764) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) 3765) nil (25410 61288 638909 419000) 0 nil])
([nil nil ((3763 . 3765)) nil (25410 61288 638900 186000) 0 nil])
([nil nil ((#("	    <group delimiter=\" \">
	      <label variable=\"page\" form=\"short\"/>
	      <text variable=\"page\"/>
	    </group>
" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-element-local-name)) 7 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-delimiter)) 26 27 (fontified t) 27 28 (fontified t) 28 34 (fontified t) 34 35 (fontified t face (nxml-tag-delimiter)) 35 40 (fontified t face (nxml-element-local-name)) 40 41 (fontified t) 41 49 (fontified t face (nxml-attribute-local-name)) 49 50 (fontified t) 50 56 (fontified t face font-lock-string-face) 56 57 (fontified t) 57 61 (fontified t face (nxml-attribute-local-name)) 61 62 (fontified t) 62 69 (fontified t face font-lock-string-face) 69 70 (fontified t face (nxml-tag-slash)) 70 71 (fontified t face (nxml-tag-delimiter)) 71 72 (fontified t) 72 73 (fontified t) 73 79 (fontified t) 79 80 (fontified t face (nxml-tag-delimiter)) 80 82 (fontified t face (nxml-element-local-name)) 82 84 (fontified t face (nxml-element-local-name)) 84 85 (fontified t) 85 93 (fontified t face (nxml-attribute-local-name)) 93 94 (fontified t) 94 100 (fontified t face font-lock-string-face) 100 101 (fontified t face (nxml-tag-slash)) 101 102 (fontified t face (nxml-tag-delimiter)) 102 103 (fontified t) 103 104 (fontified t) 104 108 (fontified t) 108 109 (fontified t face (nxml-tag-delimiter)) 109 110 (fontified t face (nxml-tag-slash)) 110 115 (fontified t face (nxml-element-local-name)) 115 116 (fontified t face (nxml-tag-delimiter)) 116 117 (rear-nonsticky t fontified t)) . 3600) (undo-tree-id1623 . -117) (undo-tree-id1624 . -117) (undo-tree-id1625 . -117) (undo-tree-id1626 . -117) (undo-tree-id1627 . -117) (undo-tree-id1628 . -117) (undo-tree-id1629 . -117) (undo-tree-id1630 . -5) (undo-tree-id1631 . -5) (undo-tree-id1632 . -5) (undo-tree-id1633 . -5) (undo-tree-id1634 . -34) (undo-tree-id1635 . -34) (undo-tree-id1636 . -79) (undo-tree-id1637 . -79) (undo-tree-id1638 . -108) (undo-tree-id1639 . -108) (undo-tree-id1640 . -108) (undo-tree-id1641 . -108) (undo-tree-id1642 . -77) (undo-tree-id1643 . -77) (undo-tree-id1644 . -77) (undo-tree-id1645 . -77) (undo-tree-id1646 . -116) (undo-tree-id1647 . -116) (undo-tree-id1648 . -116) (undo-tree-id1649 . -116) (undo-tree-id1650 . -21) (undo-tree-id1651 . -21) (undo-tree-id1652 . -117) (undo-tree-id1653 . -27) (undo-tree-id1654 . -27) (undo-tree-id1655 . -117) (undo-tree-id1656 . -117) 3717) nil (25410 61288 638899 472000) 0 nil])
([nil nil ((nil fontified nil 3931 . 3932) (nil fontified nil 3930 . 3931) (nil fontified nil 3925 . 3930) (nil fontified nil 3924 . 3925) (nil fontified nil 3923 . 3924) (nil fontified nil 3919 . 3923) (nil fontified nil 3918 . 3919) (nil fontified nil 3917 . 3918) (nil fontified nil 3916 . 3917) (nil fontified nil 3915 . 3916) (nil fontified nil 3909 . 3915) (nil fontified nil 3908 . 3909) (nil fontified nil 3900 . 3908) (nil fontified nil 3899 . 3900) (nil fontified nil 3897 . 3899) (nil fontified nil 3895 . 3897) (nil fontified nil 3894 . 3895) (nil fontified nil 3888 . 3894) (nil fontified nil 3887 . 3888) (nil fontified nil 3886 . 3887) (nil fontified nil 3885 . 3886) (nil fontified nil 3884 . 3885) (nil fontified nil 3877 . 3884) (nil fontified nil 3876 . 3877) (nil fontified nil 3872 . 3876) (nil fontified nil 3871 . 3872) (nil fontified nil 3865 . 3871) (nil fontified nil 3864 . 3865) (nil fontified nil 3856 . 3864) (nil fontified nil 3855 . 3856) (nil fontified nil 3850 . 3855) (nil fontified nil 3849 . 3850) (nil fontified nil 3843 . 3849) (nil fontified nil 3842 . 3843) (nil fontified nil 3841 . 3842) (nil fontified nil 3840 . 3841) (nil fontified nil 3837 . 3840) (nil fontified nil 3836 . 3837) (nil fontified nil 3827 . 3836) (nil fontified nil 3826 . 3827) (nil fontified nil 3822 . 3826) (nil fontified nil 3821 . 3822) (nil fontified nil 3820 . 3821) (nil fontified nil 3816 . 3820) (nil fontified nil 3815 . 3816) (3815 . 3932)) nil (25410 61288 638882 665000) 0 nil])
([nil nil ((3816 . 3817) (#("    " 0 4 (fontified t)) . 3816) 3815) nil (25410 61288 638879 967000) 0 nil])
([nil nil ((3840 . 3843) (#("      " 0 6 (fontified t)) . 3840) 3848) nil (25410 61288 638879 514000) 0 nil])
([nil nil ((3882 . 3885) (#("      " 0 6 (fontified t)) . 3882) 3894) nil (25410 61288 638878 641000) 0 nil])
([nil nil ((3910 . 3911) (#("    " 0 4 (fontified t)) . 3910) 3922) nil (25410 61288 638875 895000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -3090) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) 3091 (t 25410 61288 647294 967000)) nil (25414 28433 948122 78000) 0 nil])
([nil nil ((#(" suffix=\".\"" 0 1 (fontified t) 1 7 (fontified t face (nxml-attribute-local-name)) 7 8 (fontified t) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face)) . 3080) (undo-tree-id1800 . -10) (undo-tree-id1801 . -11) (undo-tree-id1802 . -11) 3091 (t 25414 28433 955861 984000)) nil (25414 29061 807712 581000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3090 . 3091) (nil fontified nil 3090 . 3091) (nil fontified nil 3089 . 3090) (nil fontified nil 3088 . 3089) (nil fontified nil 3087 . 3088) (nil fontified nil 3081 . 3087) (nil fontified nil 3080 . 3081) (3080 . 3091)) nil (25414 29061 807709 875000) 0 nil])
([nil nil ((4484 . 4485) (#("	" 0 1 (fontified t face (nxml-tag-delimiter))) . 4483) (undo-tree-id1799 . -1) (4482 . 4485)) nil (25414 29061 807708 723000) 0 nil])
([nil nil ((4485 . 4506)) nil (25414 29061 807707 693000) 0 nil])
([nil nil ((4506 . 4509)) nil (25414 29061 807707 357000) 0 nil])
([nil nil ((4487 . 4488)) nil (25414 29061 807706 978000) 0 nil])
([nil nil ((#("	<!-- Journal articles -->" 0 1 (fontified t face (nxml-tag-delimiter)) 1 2 (fontified t syntax-table (2097163) face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face) 3 4 (fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-delimiter-face) 23 24 (fontified t face font-lock-comment-delimiter-face) 24 25 (fontified t face font-lock-comment-delimiter-face) 25 26 (fontified t syntax-table (2097164) face font-lock-comment-delimiter-face)) . 4484)) nil (25414 29061 807706 593000) 0 nil])
([nil nil ((#("
" 0 1 (face (nxml-text) fontified t)) . 4484)) nil (25414 29061 807706 241000) 0 nil])
([nil nil ((#("	<else-if type=\"article\" match=\"any\">" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 5 (fontified t face (nxml-element-local-name)) 5 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t) 15 24 (fontified t face font-lock-string-face) 24 25 (fontified t) 25 30 (fontified t face (nxml-attribute-local-name)) 30 31 (fontified t) 31 36 (fontified t face font-lock-string-face) 36 37 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807705 769000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807705 227000) 0 nil])
([nil nil ((#("	  <group delimiter=\", \">" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 24 (fontified t face font-lock-string-face) 24 25 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807704 727000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807704 109000) 0 nil])
([nil nil ((#("	    <text variable=\"title\" text-case=\"title\" font-style=\"italic\"/>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 27 (fontified t face font-lock-string-face) 27 28 (fontified t) 28 37 (fontified t face (nxml-attribute-local-name)) 37 38 (fontified t) 38 45 (fontified t face font-lock-string-face) 45 46 (fontified t) 46 56 (fontified t face (nxml-attribute-local-name)) 56 57 (fontified t) 57 65 (fontified t face font-lock-string-face) 65 66 (fontified t face (nxml-tag-slash)) 66 67 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807703 692000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807703 404000) 0 nil])
([nil nil ((#("	    <choose>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807703 56000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807702 726000) 0 nil])
([nil nil ((#("	      <if variable=\"container-title\">" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 13 (fontified t face (nxml-attribute-local-name)) 13 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t face (nxml-attribute-local-name)) 17 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 37 (fontified t face font-lock-string-face) 37 38 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807702 133000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807701 740000) 0 nil])
([nil nil ((#("		<text variable=\"container-title\"/>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 23 (fontified t face font-lock-string-face) 23 34 (fontified t face font-lock-string-face) 34 35 (fontified t face (nxml-tag-slash)) 35 36 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807701 418000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807701 88000) 0 nil])
([nil nil ((#("	      </if>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807700 818000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807700 475000) 0 nil])
([nil nil ((#("	      <else>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807700 139000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807699 826000) 0 nil])
([nil nil ((#("		<text variable=\"number\"/>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 23 (fontified t face font-lock-string-face) 23 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-slash)) 26 27 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807699 605000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807699 342000) 0 nil])
([nil nil ((#("	      </else>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807699 1000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807698 739000) 0 nil])
([nil nil ((#("	    </choose>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-tag-slash)) 7 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807698 470000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1798 . -1)) nil (25414 29061 807698 154000) 0 nil])
([nil nil ((#("	  </group>" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 5 (fontified t face (nxml-tag-slash)) 5 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807697 516000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807697 312000) 0 nil])
([nil nil ((#("	</else-if>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-slash)) 3 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 4484)) nil (25414 29061 807697 33000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807696 255000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484)) nil (25414 29061 807695 843000) 0 nil])
([nil nil ((#("	<!-- Datasets -->" 0 1 (fontified t) 1 2 (syntax-table (2097163) fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face) 3 4 (fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-delimiter-face) 15 16 (fontified t face font-lock-comment-delimiter-face) 16 17 (fontified t face font-lock-comment-delimiter-face) 17 18 (syntax-table (2097164) fontified t face font-lock-comment-delimiter-face)) . 4484) (undo-tree-id1797 . -18)) nil (25414 29061 807695 525000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1796 . -1)) nil (25414 29061 807694 975000) 0 nil])
([nil nil ((#("	<else-if type=\"dataset interview manuscript pamphlet personal_communication post post-weblog speech webpage\">" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 6 (fontified t face (nxml-element-local-name)) 6 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t) 15 90 (fontified t face font-lock-string-face) 90 109 (fontified t face font-lock-string-face) 109 110 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1792 . 9) (undo-tree-id1793 . -108) (undo-tree-id1794 . 110) (undo-tree-id1795 . -110)) nil (25414 29061 807694 34000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1790 . 1) (undo-tree-id1791 . -1)) nil (25414 29061 807692 600000) 0 nil])
([nil nil ((#("	  <!-- unpublished materials; guidelines call for 'enough information to be retrievable' -->" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face font-lock-comment-delimiter-face syntax-table (2097163)) 4 8 (fontified t face font-lock-comment-delimiter-face) 8 59 (fontified t face font-lock-comment-face) 59 85 (fontified t face font-lock-comment-face) 85 89 (fontified t face font-lock-comment-face) 89 92 (fontified t face font-lock-comment-delimiter-face) 92 93 (fontified t face font-lock-comment-delimiter-face syntax-table (2097164))) . 4484) (undo-tree-id1788 . 93) (undo-tree-id1789 . -93)) nil (25414 29061 807691 586000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1786 . 1) (undo-tree-id1787 . -1)) nil (25414 29061 807690 756000) 0 nil])
([nil nil ((#("	  <!-- Based on arXiv format -->" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face font-lock-comment-delimiter-face syntax-table (2097163)) 4 8 (fontified t face font-lock-comment-delimiter-face) 8 29 (fontified t face font-lock-comment-face) 29 32 (fontified t face font-lock-comment-delimiter-face) 32 33 (fontified t face font-lock-comment-delimiter-face syntax-table (2097164))) . 4484) (undo-tree-id1784 . 33) (undo-tree-id1785 . -33)) nil (25414 29061 807689 774000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1782 . 1) (undo-tree-id1783 . -1)) nil (25414 29061 807688 966000) 0 nil])
([nil nil ((#("	  <group delimiter=\", \">" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 24 (fontified t face font-lock-string-face) 24 25 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1780 . 25) (undo-tree-id1781 . -25)) nil (25414 29061 807688 22000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1778 . 1) (undo-tree-id1779 . -1)) nil (25414 29061 807686 299000) 0 nil])
([nil nil ((#("	    <text variable=\"title\" text-case=\"title\" font-style=\"italic\"/>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 14 (fontified t face (nxml-attribute-local-name)) 14 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 27 (fontified t face font-lock-string-face) 27 28 (fontified t) 28 37 (fontified t face (nxml-attribute-local-name)) 37 38 (fontified t) 38 45 (fontified t face font-lock-string-face) 45 46 (fontified t) 46 56 (fontified t face (nxml-attribute-local-name)) 56 57 (fontified t) 57 65 (fontified t face font-lock-string-face) 65 66 (fontified t face (nxml-tag-slash)) 66 67 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1776 . 67) (undo-tree-id1777 . -67)) nil (25414 29061 807685 353000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1774 . 1) (undo-tree-id1775 . -1)) nil (25414 29061 807684 572000) 0 nil])
([nil nil ((#("	    <choose>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 10 (fontified t face (nxml-element-local-name)) 10 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1772 . 13) (undo-tree-id1773 . -13)) nil (25414 29061 807683 735000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1770 . 1) (undo-tree-id1771 . -1)) nil (25414 29061 807682 833000) 0 nil])
([nil nil ((#("	      <if variable=\"DOI\">" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1766 . 5) (undo-tree-id1767 . -24) (undo-tree-id1768 . 26) (undo-tree-id1769 . -26)) nil (25414 29061 807681 850000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1764 . 1) (undo-tree-id1765 . -1)) nil (25414 29061 807680 529000) 0 nil])
([nil nil ((#("		<text variable=\"DOI\" prefix=\"https://doi.org/\"/>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 22 (fontified t face font-lock-string-face) 22 23 (fontified t) 23 29 (fontified t face (nxml-attribute-local-name)) 29 30 (fontified t) 30 44 (fontified t face font-lock-string-face) 44 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face (nxml-tag-slash)) 49 50 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1762 . 50) (undo-tree-id1763 . -50)) nil (25414 29061 807679 652000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1760 . 1) (undo-tree-id1761 . -1)) nil (25414 29061 807678 476000) 0 nil])
([nil nil ((#("	      </if>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1758 . 12) (undo-tree-id1759 . -12)) nil (25414 29061 807677 552000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1756 . 1) (undo-tree-id1757 . -1)) nil (25414 29061 807676 481000) 0 nil])
([nil nil ((#("	      <else-if variable=\"URL\">" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 15 (fontified t face (nxml-element-local-name)) 15 16 (fontified t) 16 24 (fontified t face (nxml-attribute-local-name)) 24 25 (fontified t) 25 30 (fontified t face font-lock-string-face) 30 31 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1754 . 31) (undo-tree-id1755 . -31)) nil (25414 29061 807675 493000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1752 . 1) (undo-tree-id1753 . -1)) nil (25414 29061 807674 387000) 0 nil])
([nil nil ((#("		<text variable=\"URL\"/>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 22 (fontified t face font-lock-string-face) 22 23 (fontified t face (nxml-tag-slash)) 23 24 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1750 . 24) (undo-tree-id1751 . -24)) nil (25414 29061 807673 468000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1748 . 1) (undo-tree-id1749 . -1)) nil (25414 29061 807672 571000) 0 nil])
([nil nil ((#("	      </else-if>" 0 1 (fontified t) 1 4 (fontified t) 4 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 16 (fontified t face (nxml-element-local-name)) 16 17 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1746 . 17) (undo-tree-id1747 . -17)) nil (25414 29061 807671 450000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1744 . 1) (undo-tree-id1745 . -1)) nil (25414 29061 807670 533000) 0 nil])
([nil nil ((#("	      <else>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-element-local-name)) 9 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1742 . 13) (undo-tree-id1743 . -13)) nil (25414 29061 807669 512000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1740 . 1) (undo-tree-id1741 . -1)) nil (25414 29061 807668 561000) 0 nil])
([nil nil ((#("		<text value=\"(unpublished)\"/>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t) 14 17 (fontified t face font-lock-string-face) 17 29 (fontified t face font-lock-string-face) 29 30 (fontified t face (nxml-tag-slash)) 30 31 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1738 . 31) (undo-tree-id1739 . -31)) nil (25414 29061 807667 500000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1736 . 1) (undo-tree-id1737 . -1)) nil (25414 29061 807666 454000) 0 nil])
([nil nil ((#("	      </else>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1734 . 14) (undo-tree-id1735 . -14)) nil (25414 29061 807665 461000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1732 . 1) (undo-tree-id1733 . -1)) nil (25414 29061 807664 549000) 0 nil])
([nil nil ((#("	    </choose>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-tag-slash)) 7 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1730 . 14) (undo-tree-id1731 . -14)) nil (25414 29061 807663 642000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . 1) (undo-tree-id1729 . -1)) nil (25414 29061 807662 464000) 0 nil])
([nil nil ((#("	  </group>" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 5 (fontified t face (nxml-tag-slash)) 5 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1724 . 11) (undo-tree-id1725 . -11)) nil (25414 29061 807659 786000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1722 . 1) (undo-tree-id1723 . -1)) nil (25414 29061 806263 612000) 0 nil])
([nil nil ((#("	</else-if>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-slash)) 3 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 4484) (undo-tree-id1720 . 11) (undo-tree-id1721 . -11)) nil (25414 29061 806262 499000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1718 . 1) (undo-tree-id1719 . -1)) nil (25414 29061 806261 311000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4484) (undo-tree-id1716 . 1) (undo-tree-id1717 . -1)) nil (25414 29062 288671 305000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5339 . 5340) (nil fontified nil 5339 . 5340) (nil fontified nil 5338 . 5339) (nil fontified nil 5330 . 5338) (nil fontified nil 5329 . 5330) (nil fontified nil 5321 . 5329) (nil fontified nil 5320 . 5321) (nil fontified nil 5318 . 5320) (nil fontified nil 5317 . 5318) (nil fontified nil 5311 . 5317) (5311 . 5340)) nil (25414 29289 799851 682000) 0 nil] [nil nil ((#("	<!-- Journal articles -->" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-delimiter-face syntax-table (2097163)) 2 3 (fontified t face font-lock-comment-delimiter-face) 3 4 (fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-delimiter-face) 23 24 (fontified t face font-lock-comment-delimiter-face) 24 25 (fontified t face font-lock-comment-delimiter-face) 25 26 (fontified t face font-lock-comment-delimiter-face syntax-table (2097164))) . 4484) (undo-tree-id1714 . 26) (undo-tree-id1715 . -26)) ((4484 . 4510)) (25414 29061 806241 106000) 0 nil])
([nil nil ((#("	    " 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified t)) . -5316) (5316 . 5317) (#("	" 0 1 (fontified nil)) . 5316) (5312 . 5316) 5311) nil (25414 29289 799850 372000) 0 nil])
nil
([nil nil ((5344 . 5346)) nil (25414 29289 799849 735000) 0 nil])
([nil nil ((5380 . 5388)) nil (25414 29289 799849 497000) 0 nil])
([nil nil ((5388 . 5389)) nil (25414 29289 799849 297000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5386) (5389 . 5390)) nil (25414 29289 799848 798000) 0 nil])
([nil nil ((5388 . 5390)) nil (25414 29289 799848 389000) 0 nil])
([nil nil ((5390 . 5391)) nil (25414 29289 799847 824000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5472 . 5473) (nil fontified nil 5472 . 5473) (nil fontified nil 5471 . 5472) (nil fontified nil 5470 . 5471) (nil fontified nil 5469 . 5470) (nil fontified nil 5468 . 5469) (nil fontified nil 5467 . 5468) (nil fontified nil 5461 . 5467) (nil fontified nil 5460 . 5461) (nil fontified nil 5459 . 5460) (nil fontified nil 5458 . 5459) (nil fontified nil 5457 . 5458) (nil fontified nil 5456 . 5457) (nil fontified nil 5455 . 5456) (nil fontified nil 5454 . 5455) (nil fontified nil 5453 . 5454) (nil fontified nil 5452 . 5453) (nil fontified nil 5451 . 5452) (nil fontified nil 5450 . 5451) (nil fontified nil 5449 . 5450) (nil fontified nil 5448 . 5449) (nil fontified nil 5447 . 5448) (nil fontified nil 5446 . 5447) (nil fontified nil 5445 . 5446) (nil fontified nil 5444 . 5445) (nil fontified nil 5443 . 5444) (nil fontified nil 5442 . 5443) (nil fontified nil 5441 . 5442) (nil fontified nil 5440 . 5441) (nil fontified nil 5439 . 5440) (nil fontified nil 5438 . 5439) (nil fontified nil 5437 . 5438) (nil fontified nil 5436 . 5437) (nil fontified nil 5435 . 5436) (nil fontified nil 5434 . 5435) (nil fontified nil 5433 . 5434) (nil fontified nil 5432 . 5433) (nil fontified nil 5431 . 5432) (nil fontified nil 5430 . 5431) (nil fontified nil 5429 . 5430) (nil fontified nil 5428 . 5429) (nil fontified nil 5427 . 5428) (nil fontified nil 5425 . 5427) (nil fontified nil 5421 . 5425) (nil fontified nil 5420 . 5421) (nil fontified nil 5419 . 5420) (nil fontified nil 5418 . 5419) (nil fontified nil 5410 . 5418) (nil fontified nil 5409 . 5410) (nil fontified nil 5401 . 5409) (nil fontified nil 5400 . 5401) (nil fontified nil 5398 . 5400) (nil fontified nil 5397 . 5398) (nil fontified nil 5393 . 5397) (nil fontified nil 5392 . 5393) (5392 . 5473)) nil (25414 29289 799847 11000) 0 nil])
([nil nil ((#("number" 0 6 (fontified t face font-lock-string-face)) . -5411) (undo-tree-id1931 . -6) 5417) nil (25414 29289 799842 769000) 0 nil])
([nil nil ((5411 . 5414)) nil (25414 29289 799841 644000) 0 nil])
([nil nil ((#("note" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face)) . -5440) (undo-tree-id1930 . -4) 5444) nil (25414 29289 799841 163000) 0 nil])
([nil nil ((5440 . 5443)) nil (25414 29289 799840 241000) 0 nil])
([nil nil ((nil fontified nil 5545 . 5546) (nil fontified nil 5544 . 5545) (nil fontified nil 5543 . 5544) (nil fontified nil 5542 . 5543) (nil fontified nil 5541 . 5542) (nil fontified nil 5540 . 5541) (nil fontified nil 5534 . 5540) (nil fontified nil 5533 . 5534) (nil fontified nil 5532 . 5533) (nil fontified nil 5531 . 5532) (nil fontified nil 5530 . 5531) (nil fontified nil 5529 . 5530) (nil fontified nil 5528 . 5529) (nil fontified nil 5527 . 5528) (nil fontified nil 5526 . 5527) (nil fontified nil 5525 . 5526) (nil fontified nil 5524 . 5525) (nil fontified nil 5523 . 5524) (nil fontified nil 5522 . 5523) (nil fontified nil 5521 . 5522) (nil fontified nil 5520 . 5521) (nil fontified nil 5519 . 5520) (nil fontified nil 5518 . 5519) (nil fontified nil 5517 . 5518) (nil fontified nil 5516 . 5517) (nil fontified nil 5515 . 5516) (nil fontified nil 5514 . 5515) (nil fontified nil 5513 . 5514) (nil fontified nil 5512 . 5513) (nil fontified nil 5511 . 5512) (nil fontified nil 5510 . 5511) (nil fontified nil 5509 . 5510) (nil fontified nil 5508 . 5509) (nil fontified nil 5507 . 5508) (nil fontified nil 5506 . 5507) (nil fontified nil 5505 . 5506) (nil fontified nil 5504 . 5505) (nil fontified nil 5503 . 5504) (nil fontified nil 5502 . 5503) (nil fontified nil 5501 . 5502) (nil fontified nil 5499 . 5501) (nil fontified nil 5495 . 5499) (nil fontified nil 5494 . 5495) (nil fontified nil 5493 . 5494) (nil fontified nil 5492 . 5493) (nil fontified nil 5491 . 5492) (nil fontified nil 5490 . 5491) (nil fontified nil 5489 . 5490) (nil fontified nil 5488 . 5489) (nil fontified nil 5487 . 5488) (nil fontified nil 5486 . 5487) (nil fontified nil 5478 . 5486) (nil fontified nil 5477 . 5478) (nil fontified nil 5475 . 5477) (nil fontified nil 5474 . 5475) (nil fontified nil 5470 . 5474) (nil fontified nil 5469 . 5470) (5469 . 5546)) nil (25414 29289 799839 514000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face (nxml-element-local-name))) . -5465) (undo-tree-id1928 . -1) (#("f" 0 1 (fontified t face (nxml-element-local-name))) . -5466) (undo-tree-id1929 . -1) 5467) nil (25414 29289 799818 132000) 0 nil])
([nil nil ((5465 . 5473)) nil (25414 29289 798533 827000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face (nxml-element-local-name))) . -5467) (undo-tree-id1927 . -1) 5468) nil (25414 29289 798533 558000) 0 nil])
([nil nil ((5457 . 5465)) nil (25414 29289 798532 977000) 0 nil])
([nil nil ((5465 . 5466)) nil (25414 29289 798532 780000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -5463) (5466 . 5467)) nil (25414 29289 798532 330000) 0 nil])
([nil nil ((5465 . 5468)) nil (25414 29289 798532 69000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t face (nxml-tag-slash))) . -5475) (undo-tree-id1926 . -1) 5476) nil (25414 29289 798531 702000) 0 nil])
([nil nil ((5557 . 5562)) nil (25414 29289 798531 34000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-string-face)) . -5411) (undo-tree-id1923 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -5412) (undo-tree-id1924 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -5413) (undo-tree-id1925 . -1) 5414) nil (25414 29289 798530 500000) 0 nil])
([nil nil ((5411 . 5414)) nil (25414 29289 798528 872000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-string-face)) . -5440) (undo-tree-id1920 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -5441) (undo-tree-id1921 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -5442) (undo-tree-id1922 . -1) 5443) nil (25414 29289 798528 306000) 0 nil])
([nil nil ((5440 . 5443)) nil (25414 29289 798526 764000) 0 nil])
([nil nil ((#("
	    <if " 0 1 (rear-nonsticky t fontified t) 1 2 (fontified t) 2 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t)) . 5483) (undo-tree-id1918 . -10) (undo-tree-id1919 . -10) 5493) nil (25414 29289 798526 412000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t face (nxml-tag-delimiter))) . -5482) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) 5483) nil (25414 29289 798525 400000) 0 nil])
([nil nil ((5482 . 5483)) nil (25414 29289 798524 221000) 0 nil])
([nil nil ((5315 . 5320) (5277 . 5282) (#(" " 0 1 (fontified t)) . 5277) (5310 . 5311)) nil (25414 29289 798523 777000) 0 nil])
([nil nil ((5320 . 5324)) nil (25414 29289 798523 255000) 0 nil])
([nil nil ((5324 . 5328)) nil (25414 29289 798522 972000) 0 nil])
([nil nil ((5334 . 5336) 5342) nil (25414 29289 798522 762000) 0 nil])
([nil nil ((5360 . 5361) (#("      " 0 4 (fontified t) 4 6 (fontified t)) . 5360) 5374) nil (25414 29289 798522 417000) 0 nil])
([nil nil ((5401 . 5403) 5406) nil (25414 29289 798522 118000) 0 nil])
([nil nil ((5408 . 5416)) nil (25414 29289 798521 455000) 0 nil])
([nil nil ((5416 . 5417)) nil (25414 29289 798521 245000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5414) (5417 . 5418)) nil (25414 29289 798520 869000) 0 nil])
([nil nil ((5416 . 5422)) nil (25414 29289 798520 480000) 0 nil])
([nil nil ((5422 . 5428)) nil (25414 29289 798520 186000) 0 nil])
([nil nil ((5428 . 5436)) nil (25414 29289 798519 619000) 0 nil])
([nil nil ((5442 . 5444) 5450) nil (25414 29289 798519 293000) 0 nil])
([nil nil ((5465 . 5466) (#("      " 0 4 (fontified t) 4 6 (fontified t)) . 5465) 5479) nil (25414 29289 798518 901000) 0 nil])
([nil nil ((5505 . 5507) 5510) nil (25414 29289 798518 608000) 0 nil])
([nil nil ((5518 . 5520) 5525) nil (25414 29289 798518 304000) 0 nil])
([nil nil ((5546 . 5547) (#("      " 0 4 (fontified t) 4 6 (fontified t)) . 5546) 5559) nil (25414 29289 798517 910000) 0 nil])
([nil nil ((5586 . 5588) 5596) nil (25414 29289 798517 606000) 0 nil])
([nil nil ((5598 . 5606)) nil (25414 29289 798517 355000) 0 nil])
([nil nil ((5606 . 5607)) nil (25414 29289 798517 78000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -5604) (5607 . 5608)) nil (25414 29289 798516 712000) 0 nil])
([nil nil ((5606 . 5614)) nil (25414 29289 798516 438000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face (nxml-text))) . -5606) (undo-tree-id1915 . -1) 5607) nil (25414 29289 798516 32000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -4584) (undo-tree-id1914 . -1) 4585) nil (25414 29289 798515 222000) 0 nil])
([nil nil ((#("	    <group delimiter=\" \">" 0 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-delimiter))) . 4656)) nil (25414 29289 798514 596000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4656)) nil (25414 29289 798514 251000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -4661) 4656) nil (25414 29289 798513 422000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -4732)) nil (25414 29289 798513 103000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -4762) (4762 . 4763) (#("	" 0 1 (fontified nil)) . 4762) (4756 . 4762)) nil (25414 29289 798512 674000) 0 nil])
([nil nil ((#("	  </group>" 0 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 5 (fontified t face (nxml-tag-slash)) 5 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 5104) (undo-tree-id1912 . 6) (undo-tree-id1913 . -10)) nil (25414 29289 798512 158000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5104)) nil (25414 29289 798511 123000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -4814) (4814 . 4815) (#("	" 0 1 (fontified nil)) . 4814) (4808 . 4814) 4813) nil (25414 29289 798510 729000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -4838) (undo-tree-id1911 . -2) 4840) nil (25414 29289 798510 236000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -4851) 4849) nil (25414 29289 798509 618000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -4880) 4878) nil (25414 29289 798509 173000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -4910) (undo-tree-id1910 . -2) 4912) nil (25414 29289 798508 724000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -4920)) nil (25414 29289 798507 999000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -4933) 4931) nil (25414 29289 798507 695000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -4980) (undo-tree-id1909 . -2) 4982) nil (25414 29289 798507 242000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -4990) (undo-tree-id1908 . -2) 4992) nil (25414 29289 798492 689000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5002)) nil (25414 29289 798491 964000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -5057) (5057 . 5058) (#("	" 0 1 (fontified nil)) . 5057) (undo-tree-id1907 . -1) (5051 . 5057) 5052) nil (25414 29289 798491 521000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5071) (undo-tree-id1906 . -2) 5073) nil (25414 29289 798490 48000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5083) (undo-tree-id1905 . -2) 5085) nil (25414 29289 798489 220000) 0 nil])
([nil nil ((4915 . 4920)) nil (25414 29289 798488 531000) 0 nil])
([nil nil ((4920 . 4921)) nil (25414 29289 798488 372000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -4918) (4921 . 4922)) nil (25414 29289 798488 4000) 0 nil])
([nil nil ((4920 . 4927)) nil (25414 29289 798487 460000) 0 nil])
([nil nil ((4927 . 4930)) nil (25414 29289 798487 74000) 0 nil])
([nil nil ((4930 . 4938)) nil (25414 29289 798486 652000) 0 nil])
([nil nil ((4938 . 4943)) nil (25414 29289 798486 366000) 0 nil])
([nil nil ((4943 . 4949)) nil (25414 29289 798486 66000) 0 nil])
([nil nil ((4949 . 4964)) nil (25414 29289 798485 824000) 0 nil])
([nil nil ((#("		  <else>" 0 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-tag-delimiter))) . 4965) (undo-tree-id1904 . -10)) nil (25414 29289 798485 384000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4965) (undo-tree-id1902 . 1) (undo-tree-id1903 . -1)) nil (25414 29289 798484 612000) 0 nil])
([nil nil ((#("		    <text variable=\"page-first\" form=\"short\"/>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 20 (fontified t face (nxml-attribute-local-name)) 20 21 (fontified t) 21 33 (fontified t face font-lock-string-face) 33 34 (fontified t) 34 38 (fontified t face (nxml-attribute-local-name)) 38 39 (fontified t) 39 46 (fontified t face font-lock-string-face) 46 47 (fontified t face (nxml-tag-slash)) 47 48 (fontified t face (nxml-tag-delimiter))) . 4965) (undo-tree-id1901 . -48)) nil (25414 29289 798483 764000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4965) (undo-tree-id1899 . 1) (undo-tree-id1900 . -1)) nil (25414 29289 798482 912000) 0 nil])
([nil nil ((#("		  </else>" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 6 (fontified t face (nxml-tag-slash)) 6 8 (fontified t face (nxml-element-local-name)) 8 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 4965) (undo-tree-id1894 . -4) (undo-tree-id1895 . -11) (undo-tree-id1896 . 5) (undo-tree-id1897 . -10) (undo-tree-id1898 . -11)) nil (25414 29289 798481 782000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4965) (undo-tree-id1892 . 1) (undo-tree-id1893 . -1)) nil (25414 29289 798479 700000) 0 nil])
([nil nil ((4964 . 4971)) nil (25414 29289 798478 679000) 0 nil])
([nil nil ((4971 . 4972)) nil (25414 29289 798478 464000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -4969) (undo-tree-id1886 . -2) (undo-tree-id1887 . -2) (undo-tree-id1888 . -2) (undo-tree-id1889 . -2) (undo-tree-id1890 . -2) (undo-tree-id1891 . -2) (4972 . 4973)) nil (25414 29289 798478 65000) 0 nil])
([nil nil ((4971 . 4974)) nil (25414 29289 798475 226000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face (nxml-text))) . -4973) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) 4974) nil (25414 29289 798474 716000) 0 nil])
([nil nil ((4973 . 4974)) nil (25414 29289 798472 627000) 0 nil])
([nil nil ((4964 . 4971)) nil (25414 29289 798472 274000) 0 nil])
([nil nil ((4971 . 4992)) nil (25414 29289 798471 927000) 0 nil])
([nil nil ((4992 . 4993)) nil (25414 29289 798471 589000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face (nxml-text))) . -4989) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (#("e" 0 1 (fontified t face (nxml-text))) . -4990) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (#("x" 0 1 (fontified t face (nxml-text))) . -4991) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (#("t" 0 1 (fontified t face (nxml-text))) . -4992) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) 4993) nil (25414 29289 798470 531000) 0 nil])
([nil nil ((4989 . 5006)) nil (25414 29289 798421 636000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face (nxml-attribute-local-name))) . -4989) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) 4990) nil (25414 29289 798421 232000) 0 nil])
([nil nil ((4989 . 4990)) nil (25414 29289 798419 147000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5005) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) 5006) nil (25414 29289 798418 90000) 0 nil])
([nil nil ((5005 . 5006)) nil (25414 29289 798408 29000) 0 nil])
([nil nil ((5006 . 5007)) nil (25414 29289 798389 195000) 0 nil])
([nil nil ((5401 . 5402) (t 25414 29289 805373 560000)) nil (25414 29329 336415 663000) 0 nil])
([nil nil ((5452 . 5465) (t 25414 29329 344892 293000)) nil (25414 29401 258875 805000) 0 nil])
([nil nil ((5463 . 5464)) nil (25414 29401 258875 462000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -5452) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) (undo-tree-id2814 . -1) (undo-tree-id2815 . -1) (undo-tree-id2816 . -1) (undo-tree-id2817 . -1) (undo-tree-id2818 . -1) (undo-tree-id2819 . -1) (undo-tree-id2820 . -1) (undo-tree-id2821 . -1) (undo-tree-id2822 . -1) (undo-tree-id2823 . -1) (undo-tree-id2824 . -1) (undo-tree-id2825 . -1) (undo-tree-id2826 . -1) (undo-tree-id2827 . -1) (undo-tree-id2828 . -1) (undo-tree-id2829 . -1) (undo-tree-id2830 . -1) (undo-tree-id2831 . -1) (undo-tree-id2832 . -1) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (#("r" 0 1 (fontified t)) . -5453) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) (undo-tree-id2849 . -1) (undo-tree-id2850 . -1) (undo-tree-id2851 . -1) (undo-tree-id2852 . -1) (undo-tree-id2853 . -1) (undo-tree-id2854 . -1) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) (undo-tree-id2867 . -1) (undo-tree-id2868 . -1) (undo-tree-id2869 . -1) (undo-tree-id2870 . -1) (undo-tree-id2871 . -1) (undo-tree-id2872 . -1) (undo-tree-id2873 . -1) (undo-tree-id2874 . -1) (undo-tree-id2875 . -1) (undo-tree-id2876 . -1) (undo-tree-id2877 . -1) (undo-tree-id2878 . -1) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (undo-tree-id2881 . -1) (undo-tree-id2882 . -1) (undo-tree-id2883 . -1) (undo-tree-id2884 . -1) (undo-tree-id2885 . -1) (undo-tree-id2886 . -1) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) (undo-tree-id2889 . -1) (undo-tree-id2890 . -1) (undo-tree-id2891 . -1) (undo-tree-id2892 . -1) (undo-tree-id2893 . -1) (undo-tree-id2894 . -1) (undo-tree-id2895 . -1) (undo-tree-id2896 . -1) (undo-tree-id2897 . -1) (undo-tree-id2898 . -1) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (#("e" 0 1 (fontified t)) . -5454) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (#("f" 0 1 (fontified t)) . -5455) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (#("i" 0 1 (fontified t)) . -5456) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (#("x" 0 1 (fontified t)) . -5457) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (#("=" 0 1 (fontified t)) . -5458) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -5459) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -5460) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . 1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -5461) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -5462) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -5463) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) 5464) nil (25414 29401 258867 579000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5452) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . 1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 5452) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . 1) (undo-tree-id2738 . -1)) nil (25414 29401 258505 179000) 0 nil])
([nil nil ((nil fontified nil 5220 . 5221) (nil fontified nil 5219 . 5220) (nil fontified nil 5218 . 5219) (nil fontified nil 5217 . 5218) (nil fontified nil 5216 . 5217) (nil fontified nil 5215 . 5216) (nil fontified nil 5214 . 5215) (nil fontified nil 5213 . 5214) (nil fontified nil 5212 . 5213) (nil fontified nil 5211 . 5212) (nil fontified nil 5205 . 5211) (nil fontified nil 5204 . 5205) (nil fontified nil 5203 . 5204) (nil fontified nil 5202 . 5203) (nil fontified nil 5201 . 5202) (nil fontified nil 5200 . 5201) (nil fontified nil 5199 . 5200) (nil fontified nil 5198 . 5199) (nil fontified nil 5197 . 5198) (nil fontified nil 5196 . 5197) (nil fontified nil 5195 . 5196) (nil fontified nil 5193 . 5195) (nil fontified nil 5187 . 5193) (nil fontified nil 5186 . 5187) (nil fontified nil 5185 . 5186) (nil fontified nil 5184 . 5185) (nil fontified nil 5183 . 5184) (nil fontified nil 5182 . 5183) (nil fontified nil 5181 . 5182) (nil fontified nil 5180 . 5181) (nil fontified nil 5179 . 5180) (nil fontified nil 5178 . 5179) (nil fontified nil 5177 . 5178) (nil fontified nil 5176 . 5177) (nil fontified nil 5175 . 5176) (nil fontified nil 5174 . 5175) (nil fontified nil 5173 . 5174) (nil fontified nil 5172 . 5173) (nil fontified nil 5171 . 5172) (nil fontified nil 5170 . 5171) (nil fontified nil 5169 . 5170) (nil fontified nil 5168 . 5169) (nil fontified nil 5167 . 5168) (nil fontified nil 5166 . 5167) (nil fontified nil 5165 . 5166) (nil fontified nil 5164 . 5165) (nil fontified nil 5163 . 5164) (nil fontified nil 5162 . 5163) (nil fontified nil 5161 . 5162) (nil fontified nil 5160 . 5161) (nil fontified nil 5159 . 5160) (nil fontified nil 5158 . 5159) (nil fontified nil 5157 . 5158) (nil fontified nil 5156 . 5157) (nil fontified nil 5155 . 5156) (nil fontified nil 5154 . 5155) (nil fontified nil 5153 . 5154) (nil fontified nil 5152 . 5153) (nil fontified nil 5151 . 5152) (nil fontified nil 5150 . 5151) (nil fontified nil 5149 . 5150) (nil fontified nil 5148 . 5149) (nil fontified nil 5147 . 5148) (nil fontified nil 5146 . 5147) (nil fontified nil 5145 . 5146) (nil fontified nil 5144 . 5145) (nil fontified nil 5137 . 5144) (nil fontified nil 5136 . 5137) (nil fontified nil 5135 . 5136) (nil fontified nil 5134 . 5135) (nil fontified nil 5133 . 5134) (nil fontified nil 5132 . 5133) (nil fontified nil 5131 . 5132) (nil fontified nil 5130 . 5131) (nil fontified nil 5129 . 5130) (nil fontified nil 5128 . 5129) (nil fontified nil 5127 . 5128) (nil fontified nil 5125 . 5127) (nil fontified nil 5120 . 5125) (nil fontified nil 5119 . 5120) (nil fontified nil 5118 . 5119) (nil fontified nil 5117 . 5118) (nil fontified nil 5116 . 5117) (nil fontified nil 5115 . 5116) (nil fontified nil 5114 . 5115) (nil fontified nil 5112 . 5114) (nil fontified nil 5106 . 5112) (nil fontified nil 5105 . 5106) (nil fontified nil 5104 . 5105) (nil fontified nil 5103 . 5104) (nil fontified nil 5102 . 5103) (nil fontified nil 5101 . 5102) (nil fontified nil 5100 . 5101) (nil fontified nil 5099 . 5100) (nil fontified nil 5098 . 5099) (nil fontified nil 5097 . 5098) (nil fontified nil 5096 . 5097) (nil fontified nil 5095 . 5096) (nil fontified nil 5094 . 5095) (nil fontified nil 5093 . 5094) (nil fontified nil 5092 . 5093) (nil fontified nil 5091 . 5092) (nil fontified nil 5090 . 5091) (nil fontified nil 5089 . 5090) (nil fontified nil 5088 . 5089) (nil fontified nil 5087 . 5088) (nil fontified nil 5086 . 5087) (nil fontified nil 5085 . 5086) (nil fontified nil 5084 . 5085) (nil fontified nil 5083 . 5084) (nil fontified nil 5082 . 5083) (nil fontified nil 5081 . 5082) (nil fontified nil 5080 . 5081) (nil fontified nil 5079 . 5080) (nil fontified nil 5078 . 5079) (nil fontified nil 5077 . 5078) (nil fontified nil 5076 . 5077) (nil fontified nil 5075 . 5076) (nil fontified nil 5074 . 5075) (nil fontified nil 5073 . 5074) (nil fontified nil 5072 . 5073) (nil fontified nil 5071 . 5072) (nil fontified nil 5070 . 5071) (nil fontified nil 5069 . 5070) (nil fontified nil 5068 . 5069) (nil fontified nil 5067 . 5068) (nil fontified nil 5066 . 5067) (nil fontified nil 5065 . 5066) (nil fontified nil 5064 . 5065) (nil fontified nil 5063 . 5064) (nil fontified nil 5055 . 5063) (nil fontified nil 5054 . 5055) (nil fontified nil 5052 . 5054) (nil fontified nil 5051 . 5052) (nil fontified nil 5049 . 5051) (nil fontified nil 5045 . 5049) (nil fontified nil 5044 . 5045) (nil fontified nil 5043 . 5044) (nil fontified nil 5042 . 5043) (nil fontified nil 5041 . 5042) (nil fontified nil 5040 . 5041) (nil fontified nil 5039 . 5040) (nil fontified nil 5038 . 5039) (nil fontified nil 5037 . 5038) (nil fontified nil 5036 . 5037) (nil fontified nil 5035 . 5036) (nil fontified nil 5030 . 5035) (5030 . 5221)) nil (25414 29401 258497 368000) 0 nil])
([nil nil ((5031 . 5032) (#("    " 0 4 (fontified t)) . 5031) 5030) nil (25414 29401 258488 60000) 0 nil])
([nil nil ((5042 . 5045) (#("      " 0 4 (fontified t) 4 6 (fontified t)) . 5042) 5050) nil (25414 29401 258487 677000) 0 nil])
([nil nil ((5067 . 5071) 5071) nil (25414 29401 258487 380000) 0 nil])
([nil nil ((5106 . 5109) (#("      " 0 4 (fontified t) 4 6 (fontified t)) . 5106) 5117) nil (25414 29401 258487 35000) 0 nil])
([nil nil ((5116 . 5119) (#("      " 0 4 (fontified t) 4 6 (fontified t)) . 5116) 5131) nil (25414 29401 258486 672000) 0 nil])
([nil nil ((5146 . 5150) 5157) nil (25414 29401 258486 73000) 0 nil])
([nil nil ((5185 . 5188) (#("      " 0 4 (fontified t) 4 6 (fontified t)) . 5185) 5201) nil (25414 29401 258485 675000) 0 nil])
([nil nil ((5200 . 5201) (#("    " 0 4 (fontified t)) . 5200) 5213) nil (25414 29401 258485 75000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -5237) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (#("r" 0 1 (fontified t)) . -5238) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (#("e" 0 1 (fontified t)) . -5239) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (#("f" 0 1 (fontified t)) . -5240) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (#("i" 0 1 (fontified t)) . -5241) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (#("x" 0 1 (fontified t)) . -5242) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (#("=" 0 1 (fontified t)) . -5243) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -5244) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (#("(" 0 1 (fontified t face font-lock-string-face)) . -5245) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . 1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -5246) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (#(" " 0 1 (fontified t)) . -5247) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (#("s" 0 1 (fontified t)) . -5248) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (#("u" 0 1 (fontified t)) . -5249) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (#("f" 0 1 (fontified t)) . -5250) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (#("f" 0 1 (fontified t)) . -5251) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (#("i" 0 1 (fontified t)) . -5252) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (#("x" 0 1 (fontified t)) . -5253) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (#("=" 0 1 (fontified t)) . -5254) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -5255) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . 1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (undo-tree-id2713 . -1) (#(")" 0 1 (fontified t face font-lock-string-face)) . -5256) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . 1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -5257) (undo-tree-id2722 . -1) 5258) nil (25414 29401 258474 891000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5236) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) 5237) nil (25414 29401 256198 823000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -4750) (undo-tree-id1932 . -1) 4751) nil (25414 29401 256174 292000) 0 nil])
([nil nil ((4528 . 4536)) nil (25414 29401 256167 97000) 0 nil])
([nil nil ((4593 . 4596) (t 25414 29401 267350 220000)) nil (25414 29421 858447 964000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face font-lock-string-face)) . -4593) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -4594) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -4595) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) 4596 (t 25414 29421 870432 770000)) nil (25414 29490 479007 807000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4521) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) 4522) nil (25414 29490 476695 453000) 0 nil])
([nil nil ((4568 . 4580)) nil (25414 29490 476686 91000) 0 nil])
([nil nil ((4677 . 4687) (4652 . 4657) (#(" " 0 1 (fontified t)) . 4652) (4672 . 4673) (t 25414 29490 486264 287000)) nil (25414 29652 661073 455000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4652) (#("	" 0 1 (fontified t)) . 4652) (#("	" 0 1 (fontified t)) . 4652) (#("
" 0 1 (fontified t)) . 4652)) nil (25414 29652 661072 505000) 0 nil])
([nil nil ((4652 . 4653)) nil (25414 29652 661071 786000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4653)) nil (25414 29652 661071 448000) 0 nil])
([nil nil ((4783 . 4791)) nil (25414 29652 661070 980000) 0 nil])
([nil nil ((4791 . 4799)) nil (25414 29652 661070 596000) 0 nil])
([nil nil ((4801 . 4802) (#("      " 0 6 (fontified t)) . 4801) 4815) nil (25414 29652 661070 121000) 0 nil])
([nil nil ((#("delimiter=\" \"" 0 9 (fontified t face (nxml-attribute-local-name)) 9 10 (fontified t) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face)) . -4769) (undo-tree-id3797 . -13) 4782) nil (25414 29652 661069 470000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4768) (undo-tree-id3796 . -1) 4769) nil (25414 29652 661067 323000) 0 nil])
([nil nil ((4785 . 4788)) nil (25414 29652 661066 269000) 0 nil])
([nil nil ((4788 . 4809)) nil (25414 29652 661065 933000) 0 nil])
([nil nil ((4809 . 4810)) nil (25414 29652 661065 588000) 0 nil])
([nil nil ((4813 . 4815) 4835) nil (25414 29652 661065 111000) 0 nil])
([nil nil ((4859 . 4864)) nil (25414 29652 661064 749000) 0 nil])
([nil nil ((4864 . 4865)) nil (25414 29652 661064 416000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -4862) (undo-tree-id3792 . -2) (undo-tree-id3793 . -2) (undo-tree-id3794 . -2) (undo-tree-id3795 . -2) (4865 . 4866)) nil (25414 29652 661063 977000) 0 nil])
([nil nil ((4864 . 4870)) nil (25414 29652 661062 181000) 0 nil])
([nil nil ((4870 . 4871)) nil (25414 29652 661061 922000) 0 nil])
([nil nil ((4871 . 4874)) nil (25414 29652 661061 580000) 0 nil])
([nil nil ((#("volume" 0 1 (fontified t face (nxml-element-local-name)) 1 2 (fontified t face (nxml-element-local-name)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name))) . -4864) (undo-tree-id3767 . -6) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -2) (undo-tree-id3771 . -1) (undo-tree-id3772 . -2) (undo-tree-id3773 . -3) (undo-tree-id3774 . -2) (undo-tree-id3775 . -3) (undo-tree-id3776 . -4) (undo-tree-id3777 . -3) (undo-tree-id3778 . -4) (undo-tree-id3779 . -5) (undo-tree-id3780 . -4) (undo-tree-id3781 . -5) (undo-tree-id3782 . -6) (undo-tree-id3783 . -5) (undo-tree-id3784 . -6) (undo-tree-id3785 . -6) (undo-tree-id3786 . -6) (undo-tree-id3787 . -6) (undo-tree-id3788 . -6) (undo-tree-id3789 . -6) (undo-tree-id3790 . 6) (undo-tree-id3791 . -6) 4870) nil (25414 29652 661060 841000) 0 nil])
([nil nil ((4864 . 4870)) nil (25414 29652 660980 543000) 0 nil])
([nil nil ((4874 . 4877)) nil (25414 29652 660980 199000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face (nxml-element-local-name))) . -4875) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (#("f" 0 1 (fontified t face (nxml-element-local-name))) . -4876) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) 4877) nil (25414 29652 660979 515000) 0 nil])
([nil nil ((4875 . 4878)) nil (25414 29652 660975 274000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face (nxml-element-local-name))) . -4877) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) 4878) nil (25414 29652 660974 715000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t face (nxml-tag-delimiter))) . -4874) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . 1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (#("c" 0 1 (fontified t face (nxml-element-local-name))) . -4875) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (#("h" 0 1 (fontified t face (nxml-element-local-name))) . -4876) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) 4877) nil (25414 29652 660969 224000) 0 nil])
([nil nil ((#("choose" 0 1 (fontified t face (nxml-element-local-name)) 1 2 (fontified t face (nxml-element-local-name)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name))) . -4864) (undo-tree-id3652 . -6) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -2) (undo-tree-id3656 . -1) (undo-tree-id3657 . -2) (undo-tree-id3658 . -3) (undo-tree-id3659 . -2) (undo-tree-id3660 . -3) (undo-tree-id3661 . -4) (undo-tree-id3662 . -3) (undo-tree-id3663 . -4) (undo-tree-id3664 . -5) (undo-tree-id3665 . -4) (undo-tree-id3666 . -5) (undo-tree-id3667 . -6) (undo-tree-id3668 . -5) (undo-tree-id3669 . -6) 4870) nil (25414 29652 659467 115000) 0 nil])
([nil nil ((4864 . 4866)) nil (25414 29652 659460 943000) 0 nil])
([nil nil ((4867 . 4870)) nil (25414 29652 659460 672000) 0 nil])
([nil nil ((4870 . 4891)) nil (25414 29652 659460 349000) 0 nil])
([nil nil ((4891 . 4892)) nil (25414 29652 659460 39000) 0 nil])
([nil nil ((4892 . 4897)) nil (25414 29652 659459 614000) 0 nil])
([nil nil ((4897 . 4909)) nil (25414 29652 659459 172000) 0 nil])
([nil nil ((4909 . 4913)) nil (25414 29652 659458 830000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (nxml-text font-lock-string-face))) . -4911) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -4912) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) 4913) nil (25414 29652 659458 6000) 0 nil])
([nil nil ((4911 . 4925)) nil (25414 29652 659451 750000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face font-lock-string-face)) . -4924) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) 4925) nil (25414 29652 659451 171000) 0 nil])
([nil nil ((4924 . 4934)) nil (25414 29652 659449 495000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -4933) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) 4934) nil (25414 29652 659449 23000) 0 nil])
([nil nil ((4933 . 4942)) nil (25414 29652 659447 614000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-string-face)) . -4928) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) 4929) nil (25414 29652 659447 21000) 0 nil])
([nil nil ((4941 . 4942)) nil (25414 29652 659444 870000) 0 nil])
([nil nil ((4942 . 4943)) nil (25414 29652 659444 308000) 0 nil])
([nil nil ((4943 . 4948)) nil (25414 29652 659443 990000) 0 nil])
([nil nil ((4948 . 4949)) nil (25414 29652 659443 486000) 0 nil])
([nil nil ((4949 . 4950)) nil (25414 29652 659443 210000) 0 nil])
([nil nil ((4950 . 4953)) nil (25414 29652 659442 747000) 0 nil])
([nil nil ((4930 . 4931)) nil (25414 29652 659442 277000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-text font-lock-string-face))) . -4947) (undo-tree-id3619 . -2) (undo-tree-id3620 . -2) (undo-tree-id3621 . -2) (undo-tree-id3622 . -2) (undo-tree-id3623 . -2) (undo-tree-id3624 . -2) (undo-tree-id3625 . -2) 4954) nil (25414 29652 659441 379000) 0 nil])
([nil nil ((#("		
" 0 2 (fontified t) 2 3 (fontified t)) . 4953) (undo-tree-id3554 . -2) (undo-tree-id3555 . -2) (undo-tree-id3556 . -2) (undo-tree-id3557 . -2) (undo-tree-id3558 . -2) (undo-tree-id3559 . -2) (undo-tree-id3560 . -2) (undo-tree-id3561 . -2) (undo-tree-id3562 . -2) (undo-tree-id3563 . -2) (undo-tree-id3564 . -2) (undo-tree-id3565 . -2) (undo-tree-id3566 . -2) (undo-tree-id3567 . -2) (undo-tree-id3568 . -2) (undo-tree-id3569 . -2) (undo-tree-id3570 . -2) (undo-tree-id3571 . -2) (undo-tree-id3572 . -2) (undo-tree-id3573 . -2) (undo-tree-id3574 . -2) (undo-tree-id3575 . -2) (undo-tree-id3576 . -2) (undo-tree-id3577 . -2) (undo-tree-id3578 . -2) (undo-tree-id3579 . -2) (undo-tree-id3580 . -2) (undo-tree-id3581 . -2) (undo-tree-id3582 . -2) (undo-tree-id3583 . -2) (undo-tree-id3584 . -2) (undo-tree-id3585 . -2) (undo-tree-id3586 . -2) (undo-tree-id3587 . -2) (undo-tree-id3588 . -2) (undo-tree-id3589 . -2) (undo-tree-id3590 . -2) (undo-tree-id3591 . -2) (undo-tree-id3592 . -2) (undo-tree-id3593 . -2) (undo-tree-id3594 . -2) (undo-tree-id3595 . -2) (undo-tree-id3596 . -2) (undo-tree-id3597 . -2) (undo-tree-id3598 . -2) (undo-tree-id3599 . -2) (undo-tree-id3600 . -2) (undo-tree-id3601 . -2) (undo-tree-id3602 . -2) (undo-tree-id3603 . -2) (undo-tree-id3604 . -2) (undo-tree-id3605 . -2) (undo-tree-id3606 . -2) (undo-tree-id3607 . -2) (undo-tree-id3608 . -2) (undo-tree-id3609 . -2) (undo-tree-id3610 . -2) (undo-tree-id3611 . -2) (undo-tree-id3612 . -2) (undo-tree-id3613 . -2) (undo-tree-id3614 . -2) (undo-tree-id3615 . -2) (undo-tree-id3616 . -2) (undo-tree-id3617 . -2) (undo-tree-id3618 . -3)) nil (25414 29652 659438 236000) 0 nil])
([nil nil ((#("	      <group delimiter=\" \">" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t) 14 23 (fontified t face (nxml-attribute-local-name)) 23 24 (fontified t) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face (nxml-tag-delimiter))) . 4953) (undo-tree-id3549 . -7) (undo-tree-id3550 . -7) (undo-tree-id3551 . -7) (undo-tree-id3552 . 28) (undo-tree-id3553 . -28)) nil (25414 29652 659413 579000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4953) (undo-tree-id3547 . 1) (undo-tree-id3548 . -1)) nil (25414 29652 659410 784000) 0 nil])
([nil nil ((#("		<choose>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-tag-delimiter))) . 4953) (undo-tree-id3545 . 10) (undo-tree-id3546 . -10)) nil (25414 29652 659409 427000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4953) (undo-tree-id3542 . -1) (undo-tree-id3543 . 1) (undo-tree-id3544 . -1)) nil (25414 29652 659407 887000) 0 nil])
([nil nil ((#("		  <if variable=\"number\">" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-delimiter))) . 4953) (undo-tree-id3540 . 26) (undo-tree-id3541 . -26)) nil (25414 29652 659406 149000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4953) (undo-tree-id3539 . -1)) nil (25414 29652 659404 822000) 0 nil])
([nil nil ((#("		    <text variable=\"number\"/>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 20 (fontified t face (nxml-attribute-local-name)) 20 21 (fontified t) 21 22 (fontified t face font-lock-string-face) 22 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face (nxml-tag-slash)) 30 31 (fontified t face (nxml-tag-delimiter))) . 4953) (undo-tree-id3537 . 31) (undo-tree-id3538 . -31)) nil (25414 29652 659403 768000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4953) (undo-tree-id3536 . -1)) nil (25414 29652 659401 985000) 0 nil])
([nil nil ((#("		  </if>" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 6 (fontified t face (nxml-tag-slash)) 6 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-tag-delimiter))) . 4953) (undo-tree-id3530 . 3) (undo-tree-id3531 . -8) (undo-tree-id3532 . -4) (undo-tree-id3533 . -9) (undo-tree-id3534 . 9) (undo-tree-id3535 . -9)) nil (25414 29652 659401 125000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4953) (undo-tree-id3529 . -1)) nil (25414 29652 880665 15000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -4960) (4960 . 4961) (#("	" 0 1 (fontified nil)) . 4960) (undo-tree-id3835 . 1) (4954 . 4960) 4953) nil (25414 29664 265823 283000) 0 nil] [nil nil ((#("		</choose>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-tag-slash)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 4953) (undo-tree-id3525 . -2) (undo-tree-id3526 . -11) (undo-tree-id3527 . 11) (undo-tree-id3528 . -11)) ((4953 . 4964)) (25414 29652 659395 591000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -4977) (4977 . 4978) (#("	" 0 1 (fontified nil)) . 4977) (undo-tree-id3834 . 1) (4971 . 4977)) nil (25414 29664 265821 273000) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified t)) . -4988) 4987) nil (25414 29664 265819 329000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5014) 5012) nil (25414 29664 265818 473000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5053) (undo-tree-id3833 . -2) 5055) nil (25414 29664 265817 565000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -5066) (5066 . 5067) (#("	" 0 1 (fontified nil)) . 5066) (undo-tree-id3831 . -1) (undo-tree-id3832 . 1) (5060 . 5066) 5061) nil (25414 29664 265815 907000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -5083) (5083 . 5084) (#("	" 0 1 (fontified nil)) . 5083) (undo-tree-id3830 . 1) (5077 . 5083)) nil (25414 29664 265813 176000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5094) 5093) nil (25414 29664 265811 392000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5118) 5116) nil (25414 29664 265810 572000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5154) (undo-tree-id3829 . -2) 5156) nil (25414 29664 265809 606000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5162)) nil (25414 29664 265808 70000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5191) 5189) nil (25414 29664 265807 398000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5227) (undo-tree-id3828 . -2) 5229) nil (25414 29664 265806 189000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -5245) (5245 . 5246) (#("	" 0 1 (fontified nil)) . 5245) (undo-tree-id3826 . -1) (undo-tree-id3827 . 1) (5239 . 5245) 5240) nil (25414 29664 265804 579000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -5262) (5262 . 5263) (#("	" 0 1 (fontified nil)) . 5262) (undo-tree-id3825 . 1) (5256 . 5262)) nil (25414 29664 265802 96000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5293) (undo-tree-id3824 . -2) 5295) nil (25414 29664 265800 198000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5305) (undo-tree-id3819 . -2) (undo-tree-id3820 . -2) (undo-tree-id3821 . -2) (undo-tree-id3822 . -2) (undo-tree-id3823 . -2) 5307) nil (25414 29664 265798 457000) 0 nil])
([nil nil ((#("</group>" 0 1 (fontified t face (nxml-tag-delimiter)) 1 2 (fontified t face (nxml-tag-slash)) 2 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-tag-delimiter))) . 5317) (undo-tree-id3815 . 6) (undo-tree-id3816 . -7) (undo-tree-id3817 . -8) (undo-tree-id3818 . -8)) nil (25414 29664 265794 232000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5317) (undo-tree-id3813 . 1) (undo-tree-id3814 . -1)) nil (25414 29664 265790 481000) 0 nil])
([nil nil ((#("  	" 0 2 (fontified t) 2 3 (fontified t)) . -5315) (undo-tree-id3798 . -2) (undo-tree-id3799 . -2) (undo-tree-id3800 . -2) (undo-tree-id3801 . -2) (undo-tree-id3802 . -2) (undo-tree-id3803 . -2) (undo-tree-id3804 . -2) (undo-tree-id3805 . -2) (undo-tree-id3806 . -2) (undo-tree-id3807 . -2) (undo-tree-id3808 . -2) (undo-tree-id3809 . -2) (undo-tree-id3810 . -2) (undo-tree-id3811 . -2) (undo-tree-id3812 . -2) 5317) nil (25414 29664 265786 641000) 0 nil])
([nil nil ((4768 . 4782) (t 25414 29664 277481 181000)) nil (25414 29701 273672 392000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . -4769) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (#("e" 0 1 (fontified t)) . -4770) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (#("l" 0 1 (fontified t)) . -4771) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (#("i" 0 1 (fontified t)) . -4772) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (#("m" 0 1 (fontified t)) . -4773) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (#("i" 0 1 (fontified t)) . -4774) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (#("t" 0 1 (fontified t)) . -4775) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (#("e" 0 1 (fontified t)) . -4776) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (#("r" 0 1 (fontified t)) . -4777) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1) (undo-tree-id4473 . -1) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (#("=" 0 1 (fontified t)) . -4778) (undo-tree-id4481 . -1) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -4779) (undo-tree-id4510 . -1) (undo-tree-id4511 . -1) (undo-tree-id4512 . -1) (undo-tree-id4513 . -1) (undo-tree-id4514 . -1) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . 1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -4780) (undo-tree-id4535 . -1) (undo-tree-id4536 . -1) (undo-tree-id4537 . -1) (undo-tree-id4538 . -1) (undo-tree-id4539 . -1) (undo-tree-id4540 . -1) (undo-tree-id4541 . -1) (undo-tree-id4542 . -1) (undo-tree-id4543 . -1) (undo-tree-id4544 . -1) (undo-tree-id4545 . -1) (undo-tree-id4546 . -1) (undo-tree-id4547 . -1) (undo-tree-id4548 . -1) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -4781) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) 4782) nil (25414 29701 273647 357000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4768) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) 4769) nil (25414 29701 273330 863000) 0 nil])
([nil nil ((5075 . 5083)) nil (25414 29701 271292 613000) 0 nil])
([nil nil ((5083 . 5084)) nil (25414 29701 271292 228000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -5081) (undo-tree-id3855 . -2) (undo-tree-id3856 . -2) (undo-tree-id3857 . -2) (undo-tree-id3858 . -2) (5084 . 5085)) nil (25414 29701 271291 891000) 0 nil])
([nil nil ((5083 . 5088)) nil (25414 29701 271290 127000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face (nxml-element-local-name))) . -5087) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) 5088) nil (25414 29701 271289 752000) 0 nil])
([nil nil ((5087 . 5088)) nil (25414 29701 271286 349000) 0 nil])
([nil nil ((5088 . 5094)) nil (25414 29701 271286 33000) 0 nil])
([nil nil ((5088 . 5089)) nil (25414 29701 271285 692000) 0 nil])
([nil nil ((5095 . 5102)) nil (25414 29701 271285 272000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face (nxml-text))) . -5101) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) 5102) nil (25414 29701 271284 462000) 0 nil])
([nil nil ((5101 . 5102)) nil (25414 29701 271273 175000) 0 nil])
([nil nil ((4768 . 4779) (t 25414 29701 283696 743000)) nil (25414 29717 484335 100000) 0 nil])
([nil nil ((#("	    <group>" 0 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter))) . 5101) (undo-tree-id4606 . -11) (undo-tree-id4607 . -11) (undo-tree-id4608 . -11) (undo-tree-id4609 . -11) (undo-tree-id4610 . -11) (undo-tree-id4611 . -12) (t 25414 29717 500165 785000)) nil (25414 29758 185687 154000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5101) (undo-tree-id4603 . -1) (undo-tree-id4604 . 1) (undo-tree-id4605 . -1)) nil (25414 29758 185684 406000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5106) 5101) nil (25414 29758 185682 849000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -5122) (5122 . 5123) (#("	" 0 1 (fontified nil)) . 5122) (undo-tree-id4602 . 1) (5116 . 5122)) nil (25414 29758 185682 314000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5144) 5143) nil (25414 29758 185681 488000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -5185) (5185 . 5186) (#("	" 0 1 (fontified nil)) . 5185) (undo-tree-id4600 . -1) (undo-tree-id4601 . 1) (5179 . 5185) 5180) nil (25414 29758 185680 863000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -5198) (5198 . 5199) (#("	" 0 1 (fontified nil)) . 5198) (undo-tree-id4599 . 1) (5192 . 5198)) nil (25414 29758 185679 341000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5225) 5224) nil (25414 29758 185678 281000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -5266) (5266 . 5267) (#("	" 0 1 (fontified nil)) . 5266) (undo-tree-id4597 . -1) (undo-tree-id4598 . 1) (5260 . 5266) 5261) nil (25414 29758 185677 758000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5282) (undo-tree-id4596 . -2) 5284) nil (25414 29758 185676 438000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5297)) nil (25414 29758 185675 626000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -5326) (undo-tree-id4589 . -2) (undo-tree-id4590 . -2) (undo-tree-id4591 . -2) (undo-tree-id4592 . -2) (undo-tree-id4593 . -2) (undo-tree-id4594 . -2) (undo-tree-id4595 . -2) 5328) nil (25414 29758 185674 780000) 0 nil])
([nil nil ((#("</group>" 0 1 (fontified t face (nxml-tag-delimiter)) 1 2 (fontified t face (nxml-tag-slash)) 2 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-tag-delimiter))) . 5338) (undo-tree-id4585 . 6) (undo-tree-id4586 . -7) (undo-tree-id4587 . -8) (undo-tree-id4588 . -8)) nil (25414 29758 185671 530000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5338) (undo-tree-id4584 . -1)) nil (25414 29758 185669 474000) 0 nil])
([nil nil ((#("  	" 0 2 (fontified t) 2 3 (fontified t)) . -5336) (undo-tree-id4561 . -2) (undo-tree-id4562 . -2) (undo-tree-id4563 . -2) (undo-tree-id4564 . -2) (undo-tree-id4565 . -2) (undo-tree-id4566 . -2) (undo-tree-id4567 . -2) (undo-tree-id4568 . -2) (undo-tree-id4569 . -2) (undo-tree-id4570 . -2) (undo-tree-id4571 . -2) (undo-tree-id4572 . -2) (undo-tree-id4573 . -2) (undo-tree-id4574 . -2) (undo-tree-id4575 . -2) (undo-tree-id4576 . -2) (undo-tree-id4577 . -2) (undo-tree-id4578 . -2) (undo-tree-id4579 . -2) (undo-tree-id4580 . -2) (undo-tree-id4581 . -2) (undo-tree-id4582 . -2) (undo-tree-id4583 . -2) 5338) nil (25414 29758 185666 501000) 0 nil])
([nil nil ((#("isbn" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face)) . -3370) (undo-tree-id4647 . -4) (undo-tree-id4648 . -2) (undo-tree-id4649 . 4) (undo-tree-id4650 . -4) (undo-tree-id4651 . -2) (undo-tree-id4652 . -2) (undo-tree-id4653 . -2) (undo-tree-id4654 . -2) (undo-tree-id4655 . -4) (undo-tree-id4656 . -4) (undo-tree-id4657 . -4) (undo-tree-id4658 . -4) (undo-tree-id4659 . -4) 3374 (t 25414 29758 196336 631000)) nil (25414 29872 91961 829000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -3368) (undo-tree-id4612 . -1) (undo-tree-id4613 . -1) (undo-tree-id4614 . -1) (undo-tree-id4615 . -1) (undo-tree-id4616 . -1) (undo-tree-id4617 . -1) (undo-tree-id4618 . -1) (undo-tree-id4619 . -1) (undo-tree-id4620 . -1) (undo-tree-id4621 . -1) (undo-tree-id4622 . -1) (undo-tree-id4623 . -1) (undo-tree-id4624 . -1) (undo-tree-id4625 . -1) (undo-tree-id4626 . -1) (undo-tree-id4627 . -1) (undo-tree-id4628 . -1) (undo-tree-id4629 . -1) (undo-tree-id4630 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -3369) (undo-tree-id4631 . -1) (undo-tree-id4632 . -1) (undo-tree-id4633 . -1) (undo-tree-id4634 . -1) (undo-tree-id4635 . -1) (undo-tree-id4636 . -1) (undo-tree-id4637 . -1) (undo-tree-id4638 . -1) (undo-tree-id4639 . -1) (undo-tree-id4640 . -1) (undo-tree-id4641 . -1) (undo-tree-id4642 . -1) (undo-tree-id4643 . -1) (undo-tree-id4644 . -1) (undo-tree-id4645 . -1) (undo-tree-id4646 . -1) 3370) nil (25414 29872 91954 141000) 0 nil])
([nil nil ((3368 . 3374)) nil (25414 29872 91165 974000) 0 nil])
([nil nil ((3360 . 3375) (t 25414 29872 101616 345000)) nil (25414 29888 371850 461000) 0 nil])
([nil nil ((#("url" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face)) . -5747) (undo-tree-id4663 . -3) (undo-tree-id4664 . -2) (undo-tree-id4665 . 3) (undo-tree-id4666 . -3) (undo-tree-id4667 . -2) (undo-tree-id4668 . -2) (undo-tree-id4669 . -2) (undo-tree-id4670 . -2) (undo-tree-id4671 . -3) (undo-tree-id4672 . -3) (undo-tree-id4673 . -3) (undo-tree-id4674 . -3) (undo-tree-id4675 . -3) 5750 (t 25414 29888 381418 200000)) nil (25414 29949 408632 297000) 0 nil])
([nil nil ((5747 . 5750)) nil (25414 29949 408625 915000) 0 nil])
([nil nil ((#("url" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face)) . -5771) (undo-tree-id4660 . -3) (undo-tree-id4661 . 3) (undo-tree-id4662 . -3) 5774) nil (25414 29949 408624 869000) 0 nil])
([nil nil ((5771 . 5774)) nil (25414 29949 408600 687000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -5032) (undo-tree-id4676 . -1) (undo-tree-id4677 . -1) (undo-tree-id4678 . -1) (undo-tree-id4679 . -1) (undo-tree-id4680 . -1) (undo-tree-id4681 . -1) (undo-tree-id4682 . -1) 5033 (t 25414 29949 420675 524000)) nil (25414 30002 892782 760000) 0 nil])
([nil nil ((5055 . 5058)) nil (25414 30002 892774 146000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -5074) (undo-tree-id4683 . -1) 5075 (t 25414 30002 900024 828000)) nil (25414 30005 255712 177000) 0 nil])
([nil nil ((1259 . 1262) (t 25414 30005 266662 642000)) nil (25414 30354 387235 443000) 0 nil])
([nil nil ((1262 . 1266)) nil (25414 30354 387235 179000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face (nxml-text))) . -1264) (undo-tree-id4686 . -1) (#("-" 0 1 (fontified t face (nxml-text))) . -1265) (undo-tree-id4687 . -1) 1266) nil (25414 30354 387234 750000) 0 nil])
([nil nil ((1264 . 1266)) nil (25414 30354 387233 598000) 0 nil])
([nil nil ((1446 . 1450) (1435 . 1437) (1443 . 1444)) nil (25414 30354 387233 354000) 0 nil])
([nil nil ((1450 . 1453)) nil (25414 30354 387233 37000) 0 nil])
([nil nil ((#("      <else>" 0 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter))) . 1598) (undo-tree-id4684 . -12) (undo-tree-id4685 . -12)) nil (25414 30354 387232 637000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1598)) nil (25414 30354 387228 374000) 0 nil])
([nil nil ((#("	<text term=\"no date\" form=\"short\"/>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t) 7 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t) 12 13 (fontified t face font-lock-string-face) 13 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t) 22 25 (fontified t face (nxml-attribute-local-name)) 25 26 (fontified t face (nxml-attribute-local-name)) 26 27 (fontified t) 27 28 (fontified t face font-lock-string-face) 28 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face (nxml-tag-slash)) 35 36 (fontified t face (nxml-tag-delimiter))) . 1598)) nil (25414 30354 387228 87000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1598)) nil (25414 30354 387227 576000) 0 nil])
([nil nil ((#("      </else>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 8 (fontified t face (nxml-tag-slash)) 8 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 1598)) nil (25414 30354 387227 170000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1598)) nil (25414 30354 387226 398000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1600 . 1601) (nil fontified nil 1600 . 1601) (nil fontified nil 1599 . 1600) (nil fontified nil 1598 . 1599) (nil fontified nil 1597 . 1598) (nil fontified nil 1596 . 1597) (nil fontified nil 1595 . 1596) (nil fontified nil 1594 . 1595) (nil fontified nil 1588 . 1594) (nil fontified nil 1587 . 1588) (nil fontified nil 1586 . 1587) (nil fontified nil 1582 . 1586) (nil fontified nil 1581 . 1582) (nil fontified nil 1580 . 1581) (nil fontified nil 1576 . 1580) (nil fontified nil 1575 . 1576) (nil fontified nil 1574 . 1575) (nil fontified nil 1569 . 1574) (nil fontified nil 1568 . 1569) (nil fontified nil 1567 . 1568) (nil fontified nil 1563 . 1567) (nil fontified nil 1562 . 1563) (nil fontified nil 1553 . 1562) (nil fontified nil 1552 . 1553) (nil fontified nil 1549 . 1552) (1549 . 1601)) nil (25414 30354 387222 931000) 0 nil])
([nil nil ((#("  <!--" 0 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t syntax-table (2097163) face font-lock-comment-delimiter-face) 3 4 (fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face)) . 1260) (t 25414 30354 399073 495000)) nil (25414 30401 678553 826000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 1260)) nil (25414 30401 678553 185000) 0 nil])
([nil nil ((#("    -->" 0 4 (fontified t face (nxml-text)) 4 5 (fontified t face (nxml-text)) 5 6 (fontified t face (nxml-text)) 6 7 (syntax-table (2097164) fontified t face (nxml-text))) . 1439)) nil (25414 30401 678552 671000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face (nxml-text))) . 1439)) nil (25414 30401 678552 331000) 0 nil])
([nil nil ((1062 . 1063)) nil (25414 30401 678551 986000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1062) (undo-tree-id4695 . -1) (undo-tree-id4696 . -1) (undo-tree-id4697 . -1) 1063) nil (25414 30401 678551 534000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1388 . 1389) (nil fontified nil 1388 . 1389) (nil fontified nil 1387 . 1388) (nil fontified nil 1386 . 1387) (nil fontified nil 1385 . 1386) (nil fontified nil 1384 . 1385) (nil fontified nil 1383 . 1384) (nil fontified nil 1382 . 1383) (nil fontified nil 1376 . 1382) (nil fontified nil 1375 . 1376) (nil fontified nil 1374 . 1375) (nil fontified nil 1372 . 1374) (nil fontified nil 1371 . 1372) (nil fontified nil 1370 . 1371) (nil fontified nil 1364 . 1370) (nil fontified nil 1363 . 1364) (nil fontified nil 1362 . 1363) (nil fontified nil 1358 . 1362) (nil fontified nil 1357 . 1358) (nil fontified nil 1356 . 1357) (nil fontified nil 1352 . 1356) (nil fontified nil 1351 . 1352) (nil fontified nil 1346 . 1351) (nil fontified nil 1345 . 1346) (nil fontified nil 1338 . 1345) (nil fontified nil 1337 . 1338) (nil fontified nil 1336 . 1337) (nil fontified nil 1335 . 1336) (nil fontified nil 1331 . 1335) (nil fontified nil 1330 . 1331) (nil fontified nil 1329 . 1330) (nil fontified nil 1326 . 1329) (nil fontified nil 1325 . 1326) (nil fontified nil 1321 . 1325) (nil fontified nil 1320 . 1321) (nil fontified nil 1315 . 1320) (nil fontified nil 1314 . 1315) (1314 . 1389)) nil (25414 30401 678549 327000) 0 nil])
([nil nil ((#("      <label form=\"verb\" suffix=\" \"/>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t) 13 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t) 25 31 (fontified t face (nxml-attribute-local-name)) 31 32 (fontified t) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face (nxml-tag-slash)) 36 37 (fontified t face (nxml-tag-delimiter))) . 1389) (undo-tree-id4694 . -37)) nil (25414 30401 678547 481000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1389) (undo-tree-id4692 . 1) (undo-tree-id4693 . -1)) nil (25414 30401 678546 714000) 0 nil])
([nil nil ((#("      <name delimiter=\", \" initialize-with=\". \" and=\"text\"/>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 23 (fontified t face font-lock-string-face) 23 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t) 27 31 (fontified t face (nxml-attribute-local-name)) 31 36 (fontified t face (nxml-attribute-local-name)) 36 42 (fontified t face (nxml-attribute-local-name)) 42 43 (fontified t) 43 44 (fontified t face font-lock-string-face) 44 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t) 48 51 (fontified t face (nxml-attribute-local-name)) 51 52 (fontified t) 52 53 (fontified t face font-lock-string-face) 53 57 (fontified t face font-lock-string-face) 57 58 (fontified t face font-lock-string-face) 58 59 (fontified t face (nxml-tag-slash)) 59 60 (fontified t face (nxml-tag-delimiter))) . 1389) (undo-tree-id4690 . 60) (undo-tree-id4691 . -60)) nil (25414 30401 678545 440000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1389) (undo-tree-id4688 . 1) (undo-tree-id4689 . -1)) nil (25414 30401 678542 478000) 0 nil])
([nil nil ((#("      <text macro=\"year-date\"/>" 0 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face (nxml-tag-slash)) 30 31 (fontified t face (nxml-tag-delimiter))) . 2099) (t 25414 30401 688497 193000)) nil (25414 30580 478268 770000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2099)) nil (25414 30580 478268 422000) 0 nil])
([nil nil ((#("edition-" 0 8 (fontified t face font-lock-string-face)) . -2138) (undo-tree-id4855 . -8) 2146) nil (25414 30580 478268 93000) 0 nil])
([nil nil ((#("    <group delimiter=\", \">" 0 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 20 (fontified t face (nxml-attribute-local-name)) 20 21 (fontified t) 21 22 (fontified t face font-lock-string-face) 22 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-delimiter))) . 2147)) nil (25414 30580 478267 469000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2147)) nil (25414 30580 478267 202000) 0 nil])
([nil nil ((#("      <choose>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-tag-delimiter))) . 2147)) nil (25414 30580 478266 927000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2147)) nil (25414 30580 478266 652000) 0 nil])
([nil nil ((#("	<if is-numeric=\"edition\">" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t) 5 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t) 16 17 (fontified t face font-lock-string-face) 17 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-delimiter))) . 2147)) nil (25414 30580 478266 356000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2147)) nil (25414 30580 478266 59000) 0 nil])
([nil nil ((#("	  <group delimiter=\" \">" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 16 (fontified t face (nxml-attribute-local-name)) 16 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face (nxml-tag-delimiter))) . 2147)) nil (25414 30580 478265 703000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2147)) nil (25414 30580 478265 430000) 0 nil])
([nil nil ((#("	    <number variable=\"edition\" form=\"ordinal\"/>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t) 13 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 23 (fontified t face font-lock-string-face) 23 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t) 32 36 (fontified t face (nxml-attribute-local-name)) 36 37 (fontified t) 37 38 (fontified t face font-lock-string-face) 38 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (fontified t face (nxml-tag-slash)) 47 48 (fontified t face (nxml-tag-delimiter))) . 2147)) nil (25414 30580 478265 139000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2147)) nil (25414 30580 478264 879000) 0 nil])
([nil nil ((#("	    <text term=\"edition\" form=\"short\"/>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t) 16 17 (fontified t face font-lock-string-face) 17 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t) 26 30 (fontified t face (nxml-attribute-local-name)) 30 31 (fontified t) 31 32 (fontified t face font-lock-string-face) 32 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face (nxml-tag-slash)) 39 40 (fontified t face (nxml-tag-delimiter))) . 2147)) nil (25414 30580 478264 602000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2147)) nil (25414 30580 478264 320000) 0 nil])
([nil nil ((#("	  </group>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 5 (fontified t face (nxml-tag-slash)) 5 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 2147)) nil (25414 30580 478264 45000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2147)) nil (25414 30580 478263 578000) 0 nil])
([nil nil ((#("	</if>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-slash)) 3 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-tag-delimiter))) . 2147)) nil (25414 30580 478263 254000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2147)) nil (25414 30580 478262 966000) 0 nil])
([nil nil ((#("	<else>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-tag-delimiter))) . 2147)) nil (25414 30580 478262 687000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2147)) nil (25414 30580 478262 469000) 0 nil])
([nil nil ((#("	  <text variable=\"edition\"/>" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t) 9 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t) 18 19 (fontified t face font-lock-string-face) 19 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face (nxml-tag-slash)) 28 29 (fontified t face (nxml-tag-delimiter))) . 2147)) nil (25414 30580 478262 204000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2147)) nil (25414 30580 478261 530000) 0 nil])
([nil nil ((#("	</else>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-slash)) 3 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-tag-delimiter))) . 2147)) nil (25414 30580 478261 243000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2147)) nil (25414 30580 478260 945000) 0 nil])
([nil nil ((#("      </choose>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 8 (fontified t face (nxml-tag-slash)) 8 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-tag-delimiter))) . 2147) (undo-tree-id4853 . 7) (undo-tree-id4854 . -14)) nil (25414 30580 478260 629000) 0 nil])
([nil nil ((2147 . 2151)) nil (25414 30580 478259 480000) 0 nil])
([nil nil ((2151 . 2159)) nil (25414 30580 478259 218000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (nxml-element-local-name))) . -2158) (undo-tree-id4852 . -1) 2159) nil (25414 30580 478258 891000) 0 nil])
([nil nil ((2158 . 2159)) nil (25414 30580 478258 389000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face (nxml-text))) . -2158) (undo-tree-id4851 . -1) 2159) nil (25414 30580 478258 20000) 0 nil])
([nil nil ((2158 . 2159)) nil (25414 30580 478257 438000) 0 nil])
([nil nil ((2159 . 2166)) nil (25414 30580 478257 214000) 0 nil])
([nil nil ((2166 . 2169)) nil (25414 30580 478256 884000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t face (nxml-text) syntax-table (1))) . -2166) (undo-tree-id4848 . -1) (#("i" 0 1 (fontified t face (nxml-text))) . -2167) (undo-tree-id4849 . -1) (#("f" 0 1 (fontified t face (nxml-text))) . -2168) (undo-tree-id4850 . -1) 2169) nil (25414 30580 478256 332000) 0 nil])
([nil nil ((2166 . 2186)) nil (25414 30580 478255 192000) 0 nil])
([nil nil ((2186 . 2188)) nil (25414 30580 478254 983000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2285 . 2286) (nil fontified nil 2285 . 2286) (nil fontified nil 2284 . 2285) (nil fontified nil 2283 . 2284) (nil fontified nil 2275 . 2283) (nil fontified nil 2274 . 2275) (nil fontified nil 2266 . 2274) (nil fontified nil 2265 . 2266) (nil fontified nil 2261 . 2265) (nil fontified nil 2260 . 2261) (nil fontified nil 2259 . 2260) (nil fontified nil 2258 . 2259) (nil fontified nil 2257 . 2258) (nil fontified nil 2256 . 2257) (nil fontified nil 2255 . 2256) (nil fontified nil 2252 . 2255) (nil fontified nil 2239 . 2252) (nil fontified nil 2238 . 2239) (nil fontified nil 2237 . 2238) (nil fontified nil 2231 . 2237) (nil fontified nil 2228 . 2231) (nil fontified nil 2227 . 2228) (nil fontified nil 2226 . 2227) (nil fontified nil 2221 . 2226) (nil fontified nil 2220 . 2221) (nil fontified nil 2219 . 2220) (nil fontified nil 2215 . 2219) (nil fontified nil 2214 . 2215) (nil fontified nil 2213 . 2214) (nil fontified nil 2207 . 2213) (nil fontified nil 2206 . 2207) (nil fontified nil 2205 . 2206) (nil fontified nil 2197 . 2205) (nil fontified nil 2196 . 2197) (nil fontified nil 2191 . 2196) (nil fontified nil 2190 . 2191) (nil fontified nil 2189 . 2190) (2189 . 2286)) nil (25414 30580 478254 444000) 0 nil])
([nil nil ((2285 . 2287)) nil (25414 30580 478253 58000) 0 nil])
([nil nil ((2287 . 2288)) nil (25414 30580 478252 844000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil face (nxml-tag-delimiter))) . -2292) (2292 . 2293) (#("	" 0 1 (fontified nil face (nxml-tag-delimiter))) . 2292) (undo-tree-id4842 . -1) (undo-tree-id4843 . -1) (undo-tree-id4844 . -1) (undo-tree-id4845 . -1) (undo-tree-id4846 . -1) (undo-tree-id4847 . -1) (2286 . 2292) (2288 . 2289)) nil (25414 30580 478252 360000) 0 nil])
([nil nil ((2294 . 2295)) nil (25414 30580 478249 672000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t face (nxml-tag-delimiter))) . -2292) (undo-tree-id4807 . -1) (undo-tree-id4808 . -1) (undo-tree-id4809 . -1) (undo-tree-id4810 . -1) (undo-tree-id4811 . -1) (undo-tree-id4812 . -1) (undo-tree-id4813 . -1) (undo-tree-id4814 . -1) (undo-tree-id4815 . -1) (undo-tree-id4816 . -1) (undo-tree-id4817 . -1) (undo-tree-id4818 . -1) (undo-tree-id4819 . -1) (undo-tree-id4820 . -1) (undo-tree-id4821 . -1) (undo-tree-id4822 . -1) (#("/" 0 1 (fontified t face (nxml-tag-slash))) . -2293) (undo-tree-id4823 . -1) (undo-tree-id4824 . -1) (undo-tree-id4825 . -1) (undo-tree-id4826 . -1) (undo-tree-id4827 . -1) (undo-tree-id4828 . -1) (undo-tree-id4829 . -1) (undo-tree-id4830 . -1) (undo-tree-id4831 . -1) (undo-tree-id4832 . -1) (undo-tree-id4833 . -1) (undo-tree-id4834 . -1) (#("i" 0 1 (fontified t face (nxml-element-local-name))) . -2294) (undo-tree-id4835 . -1) (undo-tree-id4836 . -1) (undo-tree-id4837 . -1) (undo-tree-id4838 . -1) (undo-tree-id4839 . -1) (undo-tree-id4840 . -1) (undo-tree-id4841 . -1) 2295) nil (25414 30580 478248 920000) 0 nil])
([nil nil ((2286 . 2287) (#("      " 0 6 (fontified t face (nxml-tag-delimiter))) . 2286) (undo-tree-id4780 . -6) (undo-tree-id4781 . -6) (undo-tree-id4782 . -6) (undo-tree-id4783 . -6) (undo-tree-id4784 . -6) (undo-tree-id4785 . -6) (undo-tree-id4786 . -6) (undo-tree-id4787 . -6) (undo-tree-id4788 . -6) (undo-tree-id4789 . -6) (undo-tree-id4790 . -6) (undo-tree-id4791 . -6) (undo-tree-id4792 . -6) (undo-tree-id4793 . -6) (undo-tree-id4794 . -6) (undo-tree-id4795 . -6) (undo-tree-id4796 . -6) (undo-tree-id4797 . -6) (undo-tree-id4798 . -6) (undo-tree-id4799 . -6) (undo-tree-id4800 . -6) (undo-tree-id4801 . -6) (undo-tree-id4802 . -6) (undo-tree-id4803 . -6) (undo-tree-id4804 . -6) (undo-tree-id4805 . -6) (undo-tree-id4806 . -6) 2292) nil (25414 30580 478238 110000) 0 nil])
([nil nil ((2287 . 2296)) nil (25414 30580 478227 794000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face (nxml-text))) . -2294) (undo-tree-id4751 . -1) (undo-tree-id4752 . -1) (undo-tree-id4753 . -1) (undo-tree-id4754 . -1) (undo-tree-id4755 . -1) (undo-tree-id4756 . -1) (undo-tree-id4757 . -1) (undo-tree-id4758 . -1) (undo-tree-id4759 . -1) (undo-tree-id4760 . -1) (undo-tree-id4761 . -1) (undo-tree-id4762 . -1) (undo-tree-id4763 . -1) (undo-tree-id4764 . -1) (undo-tree-id4765 . -1) (undo-tree-id4766 . -1) (undo-tree-id4767 . -1) (#(">" 0 1 (fontified t face (nxml-text))) . -2295) (undo-tree-id4768 . -1) (undo-tree-id4769 . -1) (undo-tree-id4770 . -1) (undo-tree-id4771 . -1) (undo-tree-id4772 . -1) (undo-tree-id4773 . -1) (undo-tree-id4774 . -1) (undo-tree-id4775 . -1) (undo-tree-id4776 . -1) (undo-tree-id4777 . -1) (undo-tree-id4778 . -1) (undo-tree-id4779 . -1) 2296) nil (25414 30580 478226 913000) 0 nil])
([nil nil ((2294 . 2295)) nil (25414 30580 478195 182000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face (nxml-text))) . -2294) (undo-tree-id4746 . -1) (undo-tree-id4747 . -1) (undo-tree-id4748 . -1) (undo-tree-id4749 . -1) (undo-tree-id4750 . -1) 2295) nil (25414 30580 478194 604000) 0 nil])
([nil nil ((2294 . 2295)) nil (25414 30580 478192 843000) 0 nil])
([nil nil ((2295 . 2299)) nil (25414 30580 478192 555000) 0 nil])
([nil nil ((2299 . 2320)) nil (25414 30580 478192 344000) 0 nil])
([nil nil ((2320 . 2324)) nil (25414 30580 478192 146000) 0 nil])
([nil nil ((2324 . 2331)) nil (25414 30580 478191 764000) 0 nil])
([nil nil ((2331 . 2337)) nil (25414 30580 478191 343000) 0 nil])
([nil nil ((2337 . 2350)) nil (25414 30580 478190 967000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (nxml-text))) . -2349) (undo-tree-id4737 . -1) (undo-tree-id4738 . -1) (undo-tree-id4739 . -1) (undo-tree-id4740 . -1) (undo-tree-id4741 . -1) (undo-tree-id4742 . -1) (undo-tree-id4743 . -1) (undo-tree-id4744 . -1) (undo-tree-id4745 . -1) 2350) nil (25414 30580 478190 497000) 0 nil])
([nil nil ((2349 . 2357)) nil (25414 30580 478187 207000) 0 nil])
([nil nil ((2357 . 2378)) nil (25414 30580 478186 994000) 0 nil])
([nil nil ((2378 . 2383)) nil (25414 30580 478186 724000) 0 nil])
([nil nil ((2383 . 2384)) nil (25414 30580 478186 438000) 0 nil])
([nil nil ((2384 . 2385)) nil (25414 30580 478186 227000) 0 nil])
([nil nil ((2367 . 2368)) nil (25414 30580 478185 490000) 0 nil])
([nil nil ((2386 . 2392)) nil (25414 30580 478185 271000) 0 nil])
([nil nil ((2392 . 2393)) nil (25414 30580 478185 32000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -2390) (undo-tree-id4731 . -2) (undo-tree-id4732 . -2) (undo-tree-id4733 . -2) (undo-tree-id4734 . -2) (undo-tree-id4735 . -2) (undo-tree-id4736 . -2) (2393 . 2394)) nil (25414 30580 478184 377000) 0 nil])
([nil nil ((2392 . 2395)) nil (25414 30580 478181 867000) 0 nil])
([nil nil ((2395 . 2399)) nil (25414 30580 478181 636000) 0 nil])
([nil nil ((2399 . 2400)) nil (25414 30580 478181 400000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -2397) (undo-tree-id4725 . -2) (undo-tree-id4726 . -2) (undo-tree-id4727 . -2) (undo-tree-id4728 . -2) (undo-tree-id4729 . -2) (undo-tree-id4730 . -2) (2400 . 2401)) nil (25414 30580 478181 16000) 0 nil])
([nil nil ((2399 . 2406)) nil (25414 30580 478178 334000) 0 nil])
([nil nil ((#("      <group delimiter=\" \">" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t) 13 22 (fontified t face (nxml-attribute-local-name)) 22 23 (fontified t) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face (nxml-tag-delimiter))) . 2407) (undo-tree-id4724 . -27)) nil (25414 30580 478177 639000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2407) (undo-tree-id4721 . -1) (undo-tree-id4722 . 1) (undo-tree-id4723 . -1)) nil (25414 30580 478157 663000) 0 nil])
([nil nil ((#("	<label variable=\"volume\" form=\"short\" text-case=\"capitalize-first\"/>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t) 26 30 (fontified t face (nxml-attribute-local-name)) 30 31 (fontified t) 31 32 (fontified t face font-lock-string-face) 32 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t) 39 42 (fontified t face (nxml-attribute-local-name)) 42 48 (fontified t face (nxml-attribute-local-name)) 48 49 (fontified t) 49 50 (fontified t face font-lock-string-face) 50 63 (fontified t face font-lock-string-face) 63 66 (fontified t face font-lock-string-face) 66 67 (fontified t face font-lock-string-face) 67 68 (fontified t face (nxml-tag-slash)) 68 69 (fontified t face (nxml-tag-delimiter))) . 2407) (undo-tree-id4719 . 69) (undo-tree-id4720 . -69)) nil (25414 30580 478156 471000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2407) (undo-tree-id4717 . 1) (undo-tree-id4718 . -1)) nil (25414 30580 478155 343000) 0 nil])
([nil nil ((#("	<text variable=\"volume\"/>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t) 7 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t) 16 24 (fontified t face font-lock-string-face) 24 25 (fontified t face (nxml-tag-slash)) 25 26 (fontified t face (nxml-tag-delimiter))) . 2407) (undo-tree-id4715 . 26) (undo-tree-id4716 . -26)) nil (25414 30580 478154 159000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2407) (undo-tree-id4713 . 1) (undo-tree-id4714 . -1)) nil (25414 30580 478153 176000) 0 nil])
([nil nil ((#("	<text term=\"of\"/>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t) 7 8 (fontified t face (nxml-attribute-local-name)) 8 9 (fontified t face (nxml-attribute-local-name)) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face (nxml-tag-slash)) 17 18 (fontified t face (nxml-tag-delimiter))) . 2407) (undo-tree-id4711 . 18) (undo-tree-id4712 . -18)) nil (25414 30580 478152 59000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2407) (undo-tree-id4709 . 1) (undo-tree-id4710 . -1)) nil (25414 30580 478151 172000) 0 nil])
([nil nil ((#("	<text varible=\"container-series\"/>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t) 7 8 (fontified t face (nxml-attribute-local-name)) 8 9 (fontified t face (nxml-attribute-local-name)) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face (nxml-tag-slash)) 34 35 (fontified t face (nxml-tag-delimiter))) . 2407) (undo-tree-id4707 . 35) (undo-tree-id4708 . -35)) nil (25414 30580 478150 137000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2407) (undo-tree-id4705 . 1) (undo-tree-id4706 . -1)) nil (25414 30580 478149 143000) 0 nil])
([nil nil ((#("      </group>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 8 (fontified t face (nxml-tag-slash)) 8 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-tag-delimiter))) . 2407) (undo-tree-id4702 . 6) (undo-tree-id4703 . -13) (undo-tree-id4704 . -14)) nil (25414 30580 478148 164000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2407) (undo-tree-id4701 . -1)) nil (25414 30580 478146 619000) 0 nil])
([nil nil ((#("group" 0 5 (fontified t face (nxml-element-local-name))) . -2413) (undo-tree-id4698 . -5) (undo-tree-id4699 . 5) (undo-tree-id4700 . -5) 2418) nil (25414 30580 478145 415000) 0 nil])
([nil nil ((2413 . 2419)) nil (25414 30580 478137 460000) 0 nil])
([nil nil ((#("  <macro name=\"day-date\">" 0 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t) 9 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face (nxml-tag-delimiter))) . 1636) (t 25414 30580 489648 69000)) nil (25414 30792 181296 442000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181295 746000) 0 nil])
([nil nil ((#("    <choose>" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter))) . 1636)) nil (25414 30792 181295 406000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181295 95000) 0 nil])
([nil nil ((#("      <if variable=\"issued\">" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t) 19 20 (fontified t face font-lock-string-face) 20 22 (fontified t face font-lock-string-face) 22 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face (nxml-tag-delimiter))) . 1636)) nil (25414 30792 181294 467000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181294 185000) 0 nil])
([nil nil ((#("	<date variable=\"issued\">" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t) 7 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t) 16 17 (fontified t face font-lock-string-face) 17 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face (nxml-tag-delimiter))) . 1636)) nil (25414 30792 181293 873000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181293 395000) 0 nil])
([nil nil ((#("	  <date-part name=\"day\" suffix=\" \"/>" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t) 14 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t) 19 20 (fontified t face font-lock-string-face) 20 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t) 25 31 (fontified t face (nxml-attribute-local-name)) 31 32 (fontified t) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face (nxml-tag-slash)) 36 37 (fontified t face (nxml-tag-delimiter))) . 1636)) nil (25414 30792 181292 769000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636) (undo-tree-id4911 . -1)) nil (25414 30792 181292 379000) 0 nil])
([nil nil ((#("	  <date-part name=\"month\" form=\"long\" suffix=\" \"/>" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t) 14 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t) 19 20 (fontified t face font-lock-string-face) 20 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t) 27 31 (fontified t face (nxml-attribute-local-name)) 31 32 (fontified t) 32 33 (fontified t face font-lock-string-face) 33 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t) 39 45 (fontified t face (nxml-attribute-local-name)) 45 46 (fontified t) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face (nxml-tag-slash)) 50 51 (fontified t face (nxml-tag-delimiter))) . 1636)) nil (25414 30792 181291 702000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181291 482000) 0 nil])
([nil nil ((#("	  <date-part name=\"year\"/>" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 9 (fontified t face (nxml-element-local-name)) 9 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t) 14 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t) 19 20 (fontified t face font-lock-string-face) 20 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-slash)) 26 27 (fontified t face (nxml-tag-delimiter))) . 1636)) nil (25414 30792 181291 204000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181290 813000) 0 nil])
([nil nil ((#("	</date>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-slash)) 3 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-tag-delimiter))) . 1636) (undo-tree-id4909 . -8) (undo-tree-id4910 . -8)) nil (25414 30792 181290 509000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181289 480000) 0 nil])
([nil nil ((#("      </if>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 8 (fontified t face (nxml-tag-slash)) 8 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 1636)) nil (25414 30792 181289 60000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636) (undo-tree-id4908 . -1)) nil (25414 30792 181288 733000) 0 nil])
([nil nil ((#("      <else>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter))) . 1636)) nil (25414 30792 181287 992000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181287 595000) 0 nil])
([nil nil ((#("	<text term=\"\" form=\"short\"/>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t) 7 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t) 15 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 21 (fontified t face font-lock-string-face) 21 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face (nxml-tag-slash)) 28 29 (fontified t face (nxml-tag-delimiter))) . 1636)) nil (25414 30792 181287 291000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181286 933000) 0 nil])
([nil nil ((#("      </else>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 8 (fontified t face (nxml-tag-slash)) 8 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 1636)) nil (25414 30792 181286 548000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181286 148000) 0 nil])
([nil nil ((#("    </choose>" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 6 (fontified t face (nxml-tag-slash)) 6 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 1636)) nil (25414 30792 181285 481000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181285 143000) 0 nil])
([nil nil ((#("  </macro>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-tag-slash)) 4 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-tag-delimiter))) . 1636) (undo-tree-id4905 . -10) (undo-tree-id4906 . 6) (undo-tree-id4907 . -9)) nil (25414 30792 181284 748000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1636)) nil (25414 30792 181281 947000) 0 nil])
([nil nil ((#("date" 0 4 (fontified t face font-lock-string-face)) . -1435) (undo-tree-id4904 . -4) 1439) nil (25414 30792 181281 632000) 0 nil])
([nil nil ((#("year-" 0 5 (fontified t face font-lock-string-face)) . -1430) (undo-tree-id4903 . -5) 1435) nil (25414 30792 181280 872000) 0 nil])
([nil nil ((1430 . 1439)) nil (25414 30792 181280 189000) 0 nil])
([nil nil ((2096 . 2098) 2100) nil (25414 30792 181279 946000) 0 nil])
([nil nil ((2091 . 2093)) nil (25414 30792 181279 441000) 0 nil])
([nil nil ((2093 . 2094)) nil (25414 30792 181279 74000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil face (nxml-tag-delimiter))) . -2098) (2098 . 2099) (#("	" 0 1 (fontified nil face (nxml-tag-delimiter))) . 2098) (2092 . 2098) (2094 . 2095)) nil (25414 30792 181278 638000) 0 nil])
([nil nil ((2100 . 2103)) nil (25414 30792 181278 130000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -2108) 2115) nil (25414 30792 181277 828000) 0 nil])
([nil nil ((2826 . 2832)) nil (25414 30792 181277 228000) 0 nil])
([nil nil ((2832 . 2842)) nil (25414 30792 181276 952000) 0 nil])
([nil nil ((2836 . 2837)) nil (25414 30792 181276 678000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face (nxml-text))) . -2841) (undo-tree-id4901 . -1) (#("r" 0 1 (fontified t face (nxml-text))) . -2842) (undo-tree-id4902 . -1) 2843) nil (25414 30792 181276 45000) 0 nil])
([nil nil ((2841 . 2855)) nil (25414 30792 181275 5000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . -2854) (undo-tree-id4900 . -1) 2855) nil (25414 30792 181274 632000) 0 nil])
([nil nil ((2854 . 2855)) nil (25414 30792 181273 997000) 0 nil])
([nil nil ((2855 . 2856)) nil (25414 30792 181273 668000) 0 nil])
([nil nil ((2856 . 2857)) nil (25414 30792 181273 335000) 0 nil])
([nil nil ((2128 . 2131)) nil (25414 30792 181273 101000) 0 nil])
([nil nil ((2131 . 2142)) nil (25414 30792 181272 899000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face (nxml-text))) . -2141) (undo-tree-id4899 . -1) 2142) nil (25414 30792 181272 505000) 0 nil])
([nil nil ((2141 . 2162)) nil (25414 30792 181271 992000) 0 nil])
([nil nil ((2162 . 2163)) nil (25414 30792 181271 788000) 0 nil])
([nil nil ((2163 . 2168)) nil (25414 30792 181271 477000) 0 nil])
([nil nil ((2168 . 2169)) nil (25414 30792 181271 13000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -2166) (2169 . 2170)) nil (25414 30792 181270 710000) 0 nil])
([nil nil ((2168 . 2169)) nil (25414 30792 181270 262000) 0 nil])
([nil nil ((2169 . 2174)) nil (25414 30792 181269 956000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face (nxml-element-local-name))) . -2172) (undo-tree-id4897 . -1) (#("s" 0 1 (fontified t face (nxml-element-local-name))) . -2173) (undo-tree-id4898 . -1) 2174) nil (25414 30792 181269 495000) 0 nil])
([nil nil ((2172 . 2174)) nil (25414 30792 181268 196000) 0 nil])
([nil nil ((2174 . 2177)) nil (25414 30792 181267 975000) 0 nil])
([nil nil ((#("	    <choose>
	      <if variable=\"DOI\">
		<text variable=\"DOI\" suffix=\".\"/>
	      </if>
	      <else-if variable=\"URL\">
		<text variable=\"URL\" suffix=\".\"/>
	      </else-if>
	    </choose>
" 0 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter)) 13 14 (fontified t) 14 15 (fontified t) 15 19 (fontified t) 19 21 (fontified t) 21 22 (fontified t face (nxml-tag-delimiter)) 22 24 (fontified t face (nxml-element-local-name)) 24 25 (fontified t) 25 33 (fontified t face (nxml-attribute-local-name)) 33 34 (fontified t) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face (nxml-tag-delimiter)) 40 41 (rear-nonsticky t fontified t) 41 42 (fontified t) 42 43 (fontified t) 43 44 (fontified t face (nxml-tag-delimiter)) 44 45 (fontified t face (nxml-element-local-name)) 45 46 (fontified t face (nxml-element-local-name)) 46 47 (fontified t face (nxml-element-local-name)) 47 48 (fontified t face (nxml-element-local-name)) 48 49 (fontified t) 49 50 (fontified t face (nxml-attribute-local-name)) 50 51 (fontified t face (nxml-attribute-local-name)) 51 52 (fontified t face (nxml-attribute-local-name)) 52 53 (fontified t face (nxml-attribute-local-name)) 53 54 (fontified t face (nxml-attribute-local-name)) 54 55 (fontified t face (nxml-attribute-local-name)) 55 56 (fontified t face (nxml-attribute-local-name)) 56 57 (fontified t face (nxml-attribute-local-name)) 57 58 (fontified t) 58 59 (fontified t face font-lock-string-face) 59 60 (fontified t face font-lock-string-face) 60 61 (fontified t face font-lock-string-face) 61 62 (fontified t face font-lock-string-face) 62 63 (fontified t face font-lock-string-face) 63 64 (fontified t) 64 65 (fontified t face (nxml-attribute-local-name)) 65 66 (fontified t face (nxml-attribute-local-name)) 66 67 (fontified t face (nxml-attribute-local-name)) 67 68 (fontified t face (nxml-attribute-local-name)) 68 69 (fontified t face (nxml-attribute-local-name)) 69 70 (fontified t face (nxml-attribute-local-name)) 70 71 (fontified t) 71 72 (fontified t face font-lock-string-face) 72 73 (fontified t face font-lock-string-face) 73 74 (fontified t face font-lock-string-face) 74 75 (fontified t face (nxml-tag-slash)) 75 76 (fontified t face (nxml-tag-delimiter)) 76 82 (fontified t) 82 84 (fontified t) 84 85 (fontified t face (nxml-tag-delimiter)) 85 86 (fontified t face (nxml-tag-slash)) 86 87 (fontified t face (nxml-element-local-name)) 87 88 (fontified t face (nxml-element-local-name)) 88 89 (fontified t face (nxml-tag-delimiter)) 89 90 (fontified t) 90 95 (fontified t) 95 97 (fontified t) 97 98 (fontified t face (nxml-tag-delimiter)) 98 99 (fontified t face (nxml-element-local-name)) 99 100 (fontified t face (nxml-element-local-name)) 100 101 (fontified t face (nxml-element-local-name)) 101 102 (fontified t face (nxml-element-local-name)) 102 103 (fontified t face (nxml-element-local-name)) 103 104 (fontified t face (nxml-element-local-name)) 104 105 (fontified t face (nxml-element-local-name)) 105 106 (fontified t) 106 107 (fontified t face (nxml-attribute-local-name)) 107 114 (fontified t face (nxml-attribute-local-name)) 114 115 (fontified t) 115 116 (fontified t face font-lock-string-face) 116 117 (fontified t face font-lock-string-face) 117 118 (fontified t face font-lock-string-face) 118 119 (fontified t face font-lock-string-face) 119 120 (fontified t face font-lock-string-face) 120 121 (fontified t face (nxml-tag-delimiter)) 121 122 (rear-nonsticky t fontified t) 122 123 (fontified t) 123 124 (fontified t) 124 125 (fontified t face (nxml-tag-delimiter)) 125 126 (fontified t face (nxml-element-local-name)) 126 127 (fontified t face (nxml-element-local-name)) 127 128 (fontified t face (nxml-element-local-name)) 128 129 (fontified t face (nxml-element-local-name)) 129 130 (fontified t) 130 131 (fontified t face (nxml-attribute-local-name)) 131 132 (fontified t face (nxml-attribute-local-name)) 132 133 (fontified t face (nxml-attribute-local-name)) 133 134 (fontified t face (nxml-attribute-local-name)) 134 135 (fontified t face (nxml-attribute-local-name)) 135 136 (fontified t face (nxml-attribute-local-name)) 136 137 (fontified t face (nxml-attribute-local-name)) 137 138 (fontified t face (nxml-attribute-local-name)) 138 139 (fontified t) 139 140 (fontified t face font-lock-string-face) 140 141 (fontified t face font-lock-string-face) 141 142 (fontified t face font-lock-string-face) 142 143 (fontified t face font-lock-string-face) 143 144 (fontified t face font-lock-string-face) 144 145 (fontified t) 145 146 (fontified t face (nxml-attribute-local-name)) 146 147 (fontified t face (nxml-attribute-local-name)) 147 148 (fontified t face (nxml-attribute-local-name)) 148 149 (fontified t face (nxml-attribute-local-name)) 149 150 (fontified t face (nxml-attribute-local-name)) 150 151 (fontified t face (nxml-attribute-local-name)) 151 152 (fontified t) 152 153 (fontified t face font-lock-string-face) 153 154 (fontified t face font-lock-string-face) 154 155 (fontified t face font-lock-string-face) 155 156 (fontified t face (nxml-tag-slash)) 156 157 (fontified t face (nxml-tag-delimiter)) 157 163 (fontified t) 163 165 (fontified t) 165 166 (fontified t face (nxml-tag-delimiter)) 166 167 (fontified t face (nxml-tag-slash)) 167 168 (fontified t face (nxml-element-local-name)) 168 169 (fontified t face (nxml-element-local-name)) 169 170 (fontified t face (nxml-element-local-name)) 170 171 (fontified t face (nxml-element-local-name)) 171 172 (fontified t face (nxml-element-local-name)) 172 173 (fontified t face (nxml-element-local-name)) 173 174 (fontified t face (nxml-element-local-name)) 174 175 (fontified t face (nxml-tag-delimiter)) 175 181 (fontified t) 181 182 (fontified t face (nxml-tag-delimiter)) 182 183 (fontified t face (nxml-tag-slash)) 183 184 (fontified t face (nxml-element-local-name)) 184 185 (fontified t face (nxml-element-local-name)) 185 186 (fontified t face (nxml-element-local-name)) 186 187 (fontified t face (nxml-element-local-name)) 187 188 (fontified t face (nxml-element-local-name)) 188 189 (fontified t face (nxml-element-local-name)) 189 190 (fontified t face (nxml-tag-delimiter)) 190 191 (rear-nonsticky t fontified t)) . 5135) (undo-tree-id4895 . -191) (undo-tree-id4896 . -191) 5326) nil (25414 30792 181267 464000) 0 nil])
([nil nil ((2163 . 2168)) nil (25414 30792 181266 248000) 0 nil])
([nil nil ((nil fontified nil 2358 . 2359) (nil fontified nil 2357 . 2358) (nil fontified nil 2356 . 2357) (nil fontified nil 2355 . 2356) (nil fontified nil 2354 . 2355) (nil fontified nil 2353 . 2354) (nil fontified nil 2352 . 2353) (nil fontified nil 2351 . 2352) (nil fontified nil 2350 . 2351) (nil fontified nil 2349 . 2350) (nil fontified nil 2343 . 2349) (nil fontified nil 2342 . 2343) (nil fontified nil 2341 . 2342) (nil fontified nil 2340 . 2341) (nil fontified nil 2339 . 2340) (nil fontified nil 2338 . 2339) (nil fontified nil 2337 . 2338) (nil fontified nil 2336 . 2337) (nil fontified nil 2335 . 2336) (nil fontified nil 2334 . 2335) (nil fontified nil 2333 . 2334) (nil fontified nil 2331 . 2333) (nil fontified nil 2325 . 2331) (nil fontified nil 2324 . 2325) (nil fontified nil 2323 . 2324) (nil fontified nil 2322 . 2323) (nil fontified nil 2321 . 2322) (nil fontified nil 2320 . 2321) (nil fontified nil 2319 . 2320) (nil fontified nil 2318 . 2319) (nil fontified nil 2317 . 2318) (nil fontified nil 2316 . 2317) (nil fontified nil 2315 . 2316) (nil fontified nil 2314 . 2315) (nil fontified nil 2313 . 2314) (nil fontified nil 2312 . 2313) (nil fontified nil 2311 . 2312) (nil fontified nil 2310 . 2311) (nil fontified nil 2309 . 2310) (nil fontified nil 2308 . 2309) (nil fontified nil 2307 . 2308) (nil fontified nil 2306 . 2307) (nil fontified nil 2305 . 2306) (nil fontified nil 2304 . 2305) (nil fontified nil 2303 . 2304) (nil fontified nil 2302 . 2303) (nil fontified nil 2301 . 2302) (nil fontified nil 2300 . 2301) (nil fontified nil 2299 . 2300) (nil fontified nil 2298 . 2299) (nil fontified nil 2297 . 2298) (nil fontified nil 2296 . 2297) (nil fontified nil 2295 . 2296) (nil fontified nil 2294 . 2295) (nil fontified nil 2293 . 2294) (nil fontified nil 2292 . 2293) (nil fontified nil 2291 . 2292) (nil fontified nil 2290 . 2291) (nil fontified nil 2289 . 2290) (nil fontified nil 2288 . 2289) (nil fontified nil 2287 . 2288) (nil fontified nil 2286 . 2287) (nil fontified nil 2285 . 2286) (nil fontified nil 2284 . 2285) (nil fontified nil 2283 . 2284) (nil fontified nil 2282 . 2283) (nil fontified nil 2275 . 2282) (nil fontified nil 2274 . 2275) (nil fontified nil 2273 . 2274) (nil fontified nil 2272 . 2273) (nil fontified nil 2271 . 2272) (nil fontified nil 2270 . 2271) (nil fontified nil 2269 . 2270) (nil fontified nil 2268 . 2269) (nil fontified nil 2267 . 2268) (nil fontified nil 2266 . 2267) (nil fontified nil 2265 . 2266) (nil fontified nil 2263 . 2265) (nil fontified nil 2258 . 2263) (nil fontified nil 2257 . 2258) (nil fontified nil 2256 . 2257) (nil fontified nil 2255 . 2256) (nil fontified nil 2254 . 2255) (nil fontified nil 2253 . 2254) (nil fontified nil 2252 . 2253) (nil fontified nil 2250 . 2252) (nil fontified nil 2244 . 2250) (nil fontified nil 2243 . 2244) (nil fontified nil 2242 . 2243) (nil fontified nil 2241 . 2242) (nil fontified nil 2240 . 2241) (nil fontified nil 2239 . 2240) (nil fontified nil 2238 . 2239) (nil fontified nil 2237 . 2238) (nil fontified nil 2236 . 2237) (nil fontified nil 2235 . 2236) (nil fontified nil 2234 . 2235) (nil fontified nil 2233 . 2234) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2230 . 2231) (nil fontified nil 2229 . 2230) (nil fontified nil 2228 . 2229) (nil fontified nil 2227 . 2228) (nil fontified nil 2226 . 2227) (nil fontified nil 2225 . 2226) (nil fontified nil 2224 . 2225) (nil fontified nil 2223 . 2224) (nil fontified nil 2222 . 2223) (nil fontified nil 2221 . 2222) (nil fontified nil 2220 . 2221) (nil fontified nil 2219 . 2220) (nil fontified nil 2218 . 2219) (nil fontified nil 2217 . 2218) (nil fontified nil 2216 . 2217) (nil fontified nil 2215 . 2216) (nil fontified nil 2214 . 2215) (nil fontified nil 2213 . 2214) (nil fontified nil 2212 . 2213) (nil fontified nil 2211 . 2212) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil fontified nil 2208 . 2209) (nil fontified nil 2207 . 2208) (nil fontified nil 2206 . 2207) (nil fontified nil 2205 . 2206) (nil fontified nil 2204 . 2205) (nil fontified nil 2203 . 2204) (nil fontified nil 2202 . 2203) (nil fontified nil 2201 . 2202) (nil fontified nil 2193 . 2201) (nil fontified nil 2192 . 2193) (nil fontified nil 2190 . 2192) (nil fontified nil 2189 . 2190) (nil fontified nil 2187 . 2189) (nil fontified nil 2183 . 2187) (nil fontified nil 2182 . 2183) (nil fontified nil 2181 . 2182) (nil fontified nil 2180 . 2181) (nil fontified nil 2179 . 2180) (nil fontified nil 2178 . 2179) (nil fontified nil 2177 . 2178) (nil fontified nil 2176 . 2177) (nil fontified nil 2175 . 2176) (nil fontified nil 2174 . 2175) (nil fontified nil 2173 . 2174) (nil fontified nil 2168 . 2173) (2168 . 2359)) nil (25414 30792 181264 545000) 0 nil])
([nil nil ((#("	    " 0 5 (fontified t)) . -2168) 2164) nil (25414 30792 181230 447000) 0 nil])
([nil nil ((#("	      " 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified t) 5 7 (fontified t)) . -2183) (2183 . 2184) (#("	" 0 1 (fontified nil)) . 2183) (2177 . 2183)) nil (25414 30792 181229 956000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -2204) 2203) nil (25414 30792 181229 440000) 0 nil])
([nil nil ((#("	      " 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified t) 5 7 (fontified t)) . -2244) (2244 . 2245) (#("	" 0 1 (fontified nil)) . 2244) (undo-tree-id4894 . -1) (2238 . 2244) 2239) nil (25414 30792 181228 933000) 0 nil])
([nil nil ((#("	      " 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified t) 5 7 (fontified t)) . -2256) (2256 . 2257) (#("	" 0 1 (fontified nil)) . 2256) (2250 . 2256)) nil (25414 30792 181228 102000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -2282) 2281) nil (25414 30792 181227 718000) 0 nil])
([nil nil ((#("	      " 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified t) 5 7 (fontified t)) . -2322) (2322 . 2323) (#("	" 0 1 (fontified nil)) . 2322) (undo-tree-id4893 . -1) (2316 . 2322) 2317) nil (25414 30792 181227 323000) 0 nil])
([nil nil ((#("	    " 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified t)) . -2337) (2337 . 2338) (#("	" 0 1 (fontified nil)) . 2337) (2333 . 2337)) nil (25414 30792 181226 392000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -2346) (undo-tree-id4892 . -1) 2347) nil (25414 30792 181225 973000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2415 . 2416) (nil fontified nil 2415 . 2416) (nil fontified nil 2414 . 2415) (nil fontified nil 2413 . 2414) (nil fontified nil 2412 . 2413) (nil fontified nil 2411 . 2412) (nil fontified nil 2410 . 2411) (nil fontified nil 2409 . 2410) (nil fontified nil 2408 . 2409) (nil fontified nil 2407 . 2408) (nil fontified nil 2406 . 2407) (nil fontified nil 2405 . 2406) (nil fontified nil 2399 . 2405) (nil fontified nil 2398 . 2399) (nil fontified nil 2397 . 2398) (nil fontified nil 2396 . 2397) (nil fontified nil 2395 . 2396) (nil fontified nil 2394 . 2395) (nil fontified nil 2393 . 2394) (nil fontified nil 2392 . 2393) (nil fontified nil 2391 . 2392) (nil fontified nil 2390 . 2391) (nil fontified nil 2389 . 2390) (nil fontified nil 2388 . 2389) (nil fontified nil 2387 . 2388) (nil fontified nil 2386 . 2387) (nil fontified nil 2385 . 2386) (nil fontified nil 2384 . 2385) (nil fontified nil 2383 . 2384) (nil fontified nil 2382 . 2383) (nil fontified nil 2381 . 2382) (nil fontified nil 2380 . 2381) (nil fontified nil 2379 . 2380) (nil fontified nil 2378 . 2379) (nil fontified nil 2377 . 2378) (nil fontified nil 2376 . 2377) (nil fontified nil 2375 . 2376) (nil fontified nil 2374 . 2375) (nil fontified nil 2373 . 2374) (nil fontified nil 2372 . 2373) (nil fontified nil 2371 . 2372) (nil fontified nil 2370 . 2371) (nil fontified nil 2369 . 2370) (nil fontified nil 2368 . 2369) (nil fontified nil 2367 . 2368) (nil fontified nil 2366 . 2367) (nil fontified nil 2365 . 2366) (nil fontified nil 2364 . 2365) (nil fontified nil 2363 . 2364) (nil fontified nil 2362 . 2363) (nil fontified nil 2361 . 2362) (nil fontified nil 2360 . 2361) (nil fontified nil 2359 . 2360) (nil fontified nil 2358 . 2359) (nil fontified nil 2357 . 2358) (nil fontified nil 2356 . 2357) (nil fontified nil 2349 . 2356) (nil fontified nil 2348 . 2349) (nil fontified nil 2347 . 2348) (nil fontified nil 2346 . 2347) (nil fontified nil 2345 . 2346) (nil fontified nil 2344 . 2345) (nil fontified nil 2343 . 2344) (nil fontified nil 2342 . 2343) (nil fontified nil 2341 . 2342) (nil fontified nil 2340 . 2341) (nil fontified nil 2339 . 2340) (nil fontified nil 2333 . 2339) (2333 . 2416)) nil (25414 30792 181224 602000) 0 nil])
([nil nil ((#("URL" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face)) . -2358) (undo-tree-id4891 . -3) 2361) nil (25414 30792 181221 362000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2358) (2359 . 2360) 2358) nil (25414 30792 181220 573000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t face (nxml-tag-delimiter font-lock-string-face))) . 2359) (2360 . 2361) 2359) nil (25414 30792 181220 177000) 0 nil])
([nil nil ((2360 . 2361)) nil (25414 30792 181219 872000) 0 nil])
([nil nil ((2361 . 2362)) nil (25414 30792 181219 641000) 0 nil])
([nil nil ((#("URL" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . -2380) (undo-tree-id4890 . -3) 2383) nil (25414 30792 181219 335000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2380) (2381 . 2382) 2380) nil (25414 30792 181218 289000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2381) (2382 . 2383) 2381) nil (25414 30792 181217 957000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face (nxml-attribute-local-name))) . 2382) (2383 . 2384) 2382) nil (25414 30792 181217 568000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face (nxml-attribute-local-name))) . 2383) (2384 . 2385) 2383) nil (25414 30792 181217 233000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t face (nxml-attribute-local-name))) . 2383) (2384 . 2385) 2383) nil (25414 30792 181216 786000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t face (nxml-attribute-local-name font-lock-string-face))) . 2384) (2385 . 2386) 2384) nil (25414 30792 181216 274000) 0 nil])
([nil nil ((2362 . 2363)) nil (25414 30792 181215 780000) 0 nil])
([nil nil ((2363 . 2364)) nil (25414 30792 181215 558000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -2363) (undo-tree-id4889 . -1) 2364) nil (25414 30792 181215 246000) 0 nil])
([nil nil ((2363 . 2364)) nil (25414 30792 181214 618000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2385) (2386 . 2387) 2385) nil (25414 30792 181214 331000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face (nxml-attribute-local-name))) . 2372) (2373 . 2374) 2372) nil (25414 30792 181213 908000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face (nxml-attribute-local-name))) . 2373) (2374 . 2375) 2373) nil (25414 30792 181213 518000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face (nxml-attribute-local-name))) . 2374) (2375 . 2376) 2374) nil (25414 30792 181213 157000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 2375) (2376 . 2377) 2375) nil (25414 30792 181212 581000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face (nxml-attribute-local-name))) . 2376) (2377 . 2378) 2376) nil (25414 30792 181212 242000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face (nxml-attribute-local-name))) . 2377) (2378 . 2379) 2377) nil (25414 30792 181211 455000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face (nxml-attribute-local-name))) . 2378) (2379 . 2380) 2378) nil (25414 30792 181211 116000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face (nxml-attribute-local-name))) . 2379) (2380 . 2381) 2379) nil (25414 30792 181210 524000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-string-face)) . 2380) (2381 . 2382) 2380) nil (25414 30792 181210 94000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2381) (2382 . 2383) 2381) nil (25414 30792 181209 510000) 0 nil])
([nil nil ((#("I" 0 1 (fontified t face font-lock-string-face)) . 2382) (2383 . 2384) 2382) nil (25414 30792 181209 94000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t face font-lock-string-face)) . 2383) (2384 . 2385) 2383) nil (25414 30792 181208 792000) 0 nil])
([nil nil ((#("B" 0 1 (fontified t face font-lock-string-face)) . 2384) (2385 . 2386) 2384) nil (25414 30792 181208 242000) 0 nil])
([nil nil ((#("N" 0 1 (fontified t face font-lock-string-face)) . 2385) (2386 . 2387) 2385) nil (25414 30792 181208 1000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 2386) (2387 . 2388) 2386) nil (25414 30792 181207 602000) 0 nil])
([nil nil ((2383 . 2384) (#("V" 0 1 (fontified t face font-lock-string-face)) . -2383) (undo-tree-id4887 . -1) (undo-tree-id4888 . -1) 2384) nil (25414 30792 181207 42000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2383) (undo-tree-id4885 . -1) (undo-tree-id4886 . -1) 2384) nil (25414 30792 181206 40000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -2384) (undo-tree-id4883 . -1) (undo-tree-id4884 . -1) 2385) nil (25414 30792 181204 855000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2385) (#("." 0 1 (fontified t)) . 2385) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 2385) (#("=" 0 1 (fontified t)) . 2385) (#("x" 0 1 (fontified t face (nxml-attribute-local-name))) . 2385) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 2385) (#("f" 0 1 (fontified t face (nxml-attribute-local-name))) . 2385)) nil (25414 30792 181203 498000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2302) (#("." 0 1 (fontified t)) . 2302) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 2302) (#("=" 0 1 (fontified t)) . 2302) (#("x" 0 1 (fontified t face (nxml-attribute-local-name))) . 2302) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 2302) (#("f" 0 1 (fontified t face (nxml-attribute-local-name))) . 2302) (#("f" 0 1 (fontified t face (nxml-attribute-local-name))) . 2302) (#("u" 0 1 (fontified t face (nxml-attribute-local-name))) . 2302) (#("s" 0 1 (fontified t face (nxml-attribute-local-name))) . 2302) (#(" " 0 1 (fontified t)) . 2302)) nil (25414 30792 181202 143000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 2224) (#("." 0 1 (fontified t)) . 2224) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 2224) (#("=" 0 1 (fontified t)) . 2224) (#("x" 0 1 (fontified t face (nxml-attribute-local-name))) . 2224) (#("i" 0 1 (fontified t face (nxml-attribute-local-name))) . 2224) (#("f" 0 1 (fontified t face (nxml-attribute-local-name))) . 2224) (#("f" 0 1 (fontified t face (nxml-attribute-local-name))) . 2224) (#("u" 0 1 (fontified t face (nxml-attribute-local-name))) . 2224) (#("s" 0 1 (fontified t face (nxml-attribute-local-name))) . 2224) (#(" " 0 1 (fontified t)) . 2224)) nil (25414 30792 181200 481000) 0 nil])
([nil nil ((2163 . 2168)) nil (25414 30792 181199 725000) 0 nil])
([nil nil ((2168 . 2174)) nil (25414 30792 181199 509000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face (nxml-text))) . -2171) (undo-tree-id4880 . -1) (#("u" 0 1 (fontified t face (nxml-text))) . -2172) (undo-tree-id4881 . -1) (#("p" 0 1 (fontified t face (nxml-text))) . -2173) (undo-tree-id4882 . -1) 2174) nil (25414 30792 181199 51000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face (nxml-text))) . -2168) (undo-tree-id4877 . -1) (#("r" 0 1 (fontified t face (nxml-text))) . -2169) (undo-tree-id4878 . -1) (#("o" 0 1 (fontified t face (nxml-text))) . -2170) (undo-tree-id4879 . -1) 2171) nil (25414 30792 181197 91000) 0 nil])
([nil nil ((2168 . 2185)) nil (25414 30792 181195 779000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -2184) (undo-tree-id4876 . -1) 2185) nil (25414 30792 181195 457000) 0 nil])
([nil nil ((2184 . 2186)) nil (25414 30792 181194 876000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face (nxml-text font-lock-string-face))) . -2184) (undo-tree-id4874 . -1) (#("." 0 1 (fontified t face (nxml-text font-lock-string-face))) . -2185) (undo-tree-id4875 . -1) 2186) nil (25414 30792 181194 543000) 0 nil])
([nil nil ((2184 . 2190)) nil (25414 30792 181193 657000) 0 nil])
([nil nil ((2195 . 2197) 2203) nil (25414 30792 181193 495000) 0 nil])
([nil nil ((2206 . 2207) (#("      " 0 6 (fontified t)) . 2206) 2220) nil (25414 30792 181192 997000) 0 nil])
([nil nil ((2228 . 2230) 2236) nil (25414 30792 181192 648000) 0 nil])
([nil nil ((2253 . 2254) (#("      " 0 6 (fontified t)) . 2253) 2264) nil (25414 30792 181192 321000) 0 nil])
([nil nil ((2260 . 2261) (#("      " 0 6 (fontified t)) . 2260) 2273) nil (25414 30792 181191 968000) 0 nil])
([nil nil ((2287 . 2289) 2294) nil (25414 30792 181191 686000) 0 nil])
([nil nil ((2312 . 2313) (#("      " 0 6 (fontified t)) . 2312) 2328) nil (25414 30792 181191 347000) 0 nil])
([nil nil ((2324 . 2325) (#("      " 0 6 (fontified t)) . 2324) 2342) nil (25414 30792 181190 687000) 0 nil])
([nil nil ((2352 . 2354) 2364) nil (25414 30792 181190 340000) 0 nil])
([nil nil ((2376 . 2377) (#("      " 0 6 (fontified t)) . 2376) 2392) nil (25414 30792 181189 969000) 0 nil])
([nil nil ((2392 . 2394) 2401) nil (25414 30792 181189 638000) 0 nil])
([nil nil ((2403 . 2410)) nil (25414 30792 181189 402000) 0 nil])
([nil nil ((2410 . 2411)) nil (25414 30792 181189 257000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -2408) (2411 . 2412)) nil (25414 30792 181188 943000) 0 nil])
([nil nil ((2410 . 2416)) nil (25414 30792 181188 670000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2427) (undo-tree-id4868 . -1) (undo-tree-id4869 . -1) (#(" " 0 1 (fontified t)) . -2428) (undo-tree-id4870 . -1) (undo-tree-id4871 . -1) (#(" " 0 1 (fontified t)) . -2429) (undo-tree-id4872 . -1) (undo-tree-id4873 . -1) 2430) nil (25414 30792 181187 992000) 0 nil])
([nil nil ((#("	    <text prefix=\"ISBN \" variable=\"ISBN\" suffix=\".\"/>" 0 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t) 26 27 (fontified t face (nxml-attribute-local-name)) 27 28 (fontified t face (nxml-attribute-local-name)) 28 29 (fontified t face (nxml-attribute-local-name)) 29 30 (fontified t face (nxml-attribute-local-name)) 30 31 (fontified t face (nxml-attribute-local-name)) 31 32 (fontified t face (nxml-attribute-local-name)) 32 33 (fontified t face (nxml-attribute-local-name)) 33 34 (fontified t face (nxml-attribute-local-name)) 34 35 (fontified t) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face font-lock-string-face) 38 39 (fontified t face font-lock-string-face) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t face font-lock-string-face) 41 42 (fontified t) 42 43 (fontified t face (nxml-attribute-local-name)) 43 44 (fontified t face (nxml-attribute-local-name)) 44 45 (fontified t face (nxml-attribute-local-name)) 45 46 (fontified t face (nxml-attribute-local-name)) 46 47 (fontified t face (nxml-attribute-local-name)) 47 48 (fontified t face (nxml-attribute-local-name)) 48 49 (fontified t) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 52 (fontified t face font-lock-string-face) 52 53 (fontified t face (nxml-tag-slash)) 53 54 (fontified t face (nxml-tag-delimiter))) . 3071) (undo-tree-id4867 . -34)) nil (25414 30792 181185 526000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3071)) nil (25414 30792 181184 478000) 0 nil])
([nil nil ((3070 . 3076)) nil (25414 30792 181184 273000) 0 nil])
([nil nil ((3076 . 3097)) nil (25414 30792 181184 61000) 0 nil])
([nil nil ((3097 . 3109)) nil (25414 30792 181183 852000) 0 nil])
([nil nil ((3109 . 3110)) nil (25414 30792 181183 591000) 0 nil])
([nil nil ((3110 . 3111)) nil (25414 30792 181183 36000) 0 nil])
([nil nil ((#("numbners" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face)) . -3100) (undo-tree-id4864 . -8) (undo-tree-id4865 . 8) (undo-tree-id4866 . -8) 3108) nil (25414 30792 181182 580000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face font-lock-string-face)) . -3099) (undo-tree-id4863 . -1) 3100) nil (25414 30792 181180 930000) 0 nil])
([nil nil ((3099 . 3100)) nil (25414 30792 181180 136000) 0 nil])
([nil nil ((#("number" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face)) . -2154) (undo-tree-id4860 . -6) (undo-tree-id4861 . -6) (undo-tree-id4862 . -6) 2160) nil (25414 30792 181179 630000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face font-lock-string-face)) . -2153) (undo-tree-id4857 . -1) (undo-tree-id4858 . -1) (undo-tree-id4859 . -1) 2154) nil (25414 30792 181177 896000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -2153) (undo-tree-id4856 . -1) 2154) nil (25414 30792 181173 659000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -3091) (undo-tree-id5002 . -1) (undo-tree-id5003 . -1) 3092 (t 25414 30792 193733 320000)) nil (25414 30976 221128 466000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face (nxml-attribute-local-name))) . -3078) (undo-tree-id5001 . -1) 3079) nil (25414 30976 221127 344000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face font-lock-string-face)) . -3262) (undo-tree-id5000 . -1) 3263) nil (25414 30976 221126 585000) 0 nil])
([nil nil ((3262 . 3263)) nil (25414 30976 221125 707000) 0 nil])
([nil nil ((3358 . 3359)) nil (25414 30976 221125 376000) 0 nil])
([nil nil ((#("	    <group delimiter=\", \">" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face (nxml-tag-delimiter))) . 3335)) nil (25414 30976 221125 59000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3335)) nil (25414 30976 221124 695000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3340) 3335) nil (25414 30976 221124 334000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3363)) nil (25414 30976 221123 944000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3393) (3393 . 3394) (#("	" 0 1 (fontified nil)) . 3393) (3387 . 3393)) nil (25414 30976 221123 526000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3473) (3473 . 3474) (#("	" 0 1 (fontified nil)) . 3473) (3467 . 3473)) nil (25414 30976 221122 884000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3503) (3503 . 3504) (#("	" 0 1 (fontified nil)) . 3503) (3497 . 3503)) nil (25414 30976 221122 454000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3541) (3541 . 3542) (#("	" 0 1 (fontified nil)) . 3541) (3535 . 3541)) nil (25414 30976 221121 912000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3565) 3564) nil (25414 30976 221121 188000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3605)) nil (25414 30976 221120 691000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3636) (3636 . 3637) (#("	" 0 1 (fontified nil)) . 3636) (undo-tree-id4999 . -1) (3630 . 3636) 3631) nil (25414 30976 221120 299000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3650) (undo-tree-id4998 . -2) 3652) nil (25414 30976 221119 587000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3664)) nil (25414 30976 221118 777000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3694) (3694 . 3695) (#("	" 0 1 (fontified nil)) . 3694) (3688 . 3694)) nil (25414 30976 221118 372000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t) 1 2 (fontified t)) . -3725) (undo-tree-id4997 . -2) 3727) nil (25414 30976 221117 810000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3737) (undo-tree-id4996 . -2) 3739) nil (25414 30976 221117 118000) 0 nil])
([nil nil ((#("</group>" 0 1 (fontified t face (nxml-tag-delimiter)) 1 2 (fontified t face (nxml-tag-slash)) 2 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-tag-delimiter))) . 3749) (undo-tree-id4994 . 6) (undo-tree-id4995 . -7)) nil (25414 30976 221116 403000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3749)) nil (25414 30976 221115 83000) 0 nil])
([nil nil ((#("  	" 0 2 (fontified t) 2 3 (fontified t)) . -3747) (undo-tree-id4993 . -2) 3749) nil (25414 30976 221114 627000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -3262) (undo-tree-id4992 . -1) 3263) nil (25414 30976 221113 961000) 0 nil])
([nil nil ((3262 . 3263)) nil (25414 30976 221113 171000) 0 nil])
([nil nil ((#("	    <group delimiter=\". \">" 0 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 9 (fontified t face (nxml-element-local-name)) 9 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 14 (fontified t face (nxml-attribute-local-name)) 14 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face (nxml-tag-delimiter))) . 3659)) nil (25414 30976 221112 853000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3659)) nil (25414 30976 221112 553000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3664) 3659) nil (25414 30976 221112 230000) 0 nil])
([nil nil ((#("	    </group>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-tag-slash)) 7 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 3690)) nil (25414 30976 221111 676000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3690)) nil (25414 30976 221111 255000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3720 . 3721) (nil fontified nil 3720 . 3721) (nil fontified nil 3719 . 3720) (nil fontified nil 3718 . 3719) (nil fontified nil 3717 . 3718) (nil fontified nil 3709 . 3717) (nil fontified nil 3708 . 3709) (nil fontified nil 3707 . 3708) (nil fontified nil 3706 . 3707) (nil fontified nil 3703 . 3706) (nil fontified nil 3701 . 3703) (nil fontified nil 3700 . 3701) (nil fontified nil 3699 . 3700) (nil fontified nil 3698 . 3699) (nil fontified nil 3696 . 3698) (nil fontified nil 3695 . 3696) (nil fontified nil 3691 . 3695) (nil fontified nil 3690 . 3691) (3690 . 3721)) nil (25414 30976 221110 679000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -3716) (undo-tree-id4991 . -1) 3717) nil (25414 30976 221108 592000) 0 nil])
([nil nil ((3716 . 3717)) nil (25414 30976 221107 64000) 0 nil])
([nil nil ((3689 . 3695)) nil (25414 30976 221106 627000) 0 nil])
([nil nil ((3695 . 3716)) nil (25414 30976 221091 346000) 0 nil])
([nil nil ((3716 . 3719)) nil (25414 30976 221091 132000) 0 nil])
([nil nil ((3719 . 3720)) nil (25414 30976 221090 866000) 0 nil])
([nil nil ((3720 . 3721)) nil (25414 30976 221090 436000) 0 nil])
([nil nil ((#("date" 0 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face)) . -4181) (undo-tree-id4984 . -4) (undo-tree-id4985 . -4) (undo-tree-id4986 . -4) (undo-tree-id4987 . -4) (undo-tree-id4988 . -4) (undo-tree-id4989 . -4) (undo-tree-id4990 . -4) 4185) nil (25414 30976 221088 916000) 0 nil])
([nil nil ((#("year-" 0 5 (fontified t face font-lock-string-face)) . -4176) (undo-tree-id4974 . -5) (undo-tree-id4975 . -5) (undo-tree-id4976 . -5) (undo-tree-id4977 . -5) (undo-tree-id4978 . -5) (undo-tree-id4979 . -5) (undo-tree-id4980 . -5) (undo-tree-id4981 . -5) (undo-tree-id4982 . -5) (undo-tree-id4983 . -5) 4181) nil (25414 30976 219640 611000) 0 nil])
([nil nil ((4176 . 4185)) nil (25414 30976 219637 77000) 0 nil])
([nil nil ((#("	    <choose>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 4832) (undo-tree-id4973 . -13)) nil (25414 30976 219636 769000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4832) (undo-tree-id4971 . 1) (undo-tree-id4972 . -1)) nil (25414 30976 219635 945000) 0 nil])
([nil nil ((#("	      <if variable=\"DOI\">" 0 1 (fontified t) 1 5 (fontified t) 5 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 15 (fontified t face (nxml-attribute-local-name)) 15 17 (fontified t face (nxml-attribute-local-name)) 17 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-delimiter))) . 4832) (undo-tree-id4967 . 5) (undo-tree-id4968 . -24) (undo-tree-id4969 . 26) (undo-tree-id4970 . -26)) nil (25414 30976 219635 16000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 4832) (undo-tree-id4965 . 1) (undo-tree-id4966 . -1)) nil (25414 30976 219632 337000) 0 nil])
([nil nil ((#("		<text variable=\"DOI\" suffix=\".\"/>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 9 (fontified t face (nxml-attribute-local-name)) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t) 23 24 (fontified t face (nxml-attribute-local-name)) 24 25 (fontified t face (nxml-attribute-local-name)) 25 26 (fontified t face (nxml-attribute-local-name)) 26 27 (fontified t face (nxml-attribute-local-name)) 27 28 (fontified t face (nxml-attribute-local-name)) 28 29 (fontified t face (nxml-attribute-local-name)) 29 30 (fontified t) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face (nxml-tag-slash)) 34 35 (fontified t face (nxml-tag-delimiter))) . 4832) (undo-tree-id4961 . 17) (undo-tree-id4962 . -21) (undo-tree-id4963 . 35) (undo-tree-id4964 . -35)) nil (25414 30976 219631 472000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4832) (undo-tree-id4959 . 1) (undo-tree-id4960 . -1)) nil (25414 30976 219629 855000) 0 nil])
([nil nil ((#("	      </if>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter))) . 4832) (undo-tree-id4957 . 12) (undo-tree-id4958 . -12)) nil (25414 30976 219628 587000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4832) (undo-tree-id4955 . 1) (undo-tree-id4956 . -1)) nil (25414 30976 219627 623000) 0 nil])
([nil nil ((#("	      <else-if variable=\"url\">" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-element-local-name)) 15 16 (fontified t) 16 17 (fontified t face (nxml-attribute-local-name)) 17 24 (fontified t face (nxml-attribute-local-name)) 24 25 (fontified t) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face (nxml-tag-delimiter))) . 4832) (undo-tree-id4951 . 5) (undo-tree-id4952 . -29) (undo-tree-id4953 . 31) (undo-tree-id4954 . -31)) nil (25414 30976 219626 735000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 4832) (undo-tree-id4949 . 1) (undo-tree-id4950 . -1)) nil (25414 30976 219625 245000) 0 nil])
([nil nil ((#("		<text variable=\"url\" suffix=\".\"/>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 9 (fontified t face (nxml-attribute-local-name)) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t) 23 24 (fontified t face (nxml-attribute-local-name)) 24 25 (fontified t face (nxml-attribute-local-name)) 25 26 (fontified t face (nxml-attribute-local-name)) 26 27 (fontified t face (nxml-attribute-local-name)) 27 28 (fontified t face (nxml-attribute-local-name)) 28 29 (fontified t face (nxml-attribute-local-name)) 29 30 (fontified t) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face (nxml-tag-slash)) 34 35 (fontified t face (nxml-tag-delimiter))) . 4832) (undo-tree-id4947 . 35) (undo-tree-id4948 . -35)) nil (25414 30976 219624 332000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4832) (undo-tree-id4945 . 1) (undo-tree-id4946 . -1)) nil (25414 30976 219623 489000) 0 nil])
([nil nil ((#("	      </else-if>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-element-local-name)) 15 16 (fontified t face (nxml-element-local-name)) 16 17 (fontified t face (nxml-tag-delimiter))) . 4832) (undo-tree-id4942 . 10) (undo-tree-id4943 . -9) (undo-tree-id4944 . -17)) nil (25414 30976 219622 307000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4832) (undo-tree-id4940 . 1) (undo-tree-id4941 . -1)) nil (25414 30976 219620 686000) 0 nil])
([nil nil ((#("	    </choose>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-tag-slash)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-tag-delimiter))) . 4832) (undo-tree-id4938 . 14) (undo-tree-id4939 . -14)) nil (25414 30976 219619 486000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 4832) (undo-tree-id4936 . 1) (undo-tree-id4937 . -1)) nil (25414 30976 219618 502000) 0 nil])
([nil nil ((#("date" 0 4 (fontified t face font-lock-string-face)) . -4855) (undo-tree-id4935 . -4) 4859) nil (25414 30976 219617 514000) 0 nil])
([nil nil ((#("year-" 0 1 (fontified t face font-lock-string-face) 1 5 (fontified t face font-lock-string-face)) . -4850) (undo-tree-id4923 . -5) (undo-tree-id4924 . -5) (undo-tree-id4925 . -5) (undo-tree-id4926 . -5) (undo-tree-id4927 . -5) (undo-tree-id4928 . -5) (undo-tree-id4929 . -5) (undo-tree-id4930 . -5) (undo-tree-id4931 . -5) (undo-tree-id4932 . -5) (undo-tree-id4933 . -5) (undo-tree-id4934 . -5) 4855) nil (25414 30976 219616 633000) 0 nil])
([nil nil ((4850 . 4859)) nil (25414 30976 219612 69000) 0 nil])
([nil nil ((4831 . 4837)) nil (25414 30976 219611 803000) 0 nil])
([nil nil ((4837 . 4842)) nil (25414 30976 219611 466000) 0 nil])
([nil nil ((4842 . 4861)) nil (25414 30976 219611 173000) 0 nil])
([nil nil ((4861 . 4862)) nil (25414 30976 219610 900000) 0 nil])
([nil nil ((4862 . 4863)) nil (25414 30976 219610 689000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 5122)) nil (25414 30976 219610 408000) 0 nil])
([nil nil ((5122 . 5123)) nil (25414 30976 219610 134000) 0 nil])
([nil nil ((#("number" 0 3 (fontified t face font-lock-string-face) 3 6 (fontified t face font-lock-string-face)) . -5114) (undo-tree-id4920 . -6) (undo-tree-id4921 . -6) (undo-tree-id4922 . -6) 5120) nil (25414 30976 219609 795000) 0 nil])
([nil nil ((5114 . 5118)) nil (25414 30976 219608 207000) 0 nil])
([nil nil ((5185 . 5191)) nil (25414 30976 219607 427000) 0 nil])
([nil nil ((5191 . 5197)) nil (25414 30976 219607 212000) 0 nil])
([nil nil ((5197 . 5214)) nil (25414 30976 219606 985000) 0 nil])
([nil nil ((5214 . 5215)) nil (25414 30976 219606 775000) 0 nil])
([nil nil ((5215 . 5216)) nil (25414 30976 219606 541000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -5209) (undo-tree-id4916 . -1) (undo-tree-id4917 . -1) (undo-tree-id4918 . -1) (undo-tree-id4919 . -1) 5210) nil (25414 30976 219606 102000) 0 nil])
([nil nil ((5211 . 5213)) nil (25414 30976 219604 10000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5249 . 5250) (nil fontified nil 5249 . 5250) (nil fontified nil 5248 . 5249) (nil fontified nil 5247 . 5248) (nil fontified nil 5246 . 5247) (nil fontified nil 5245 . 5246) (nil fontified nil 5244 . 5245) (nil fontified nil 5243 . 5244) (nil fontified nil 5242 . 5243) (nil fontified nil 5241 . 5242) (nil fontified nil 5240 . 5241) (nil fontified nil 5239 . 5240) (nil fontified nil 5238 . 5239) (nil fontified nil 5237 . 5238) (nil fontified nil 5236 . 5237) (nil fontified nil 5235 . 5236) (nil fontified nil 5234 . 5235) (nil fontified nil 5233 . 5234) (nil fontified nil 5232 . 5233) (nil fontified nil 5231 . 5232) (nil fontified nil 5230 . 5231) (nil fontified nil 5229 . 5230) (nil fontified nil 5228 . 5229) (nil fontified nil 5227 . 5228) (nil fontified nil 5226 . 5227) (nil fontified nil 5225 . 5226) (nil fontified nil 5224 . 5225) (nil fontified nil 5223 . 5224) (nil fontified nil 5218 . 5223) (5218 . 5250)) nil (25414 30976 219603 475000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . 5251) (undo-tree-id4915 . 1) (5250 . 5251) (#("
" 0 1 (fontified t rear-nonsticky t)) . 5249) (5250 . 5251)) nil (25414 30976 219601 264000) 0 nil])
([nil nil ((5251 . 5254) (#("  " 0 1 (fontified t) 1 2 (fontified t)) . 5251)) nil (25414 30976 219600 302000) 0 nil])
([nil nil ((#("references" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face)) . -5236) (undo-tree-id4914 . -10) 5246) nil (25414 30976 219599 838000) 0 nil])
([nil nil ((5236 . 5246)) nil (25414 30976 219598 514000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -5249) (undo-tree-id4912 . -1) (undo-tree-id4913 . -1) 5246) nil (25414 30976 219596 699000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -5245) (undo-tree-id5004 . -1) (undo-tree-id5005 . -1) (undo-tree-id5006 . -1) (undo-tree-id5007 . -1) (undo-tree-id5008 . -1) (undo-tree-id5009 . -1) (undo-tree-id5010 . -1) (undo-tree-id5011 . -1) (undo-tree-id5012 . -1) 5246 (t 25414 30976 231490 250000)) nil (25414 30977 52515 631000) 0 nil])
([nil nil ((#("edition-" 0 3 (fontified t face font-lock-string-face) 3 8 (fontified t face font-lock-string-face)) . -3516) (undo-tree-id5014 . -8) 3524 (t 25414 30977 64813 427000)) nil (25414 31003 106630 666000) 0 nil])
([nil nil ((#("edition-" 0 8 (fontified t face font-lock-string-face)) . -2992) (undo-tree-id5013 . -8) 3000) nil (25414 31003 106628 13000) 0 nil])
([nil nil ((2153 . 2154) (t 25414 31003 117829 274000)) nil (25414 31020 11142 990000) 0 nil])
([nil nil ((3083 . 3084) (t 25414 31020 20956 652000)) nil (25414 31028 616930 346000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . -3083) (undo-tree-id5015 . -1) (undo-tree-id5016 . -1) (undo-tree-id5017 . -1) (undo-tree-id5018 . -1) (undo-tree-id5019 . -1) (undo-tree-id5020 . -1) (undo-tree-id5021 . -1) 3084 (t 25414 31028 630851 722000)) nil (25414 31039 117547 272000) 0 nil])
([nil nil ((3083 . 3084)) nil (25414 31039 117537 742000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -1404) 1414 (t 25414 31039 130723 771000)) nil (25414 31090 658657 259000) 0 nil])
([nil nil ((1412 . 1415)) nil (25414 31090 658656 755000) 0 nil])
([nil nil ((1415 . 1424)) nil (25414 31090 658656 448000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face (nxml-text))) . -1422) (undo-tree-id5315 . -1) (undo-tree-id5316 . -1) (undo-tree-id5317 . -1) (undo-tree-id5318 . -1) (undo-tree-id5319 . -1) (undo-tree-id5320 . -1) (undo-tree-id5321 . -1) (undo-tree-id5322 . -1) (#("i" 0 1 (fontified t face (nxml-text))) . -1423) (undo-tree-id5323 . -1) (undo-tree-id5324 . -1) (undo-tree-id5325 . -1) 1424) nil (25414 31090 658655 926000) 0 nil])
([nil nil ((1422 . 1443)) nil (25414 31090 658651 565000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face font-lock-string-face)) . -1438) (undo-tree-id5311 . -1) (undo-tree-id5312 . -1) (undo-tree-id5313 . -1) (undo-tree-id5314 . -1) 1439) nil (25414 31090 658651 93000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-string-face)) . -1435) (undo-tree-id5299 . -1) (undo-tree-id5300 . -1) (undo-tree-id5301 . -1) (undo-tree-id5302 . -1) (undo-tree-id5303 . -1) (undo-tree-id5304 . -1) (undo-tree-id5305 . -1) (undo-tree-id5306 . -1) (undo-tree-id5307 . -1) (undo-tree-id5308 . -1) (undo-tree-id5309 . -1) (undo-tree-id5310 . -1) 1436) nil (25414 31090 658649 370000) 0 nil])
([nil nil ((1441 . 1442)) nil (25414 31090 658644 696000) 0 nil])
([nil nil ((1442 . 1447)) nil (25414 31090 658644 254000) 0 nil])
([nil nil ((1447 . 1448)) nil (25414 31090 658643 988000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -1445) (undo-tree-id5295 . -2) (undo-tree-id5296 . -2) (undo-tree-id5297 . -2) (undo-tree-id5298 . -2) (1448 . 1449)) nil (25414 31090 658643 595000) 0 nil])
([nil nil ((1447 . 1454)) nil (25414 31090 658641 741000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face (nxml-text))) . -1448) (undo-tree-id5289 . -1) (undo-tree-id5290 . -1) (undo-tree-id5291 . -1) (undo-tree-id5292 . -1) (undo-tree-id5293 . -1) (undo-tree-id5294 . -1) 1449) nil (25414 31090 658641 313000) 0 nil])
([nil nil ((1442 . 1447)) nil (25414 31090 658638 788000) 0 nil])
([nil nil ((#("  <macro name=\"linked-title\">" 0 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face (nxml-tag-delimiter))) . 1413) (undo-tree-id5114 . -2) (undo-tree-id5115 . -2) (undo-tree-id5116 . -2) (undo-tree-id5117 . -2) (undo-tree-id5118 . -2) (undo-tree-id5119 . -2) (undo-tree-id5120 . -3) (undo-tree-id5121 . -3) (undo-tree-id5122 . -3) (undo-tree-id5123 . -3) (undo-tree-id5124 . -3) (undo-tree-id5125 . -3) (undo-tree-id5126 . -3) (undo-tree-id5127 . -3) (undo-tree-id5128 . -3) (undo-tree-id5129 . -3) (undo-tree-id5130 . -4) (undo-tree-id5131 . -2) (undo-tree-id5132 . -3) (undo-tree-id5133 . -4) (undo-tree-id5134 . -5) (undo-tree-id5135 . -2) (undo-tree-id5136 . -4) (undo-tree-id5137 . -5) (undo-tree-id5138 . -6) (undo-tree-id5139 . -2) (undo-tree-id5140 . -5) (undo-tree-id5141 . -6) (undo-tree-id5142 . -7) (undo-tree-id5143 . -2) (undo-tree-id5144 . -6) (undo-tree-id5145 . -7) (undo-tree-id5146 . -8) (undo-tree-id5147 . -2) (undo-tree-id5148 . -7) (undo-tree-id5149 . -8) (undo-tree-id5150 . -9) (undo-tree-id5151 . -9) (undo-tree-id5152 . -9) (undo-tree-id5153 . -9) (undo-tree-id5154 . -9) (undo-tree-id5155 . -2) (undo-tree-id5156 . -9) (undo-tree-id5157 . -9) (undo-tree-id5158 . -9) (undo-tree-id5159 . -2) (undo-tree-id5160 . -9) (undo-tree-id5161 . -9) (undo-tree-id5162 . -9) (undo-tree-id5163 . -9) (undo-tree-id5164 . -9) (undo-tree-id5165 . -9) (undo-tree-id5166 . -10) (undo-tree-id5167 . -2) (undo-tree-id5168 . -9) (undo-tree-id5169 . -10) (undo-tree-id5170 . -11) (undo-tree-id5171 . -2) (undo-tree-id5172 . -10) (undo-tree-id5173 . -11) (undo-tree-id5174 . -12) (undo-tree-id5175 . -2) (undo-tree-id5176 . -11) (undo-tree-id5177 . -12) (undo-tree-id5178 . -13) (undo-tree-id5179 . -2) (undo-tree-id5180 . -12) (undo-tree-id5181 . -13) (undo-tree-id5182 . -14) (undo-tree-id5183 . -2) (undo-tree-id5184 . -13) (undo-tree-id5185 . -14) (undo-tree-id5186 . -15) (undo-tree-id5187 . -2) (undo-tree-id5188 . -14) (undo-tree-id5189 . -15) (undo-tree-id5190 . -16) (undo-tree-id5191 . -2) (undo-tree-id5192 . -15) (undo-tree-id5193 . -16) (undo-tree-id5194 . -17) (undo-tree-id5195 . -2) (undo-tree-id5196 . -16) (undo-tree-id5197 . -17) (undo-tree-id5198 . -18) (undo-tree-id5199 . -2) (undo-tree-id5200 . -17) (undo-tree-id5201 . -18) (undo-tree-id5202 . -19) (undo-tree-id5203 . -2) (undo-tree-id5204 . -18) (undo-tree-id5205 . -19) (undo-tree-id5206 . -20) (undo-tree-id5207 . -2) (undo-tree-id5208 . -19) (undo-tree-id5209 . -20) (undo-tree-id5210 . -21) (undo-tree-id5211 . -2) (undo-tree-id5212 . -20) (undo-tree-id5213 . -21) (undo-tree-id5214 . -22) (undo-tree-id5215 . -2) (undo-tree-id5216 . -21) (undo-tree-id5217 . -22) (undo-tree-id5218 . -22) (undo-tree-id5219 . -2) (undo-tree-id5220 . -22) (undo-tree-id5221 . -22) (undo-tree-id5222 . -23) (undo-tree-id5223 . -2) (undo-tree-id5224 . -22) (undo-tree-id5225 . -23) (undo-tree-id5226 . -24) (undo-tree-id5227 . -2) (undo-tree-id5228 . -23) (undo-tree-id5229 . -24) (undo-tree-id5230 . -24) (undo-tree-id5231 . -2) (undo-tree-id5232 . -24) (undo-tree-id5233 . -24) (undo-tree-id5234 . -25) (undo-tree-id5235 . -2) (undo-tree-id5236 . -24) (undo-tree-id5237 . -25) (undo-tree-id5238 . -26) (undo-tree-id5239 . -2) (undo-tree-id5240 . -25) (undo-tree-id5241 . -26) (undo-tree-id5242 . -27) (undo-tree-id5243 . -2) (undo-tree-id5244 . -26) (undo-tree-id5245 . -27) (undo-tree-id5246 . -28) (undo-tree-id5247 . -2) (undo-tree-id5248 . -27) (undo-tree-id5249 . -28) (undo-tree-id5250 . -28) (undo-tree-id5251 . -28) (undo-tree-id5252 . -28) (undo-tree-id5253 . -28) (undo-tree-id5254 . -28) (undo-tree-id5255 . -28) (undo-tree-id5256 . -28) (undo-tree-id5257 . -28) (undo-tree-id5258 . -24) (undo-tree-id5259 . -2) (undo-tree-id5260 . -24) (undo-tree-id5261 . -24) (undo-tree-id5262 . -23) (undo-tree-id5263 . -23) (undo-tree-id5264 . -22) (undo-tree-id5265 . -22) (undo-tree-id5266 . -22) (undo-tree-id5267 . -22) (undo-tree-id5268 . -22) (undo-tree-id5269 . -22) (undo-tree-id5270 . -22) (undo-tree-id5271 . -22) (undo-tree-id5272 . -22) (undo-tree-id5273 . -2) (undo-tree-id5274 . -22) (undo-tree-id5275 . -22) (undo-tree-id5276 . -28) (undo-tree-id5277 . -28) (undo-tree-id5278 . -28) (undo-tree-id5279 . -28) (undo-tree-id5280 . -28) (undo-tree-id5281 . -28) (undo-tree-id5282 . -28) (undo-tree-id5283 . -28) (undo-tree-id5284 . -29) (undo-tree-id5285 . -2) (undo-tree-id5286 . -28) (undo-tree-id5287 . -29) (undo-tree-id5288 . -29)) nil (25414 31090 658635 705000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face (nxml-tag-delimiter))) . 1413) (undo-tree-id5111 . 1) (undo-tree-id5112 . 1) (undo-tree-id5113 . -1)) nil (25414 31090 656922 410000) 0 nil])
([nil nil ((#("    
" 0 1 (fontified t face (nxml-tag-delimiter)) 1 4 (fontified t face (nxml-tag-delimiter)) 4 5 (fontified t face (nxml-tag-delimiter))) . 1413) (undo-tree-id5099 . 1) (undo-tree-id5100 . 5) (undo-tree-id5101 . -4) (undo-tree-id5102 . -4) (undo-tree-id5103 . -4) (undo-tree-id5104 . -4) (undo-tree-id5105 . -4) (undo-tree-id5106 . -4) (undo-tree-id5107 . -4) (undo-tree-id5108 . -4) (undo-tree-id5109 . 5) (undo-tree-id5110 . -5)) nil (25414 31090 656919 692000) 0 nil])
([nil nil ((#("  </macro>" 0 1 (fontified t face (nxml-tag-delimiter)) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-tag-slash)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-tag-delimiter))) . 1413) (undo-tree-id5031 . -7) (undo-tree-id5032 . 10) (undo-tree-id5033 . -2) (undo-tree-id5034 . -2) (undo-tree-id5035 . -2) (undo-tree-id5036 . -2) (undo-tree-id5037 . -3) (undo-tree-id5038 . -3) (undo-tree-id5039 . -4) (undo-tree-id5040 . -4) (undo-tree-id5041 . -5) (undo-tree-id5042 . -2) (undo-tree-id5043 . -4) (undo-tree-id5044 . -5) (undo-tree-id5045 . -5) (undo-tree-id5046 . -2) (undo-tree-id5047 . -5) (undo-tree-id5048 . -5) (undo-tree-id5049 . -6) (undo-tree-id5050 . -2) (undo-tree-id5051 . -5) (undo-tree-id5052 . -6) (undo-tree-id5053 . -7) (undo-tree-id5054 . -2) (undo-tree-id5055 . -6) (undo-tree-id5056 . -7) (undo-tree-id5057 . -8) (undo-tree-id5058 . -2) (undo-tree-id5059 . -7) (undo-tree-id5060 . -8) (undo-tree-id5061 . -9) (undo-tree-id5062 . -2) (undo-tree-id5063 . -8) (undo-tree-id5064 . -9) (undo-tree-id5065 . -9) (undo-tree-id5066 . -9) (undo-tree-id5067 . -9) (undo-tree-id5068 . -9) (undo-tree-id5069 . -10) (undo-tree-id5070 . -2) (undo-tree-id5071 . -9) (undo-tree-id5072 . -10) (undo-tree-id5073 . -9) (undo-tree-id5074 . -9) (undo-tree-id5075 . -8) (undo-tree-id5076 . -8) (undo-tree-id5077 . -8) (undo-tree-id5078 . -8) (undo-tree-id5079 . -8) (undo-tree-id5080 . -8) (undo-tree-id5081 . -7) (undo-tree-id5082 . -7) (undo-tree-id5083 . -7) (undo-tree-id5084 . -5) (undo-tree-id5085 . -5) (undo-tree-id5086 . -5) (undo-tree-id5087 . -2) (undo-tree-id5088 . -5) (undo-tree-id5089 . -5) (undo-tree-id5090 . -10) (undo-tree-id5091 . -10) (undo-tree-id5092 . -10) (undo-tree-id5093 . -10) (undo-tree-id5094 . -10) (undo-tree-id5095 . -10) (undo-tree-id5096 . 10) (undo-tree-id5097 . 10) (undo-tree-id5098 . -10)) nil (25414 31090 656914 616000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1413) (undo-tree-id5026 . -1) (undo-tree-id5027 . 1) (undo-tree-id5028 . 1) (undo-tree-id5029 . 1) (undo-tree-id5030 . -1)) nil (25414 31090 861251 705000) 0 nil])
([nil nil ((#("else-" 0 1 (fontified t face (nxml-element-local-name)) 1 2 (fontified t face (nxml-element-local-name)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name))) . -2317) (undo-tree-id5330 . -5) 2322) nil (25414 31108 329468 888000) 0 nil] [nil nil ((#("  <macro name=\"published\">" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t) 9 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-delimiter))) . 1413) (undo-tree-id5022 . 26) (undo-tree-id5023 . 26) (undo-tree-id5024 . 26) (undo-tree-id5025 . -26)) ((1413 . 1439)) (25414 31090 656884 366000) 0 nil])
([nil nil ((#("else-" 0 1 (fontified t face (nxml-element-local-name)) 1 2 (fontified t face (nxml-element-local-name)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name))) . -2365) (undo-tree-id5326 . -5) (undo-tree-id5327 . 5) (undo-tree-id5328 . -5) (undo-tree-id5329 . -5) 2370) nil (25414 31108 329449 337000) 0 nil])
nil
([nil nil ((2314 . 2316) (t 25414 31108 343213 660000)) nil (25414 31123 183419 343000) 0 nil])
([nil nil ((2316 . 2317)) nil (25414 31123 183418 728000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil face (nxml-tag-delimiter))) . -2321) (2321 . 2322) (#("	" 0 1 (fontified nil face (nxml-tag-delimiter))) . 2321) (undo-tree-id5331 . -1) (undo-tree-id5332 . -1) (undo-tree-id5333 . -1) (undo-tree-id5334 . -1) (undo-tree-id5335 . -1) (undo-tree-id5336 . -1) (2315 . 2321) (2317 . 2318)) nil (25414 31123 183417 963000) 0 nil])
([nil nil ((2323 . 2330)) nil (25414 31123 183411 513000) 0 nil])
([nil nil ((2330 . 2337)) nil (25414 31123 183411 60000) 0 nil])
([nil nil ((2337 . 2345)) nil (25414 31123 183408 87000) 0 nil])
([nil nil ((2390 . 2406) (t 25414 31123 193032 716000)) nil (25414 31149 21147 188000) 0 nil])
([nil nil ((2389 . 2390) (t 25414 31149 42717 750000)) nil (25414 31160 344971 119000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3131 . 3132) (nil fontified nil 3131 . 3132) (nil fontified nil 3130 . 3131) (nil fontified nil 3129 . 3130) (nil fontified nil 3128 . 3129) (nil fontified nil 3127 . 3128) (nil fontified nil 3126 . 3127) (nil fontified nil 3125 . 3126) (nil fontified nil 3124 . 3125) (nil fontified nil 3123 . 3124) (nil fontified nil 3122 . 3123) (nil fontified nil 3121 . 3122) (3121 . 3132) (t 25414 31160 355913 234000)) nil (25414 31172 663438 681000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3173 . 3174) (nil fontified nil 3173 . 3174) (nil fontified nil 3172 . 3173) (nil fontified nil 3171 . 3172) (nil fontified nil 3170 . 3171) (nil fontified nil 3169 . 3170) (nil fontified nil 3168 . 3169) (nil fontified nil 3167 . 3168) (nil fontified nil 3166 . 3167) (nil fontified nil 3165 . 3166) (nil fontified nil 3164 . 3165) (nil fontified nil 3163 . 3164) (3163 . 3174)) nil (25414 31172 663435 505000) 0 nil])
([nil nil ((2928 . 2929) (t 25414 31172 675762 915000)) nil (25414 31196 655372 689000) 0 nil])
([nil nil ((#("suffix=\".\"" 0 1 (fontified t face (nxml-attribute-local-name)) 1 2 (fontified t face (nxml-attribute-local-name)) 2 3 (fontified t face (nxml-attribute-local-name)) 3 4 (fontified t face (nxml-attribute-local-name)) 4 5 (fontified t face (nxml-attribute-local-name)) 5 6 (fontified t face (nxml-attribute-local-name)) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face)) . -2999) (undo-tree-id5373 . -10) 3009) nil (25414 31196 655372 375000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2998) (undo-tree-id5369 . -1) (undo-tree-id5370 . -1) (undo-tree-id5371 . -1) (undo-tree-id5372 . -1) 2999) nil (25414 31196 655371 640000) 0 nil])
([nil nil ((#("suffix=\".\"" 0 1 (fontified t face (nxml-attribute-local-name)) 1 2 (fontified t face (nxml-attribute-local-name)) 2 3 (fontified t face (nxml-attribute-local-name)) 3 4 (fontified t face (nxml-attribute-local-name)) 4 5 (fontified t face (nxml-attribute-local-name)) 5 6 (fontified t face (nxml-attribute-local-name)) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face)) . -3027) (undo-tree-id5368 . -10) 3037) nil (25414 31196 655369 981000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3026) (undo-tree-id5362 . -1) (undo-tree-id5363 . -1) (undo-tree-id5364 . -1) (undo-tree-id5365 . -1) (undo-tree-id5366 . -1) (undo-tree-id5367 . -1) 3027) nil (25414 31196 655368 929000) 0 nil])
([nil nil ((#("suffix=\".\"" 0 1 (fontified t face (nxml-attribute-local-name)) 1 2 (fontified t face (nxml-attribute-local-name)) 2 3 (fontified t face (nxml-attribute-local-name)) 3 4 (fontified t face (nxml-attribute-local-name)) 4 5 (fontified t face (nxml-attribute-local-name)) 5 6 (fontified t face (nxml-attribute-local-name)) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face)) . -3058) (undo-tree-id5361 . -10) 3068) nil (25414 31196 655366 673000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3057) (undo-tree-id5357 . -1) (undo-tree-id5358 . -1) (undo-tree-id5359 . -1) (undo-tree-id5360 . -1) 3058) nil (25414 31196 655365 561000) 0 nil])
([nil nil ((#("suffix=\".\"" 0 1 (fontified t face (nxml-attribute-local-name)) 1 2 (fontified t face (nxml-attribute-local-name)) 2 3 (fontified t face (nxml-attribute-local-name)) 3 4 (fontified t face (nxml-attribute-local-name)) 4 5 (fontified t face (nxml-attribute-local-name)) 5 6 (fontified t face (nxml-attribute-local-name)) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (rear-nonsticky t fontified t face font-lock-string-face)) . -3090) (undo-tree-id5354 . -10) (undo-tree-id5355 . -10) (undo-tree-id5356 . -10) 3100) nil (25414 31196 655363 580000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3089) (undo-tree-id5348 . -1) (undo-tree-id5349 . -1) (undo-tree-id5350 . -1) (undo-tree-id5351 . -1) (undo-tree-id5352 . -1) (undo-tree-id5353 . -1) 3090) nil (25414 31196 655362 227000) 0 nil])
([nil nil ((#("suffix=\".\"" 0 1 (fontified t face (nxml-attribute-local-name)) 1 2 (fontified t face (nxml-attribute-local-name)) 2 3 (fontified t face (nxml-attribute-local-name)) 3 4 (fontified t face (nxml-attribute-local-name)) 4 5 (fontified t face (nxml-attribute-local-name)) 5 6 (fontified t face (nxml-attribute-local-name)) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (rear-nonsticky t fontified t face font-lock-string-face)) . -3121) (undo-tree-id5346 . -10) (undo-tree-id5347 . -10) 3131) nil (25414 31196 655359 455000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3120) (undo-tree-id5337 . -1) (undo-tree-id5338 . -1) (undo-tree-id5339 . -1) (undo-tree-id5340 . -1) (undo-tree-id5341 . -1) (undo-tree-id5342 . -1) (undo-tree-id5343 . -1) (undo-tree-id5344 . -1) (undo-tree-id5345 . -1) 3121) nil (25414 31196 655356 539000) 0 nil])
([nil nil ((4323 . 4324) (t 25414 31196 668803 191000)) nil (25414 31240 909418 723000) 0 nil])
([nil nil ((#("suffix=\".\"" 0 1 (fontified t face (nxml-attribute-local-name)) 1 2 (fontified t face (nxml-attribute-local-name)) 2 3 (fontified t face (nxml-attribute-local-name)) 3 4 (fontified t face (nxml-attribute-local-name)) 4 5 (fontified t face (nxml-attribute-local-name)) 5 6 (fontified t face (nxml-attribute-local-name)) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face)) . -4394) (undo-tree-id5378 . -10) 4404) nil (25414 31241 98775 307000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -4393) (undo-tree-id5408 . -1) (undo-tree-id5409 . -1) (undo-tree-id5410 . -1) 4394) nil (25414 31341 758187 894000) 0 nil] [nil nil ((#("italic\" " 0 7 (fontified t face font-lock-string-face) 7 8 (fontified t)) . -4386) (undo-tree-id5374 . -8) (undo-tree-id5375 . -8) (undo-tree-id5376 . -8) (undo-tree-id5377 . -8) 4394) ((4386 . 4394)) (25414 31240 909415 420000) 0 nil])
([nil nil ((4471 . 4476) (4446 . 4451) (#(" " 0 1 (fontified t)) . 4446) (4466 . 4467)) nil (25414 31341 758186 369000) 0 nil])
nil
([nil nil ((4476 . 4496)) nil (25414 31341 758186 35000) 0 nil])
([nil nil ((4496 . 4497)) nil (25414 31341 758185 832000) 0 nil])
([nil nil ((4497 . 4498)) nil (25414 31341 758185 568000) 0 nil])
([nil nil ((#("	    <text macro=\"volume\"/>" 0 5 (fontified t face (nxml-tag-delimiter)) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-slash)) 26 27 (fontified t face (nxml-tag-delimiter))) . 4471)) nil (25414 31341 758185 291000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4471)) nil (25414 31341 758185 11000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -4483) (undo-tree-id5398 . -1) (#("u" 0 1 (fontified t)) . -4484) (undo-tree-id5399 . -1) (#("f" 0 1 (fontified t)) . -4485) (undo-tree-id5400 . -1) (#("f" 0 1 (fontified t)) . -4486) (undo-tree-id5401 . -1) (#("i" 0 1 (fontified t)) . -4487) (undo-tree-id5402 . -1) (#("x" 0 1 (fontified t)) . -4488) (undo-tree-id5403 . -1) (#("=" 0 1 (fontified t)) . -4489) (undo-tree-id5404 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -4490) (undo-tree-id5405 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -4491) (undo-tree-id5406 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -4492) (undo-tree-id5407 . -1) 4493) nil (25414 31341 758184 32000) 0 nil])
([nil nil ((4483 . 4495)) nil (25414 31341 758179 532000) 0 nil])
([nil nil ((4586 . 4591)) nil (25414 31341 758179 315000) 0 nil])
([nil nil ((4591 . 4592)) nil (25414 31341 758179 66000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -4589) (4592 . 4593)) nil (25414 31341 758178 721000) 0 nil])
([nil nil ((4591 . 4598)) nil (25414 31341 758178 327000) 0 nil])
([nil nil ((#("		</choose>" 0 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-tag-slash)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 4587) (undo-tree-id5396 . 9) (undo-tree-id5397 . -4)) nil (25414 31341 758178 8000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4587)) nil (25414 31341 758177 71000) 0 nil])
([nil nil ((#("	      <choose>" 0 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-tag-delimiter))) . 4497)) nil (25414 31341 758176 766000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4497)) nil (25414 31341 758176 473000) 0 nil])
([nil nil ((#("		<if variable=\"volume\">" 0 1 (fontified t) 1 2 (fontified t) 2 3 (face (nxml-tag-delimiter)) 3 4 (face (nxml-element-local-name)) 4 5 (face (nxml-element-local-name)) 6 7 (face (nxml-attribute-local-name)) 7 8 (face (nxml-attribute-local-name)) 8 9 (face (nxml-attribute-local-name)) 9 10 (face (nxml-attribute-local-name)) 10 11 (face (nxml-attribute-local-name)) 11 12 (face (nxml-attribute-local-name)) 12 13 (face (nxml-attribute-local-name)) 13 14 (face (nxml-attribute-local-name)) 15 16 (face font-lock-string-face) 16 17 (face font-lock-string-face) 17 18 (face font-lock-string-face) 18 19 (face font-lock-string-face) 19 20 (face font-lock-string-face) 20 21 (face font-lock-string-face) 21 22 (face font-lock-string-face) 22 23 (face font-lock-string-face) 23 24 (face (nxml-tag-delimiter))) . 4497)) nil (25414 31341 758176 190000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4497)) nil (25414 31341 758175 825000) 0 nil])
([nil nil ((#("	  " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified t)) . -4504) (4504 . 4505) (#("	" 0 1 (fontified nil)) . 4504) (4498 . 4504) 4497) nil (25414 31341 758175 407000) 0 nil])
([nil nil ((#("		</if>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-tag-slash)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-tag-delimiter))) . 4549) (undo-tree-id5390 . -7) (undo-tree-id5391 . 3) (undo-tree-id5392 . -6) (undo-tree-id5393 . -2) (undo-tree-id5394 . -7) (undo-tree-id5395 . -7)) nil (25414 31341 758174 858000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4549) (undo-tree-id5388 . 1) (undo-tree-id5389 . -1)) nil (25414 31341 758172 386000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -4557) (4557 . 4558) (#("	" 0 1 (fontified nil)) . 4557) (undo-tree-id5387 . 1) (4551 . 4557) (#("	      " 0 7 (fontified nil)) . 4549) (4549 . 4556) (4549 . 4550)) nil (25414 31341 758171 65000) 0 nil])
([nil nil ((4549 . 4556)) nil (25414 31341 758170 118000) 0 nil])
([nil nil ((4556 . 4565)) nil (25414 31341 758169 876000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t face (nxml-element-local-name))) . -4559) (undo-tree-id5383 . -1) (undo-tree-id5384 . -1) (undo-tree-id5385 . -1) (undo-tree-id5386 . -1) 4560) nil (25414 31341 758169 211000) 0 nil])
([nil nil ((4566 . 4567) (#("      " 0 6 (fontified t)) . 4566) (undo-tree-id5379 . -6) (undo-tree-id5380 . -6) (undo-tree-id5381 . -6) (undo-tree-id5382 . -6) 4575) nil (25414 31341 758165 867000) 0 nil])
([nil nil ((2747 . 2752) (t 25414 31341 773697 339000)) nil (25414 31499 448971 539000) 0 nil])
([nil nil ((2752 . 2757)) nil (25414 31499 448971 263000) 0 nil])
([nil nil ((2757 . 2759)) nil (25414 31499 448971 51000) 0 nil])
([nil nil ((2757 . 2758)) nil (25414 31499 448970 844000) 0 nil])
([nil nil ((2758 . 2765)) nil (25414 31499 448970 631000) 0 nil])
([nil nil ((2765 . 2766)) nil (25414 31499 448970 411000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -2763) (undo-tree-id5447 . -2) (undo-tree-id5448 . -2) (undo-tree-id5449 . -2) (undo-tree-id5450 . -2) (2766 . 2767)) nil (25414 31499 448970 130000) 0 nil])
([nil nil ((2765 . 2771)) nil (25414 31499 448968 476000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t face (nxml-text))) . -2770) (undo-tree-id5440 . -1) (undo-tree-id5441 . -1) (undo-tree-id5442 . -1) (undo-tree-id5443 . -1) (undo-tree-id5444 . -1) (undo-tree-id5445 . -1) (undo-tree-id5446 . -1) 2771) nil (25414 31499 448968 144000) 0 nil])
([nil nil ((2758 . 2765)) nil (25414 31499 448964 964000) 0 nil])
([nil nil ((2765 . 2782)) nil (25414 31499 448964 714000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -2775) (undo-tree-id5436 . -1) (undo-tree-id5437 . -1) (undo-tree-id5438 . -1) (undo-tree-id5439 . -1) 2776) nil (25414 31499 448964 428000) 0 nil])
([nil nil ((2781 . 2782)) nil (25414 31499 448962 722000) 0 nil])
([nil nil ((2782 . 2783)) nil (25414 31499 448962 509000) 0 nil])
([nil nil ((#("name" 0 1 (fontified t face (nxml-attribute-local-name)) 1 2 (fontified t face (nxml-attribute-local-name)) 2 3 (fontified t face (nxml-attribute-local-name)) 3 4 (fontified t face (nxml-attribute-local-name))) . -2770) (undo-tree-id5417 . -4) (undo-tree-id5418 . -1) (undo-tree-id5419 . -1) (undo-tree-id5420 . -2) (undo-tree-id5421 . -1) (undo-tree-id5422 . -2) (undo-tree-id5423 . -3) (undo-tree-id5424 . -2) (undo-tree-id5425 . -3) (undo-tree-id5426 . -4) (undo-tree-id5427 . -3) (undo-tree-id5428 . -4) (undo-tree-id5429 . -4) (undo-tree-id5430 . -4) (undo-tree-id5431 . -4) (undo-tree-id5432 . -4) (undo-tree-id5433 . -4) (undo-tree-id5434 . -4) (undo-tree-id5435 . -4) 2774) nil (25414 31499 448962 30000) 0 nil])
([nil nil ((2770 . 2772)) nil (25414 31499 448954 700000) 0 nil])
([nil nil ((2772 . 2778)) nil (25414 31499 448954 309000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face (nxml-attribute-local-name))) . -2776) (undo-tree-id5411 . -1) (undo-tree-id5412 . -1) (undo-tree-id5413 . -1) (undo-tree-id5414 . -1) (undo-tree-id5415 . -1) (undo-tree-id5416 . -1) 2777) nil (25414 31499 448953 873000) 0 nil])
([nil nil ((2784 . 2795)) nil (25414 31499 448947 912000) 0 nil])
([nil nil ((2795 . 2802)) nil (25414 31499 448947 514000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t)) . -2817) 2802) nil (25414 31499 448944 391000) 0 nil])
([nil nil ((2776 . 2777) (t 25414 31499 461770 735000)) nil (25414 31559 542812 16000) 0 nil])
([nil nil ((2458 . 2460) (#("  " 0 2 (fontified nil)) . 2457) (2457 . 2459) (2457 . 2458) (t 25414 31559 554370 50000)) nil (25414 31625 484275 383000) 0 nil])
([nil nil ((2460 . 2465)) nil (25414 31625 484274 883000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face (nxml-text))) . -2462) (undo-tree-id5459 . -1) (undo-tree-id5460 . -1) (undo-tree-id5461 . -1) (undo-tree-id5462 . -1) (undo-tree-id5463 . -1) (undo-tree-id5464 . -1) (undo-tree-id5465 . -1) (undo-tree-id5466 . -1) 2463) nil (25414 31625 484274 242000) 0 nil])
([nil nil ((2692 . 2694)) nil (25414 31625 484270 547000) 0 nil])
([nil nil ((2694 . 2697)) nil (25414 31625 484270 193000) 0 nil])
([nil nil ((2697 . 2700)) nil (25414 31625 484269 783000) 0 nil])
([nil nil ((#("  " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -2698) (undo-tree-id5451 . -2) (undo-tree-id5452 . -2) (undo-tree-id5453 . -2) (undo-tree-id5454 . -2) (undo-tree-id5455 . -2) (undo-tree-id5456 . -2) (undo-tree-id5457 . -2) (undo-tree-id5458 . -2) 2700) nil (25414 31625 484267 529000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3506 . 3507) (nil fontified nil 3506 . 3507) (nil fontified nil 3505 . 3506) (nil fontified nil 3504 . 3505) (nil fontified nil 3503 . 3504) (nil fontified nil 3502 . 3503) (nil fontified nil 3501 . 3502) (nil fontified nil 3499 . 3501) (nil fontified nil 3498 . 3499) (nil fontified nil 3497 . 3498) (nil fontified nil 3496 . 3497) (nil fontified nil 3495 . 3496) (nil fontified nil 3494 . 3495) (nil fontified nil 3493 . 3494) (nil fontified nil 3492 . 3493) (nil fontified nil 3491 . 3492) (nil fontified nil 3490 . 3491) (nil fontified nil 3489 . 3490) (nil fontified nil 3488 . 3489) (nil fontified nil 3487 . 3488) (nil fontified nil 3486 . 3487) (nil fontified nil 3485 . 3486) (nil fontified nil 3484 . 3485) (nil fontified nil 3483 . 3484) (nil fontified nil 3482 . 3483) (nil fontified nil 3481 . 3482) (nil fontified nil 3480 . 3481) (nil fontified nil 3479 . 3480) (nil fontified nil 3478 . 3479) (nil fontified nil 3477 . 3478) (nil fontified nil 3476 . 3477) (nil fontified nil 3475 . 3476) (nil fontified nil 3474 . 3475) (nil fontified nil 3473 . 3474) (nil fontified nil 3472 . 3473) (nil fontified nil 3471 . 3472) (nil fontified nil 3470 . 3471) (nil fontified nil 3469 . 3470) (nil fontified nil 3468 . 3469) (nil fontified nil 3467 . 3468) (nil fontified nil 3466 . 3467) (nil fontified nil 3465 . 3466) (nil fontified nil 3464 . 3465) (nil fontified nil 3463 . 3464) (nil fontified nil 3462 . 3463) (nil fontified nil 3461 . 3462) (nil fontified nil 3460 . 3461) (nil fontified nil 3455 . 3460) (nil fontified nil 3454 . 3455) (nil fontified nil 3453 . 3454) (nil fontified nil 3452 . 3453) (nil fontified nil 3451 . 3452) (nil fontified nil 3450 . 3451) (nil fontified nil 3449 . 3450) (nil fontified nil 3448 . 3449) (nil fontified nil 3447 . 3448) (nil fontified nil 3446 . 3447) (nil fontified nil 3445 . 3446) (nil fontified nil 3444 . 3445) (nil fontified nil 3443 . 3444) (nil fontified nil 3442 . 3443) (nil fontified nil 3441 . 3442) (nil fontified nil 3440 . 3441) (nil fontified nil 3439 . 3440) (nil fontified nil 3438 . 3439) (nil fontified nil 3437 . 3438) (nil fontified nil 3436 . 3437) (nil fontified nil 3435 . 3436) (nil fontified nil 3432 . 3435) (nil fontified nil 3431 . 3432) (nil fontified nil 3430 . 3431) (nil fontified nil 3429 . 3430) (nil fontified nil 3428 . 3429) (nil fontified nil 3427 . 3428) (nil fontified nil 3426 . 3427) (nil fontified nil 3425 . 3426) (nil fontified nil 3424 . 3425) (nil fontified nil 3418 . 3424) (nil fontified nil 3417 . 3418) (3417 . 3507) (t 25414 31625 496897 928000)) nil (25414 32013 252225 520000) 0 nil])
([nil nil ((3421 . 3426) (3394 . 3399) (#(" " 0 1 (fontified t)) . 3394) (3416 . 3417)) nil (25414 32013 252220 690000) 0 nil])
([nil nil ((3426 . 3445)) nil (25414 32013 252220 151000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3394) (undo-tree-id5852 . 1) (#("	" 0 1 (fontified t)) . 3394) (undo-tree-id5853 . 1) (#("	" 0 1 (fontified t)) . 3394) (undo-tree-id5854 . 1) (#("
" 0 1 (fontified t)) . 3394)) nil (25414 32013 252219 583000) 0 nil])
([nil nil ((3533 . 3534) (#("    " 0 4 (fontified t)) . 3533) 3547) nil (25414 32013 252218 139000) 0 nil])
([nil nil ((3439 . 3440)) nil (25414 32013 252217 576000) 0 nil])
([nil nil ((#("	    <group delimter=\" \">" 0 5 (face (nxml-tag-delimiter) fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t face (nxml-attribute-local-name)) 20 21 (fontified t) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face (nxml-tag-delimiter))) . 3417) (undo-tree-id5739 . -5) (undo-tree-id5740 . -5) (undo-tree-id5741 . -5) (undo-tree-id5742 . -5) (undo-tree-id5743 . -5) (undo-tree-id5744 . -5) (undo-tree-id5745 . -5) (undo-tree-id5746 . -5) (undo-tree-id5747 . -6) (undo-tree-id5748 . -6) (undo-tree-id5749 . -6) (undo-tree-id5750 . -6) (undo-tree-id5751 . -7) (undo-tree-id5752 . -5) (undo-tree-id5753 . -6) (undo-tree-id5754 . -7) (undo-tree-id5755 . -8) (undo-tree-id5756 . -5) (undo-tree-id5757 . -7) (undo-tree-id5758 . -8) (undo-tree-id5759 . -9) (undo-tree-id5760 . -5) (undo-tree-id5761 . -8) (undo-tree-id5762 . -9) (undo-tree-id5763 . -10) (undo-tree-id5764 . -5) (undo-tree-id5765 . -9) (undo-tree-id5766 . -10) (undo-tree-id5767 . -11) (undo-tree-id5768 . -5) (undo-tree-id5769 . -10) (undo-tree-id5770 . -11) (undo-tree-id5771 . -12) (undo-tree-id5772 . -12) (undo-tree-id5773 . -12) (undo-tree-id5774 . -12) (undo-tree-id5775 . -12) (undo-tree-id5776 . -12) (undo-tree-id5777 . -12) (undo-tree-id5778 . -12) (undo-tree-id5779 . -12) (undo-tree-id5780 . -12) (undo-tree-id5781 . -13) (undo-tree-id5782 . -5) (undo-tree-id5783 . -12) (undo-tree-id5784 . -13) (undo-tree-id5785 . -14) (undo-tree-id5786 . -5) (undo-tree-id5787 . -13) (undo-tree-id5788 . -14) (undo-tree-id5789 . -15) (undo-tree-id5790 . -5) (undo-tree-id5791 . -14) (undo-tree-id5792 . -15) (undo-tree-id5793 . -16) (undo-tree-id5794 . -5) (undo-tree-id5795 . -15) (undo-tree-id5796 . -16) (undo-tree-id5797 . -17) (undo-tree-id5798 . -5) (undo-tree-id5799 . -16) (undo-tree-id5800 . -17) (undo-tree-id5801 . -18) (undo-tree-id5802 . -5) (undo-tree-id5803 . -17) (undo-tree-id5804 . -18) (undo-tree-id5805 . -19) (undo-tree-id5806 . -5) (undo-tree-id5807 . -18) (undo-tree-id5808 . -19) (undo-tree-id5809 . -20) (undo-tree-id5810 . -5) (undo-tree-id5811 . -19) (undo-tree-id5812 . -20) (undo-tree-id5813 . -21) (undo-tree-id5814 . -5) (undo-tree-id5815 . -20) (undo-tree-id5816 . -21) (undo-tree-id5817 . -22) (undo-tree-id5818 . -5) (undo-tree-id5819 . -21) (undo-tree-id5820 . -22) (undo-tree-id5821 . -24) (undo-tree-id5822 . -5) (undo-tree-id5823 . -22) (undo-tree-id5824 . -24) (undo-tree-id5825 . -24) (undo-tree-id5826 . -24) (undo-tree-id5827 . -24) (undo-tree-id5828 . -24) (undo-tree-id5829 . -24) (undo-tree-id5830 . -24) (undo-tree-id5831 . -24) (undo-tree-id5832 . -24) (undo-tree-id5833 . -25) (undo-tree-id5834 . -5) (undo-tree-id5835 . -24) (undo-tree-id5836 . -25) (undo-tree-id5837 . -25) (undo-tree-id5838 . -25) (undo-tree-id5839 . -25) (undo-tree-id5840 . -25) (undo-tree-id5841 . -25) (undo-tree-id5842 . -25) (undo-tree-id5843 . -25) (undo-tree-id5844 . -25) (undo-tree-id5845 . -25) (undo-tree-id5846 . -25) (undo-tree-id5847 . -23) (undo-tree-id5848 . -5) (undo-tree-id5849 . -22) (undo-tree-id5850 . -23) (undo-tree-id5851 . -25)) nil (25414 32013 252216 310000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3417) (undo-tree-id5730 . -1) (undo-tree-id5731 . -1) (undo-tree-id5732 . -1) (undo-tree-id5733 . -1) (undo-tree-id5734 . -1) (undo-tree-id5735 . -1) (undo-tree-id5736 . -1) (undo-tree-id5737 . 1) (undo-tree-id5738 . -1)) nil (25414 32013 252147 313000) 0 nil])
([nil nil ((#("	      <choose>
		<if variable=\"page\">
		  <text prefix=\", pp.\" variable=\"page\"/>
		</if>
" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-tag-delimiter)) 15 18 (fontified t) 18 19 (fontified t face (nxml-tag-delimiter)) 19 20 (fontified t face (nxml-element-local-name)) 20 21 (fontified t face (nxml-element-local-name)) 21 22 (fontified t) 22 23 (fontified t face (nxml-attribute-local-name)) 23 24 (fontified t face (nxml-attribute-local-name)) 24 25 (fontified t face (nxml-attribute-local-name)) 25 26 (fontified t face (nxml-attribute-local-name)) 26 27 (fontified t face (nxml-attribute-local-name)) 27 28 (fontified t face (nxml-attribute-local-name)) 28 29 (fontified t face (nxml-attribute-local-name)) 29 30 (fontified t face (nxml-attribute-local-name)) 30 31 (fontified t) 31 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t face font-lock-string-face) 34 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face (nxml-tag-delimiter)) 38 43 (fontified t) 43 44 (fontified t face (nxml-tag-delimiter)) 44 45 (fontified t face (nxml-element-local-name)) 45 46 (fontified t face (nxml-element-local-name)) 46 47 (fontified t face (nxml-element-local-name)) 47 48 (fontified t face (nxml-element-local-name)) 48 49 (fontified t) 49 50 (fontified t face (nxml-attribute-local-name)) 50 51 (fontified t face (nxml-attribute-local-name)) 51 52 (fontified t face (nxml-attribute-local-name)) 52 53 (fontified t face (nxml-attribute-local-name)) 53 54 (fontified t face (nxml-attribute-local-name)) 54 55 (fontified t face (nxml-attribute-local-name)) 55 56 (fontified t) 56 57 (fontified t face font-lock-string-face) 57 58 (fontified t face font-lock-string-face) 58 59 (fontified t face font-lock-string-face) 59 60 (fontified t face font-lock-string-face) 60 61 (fontified t face font-lock-string-face) 61 62 (fontified t face font-lock-string-face) 62 63 (fontified t face font-lock-string-face) 63 64 (fontified t) 64 65 (fontified t face (nxml-attribute-local-name)) 65 66 (fontified t face (nxml-attribute-local-name)) 66 67 (fontified t face (nxml-attribute-local-name)) 67 68 (fontified t face (nxml-attribute-local-name)) 68 69 (fontified t face (nxml-attribute-local-name)) 69 70 (fontified t face (nxml-attribute-local-name)) 70 71 (fontified t face (nxml-attribute-local-name)) 71 72 (fontified t face (nxml-attribute-local-name)) 72 73 (fontified t) 73 74 (fontified t face font-lock-string-face) 74 75 (fontified t face font-lock-string-face) 75 76 (fontified t face font-lock-string-face) 76 77 (fontified t face font-lock-string-face) 77 78 (fontified t face font-lock-string-face) 78 79 (fontified t face font-lock-string-face) 79 80 (fontified t face (nxml-tag-slash)) 80 81 (fontified t face (nxml-tag-delimiter)) 81 82 (fontified t) 82 84 (fontified t) 84 85 (fontified t face (nxml-tag-delimiter)) 85 86 (fontified t face (nxml-tag-slash)) 86 87 (fontified t face (nxml-element-local-name)) 87 88 (fontified t face (nxml-element-local-name)) 88 89 (fontified t face (nxml-tag-delimiter)) 89 90 (rear-nonsticky t fontified t)) . 3417) (undo-tree-id5703 . -90) (undo-tree-id5704 . -90) (undo-tree-id5705 . -90) (undo-tree-id5706 . -90) (undo-tree-id5707 . -90) (undo-tree-id5708 . -90) (undo-tree-id5709 . -90) (undo-tree-id5710 . -90) (undo-tree-id5711 . -90) (undo-tree-id5712 . -15) (undo-tree-id5713 . -15) (undo-tree-id5714 . -32) (undo-tree-id5715 . -32) (undo-tree-id5716 . -32) (undo-tree-id5717 . -32) (undo-tree-id5718 . -55) (undo-tree-id5719 . -55) (undo-tree-id5720 . -55) (undo-tree-id5721 . -55) (undo-tree-id5722 . -90) (undo-tree-id5723 . -16) (undo-tree-id5724 . -16) (undo-tree-id5725 . -39) (undo-tree-id5726 . -82) (undo-tree-id5727 . -90) (undo-tree-id5728 . -90) (undo-tree-id5729 . -90) 3507) nil (25414 32013 252144 32000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3422) (3422 . 3423) (#("	" 0 1 (fontified nil)) . 3422) (undo-tree-id5702 . 1) (3418 . 3422) 3417) nil (25414 32013 252134 278000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -3434) (undo-tree-id5701 . -1) 3435) nil (25414 32013 252132 543000) 0 nil])
([nil nil ((3434 . 3435)) nil (25414 32013 252115 21000) 0 nil])
([nil nil ((3436 . 3437)) nil (25414 32013 252114 856000) 0 nil])
([nil nil ((3608 . 3616)) nil (25414 32013 252114 623000) 0 nil])
([nil nil ((nil fontified nil 3705 . 3706) (nil fontified nil 3704 . 3705) (nil fontified nil 3703 . 3704) (nil fontified nil 3702 . 3703) (nil fontified nil 3701 . 3702) (nil fontified nil 3700 . 3701) (nil fontified nil 3698 . 3700) (nil fontified nil 3697 . 3698) (nil fontified nil 3696 . 3697) (nil fontified nil 3695 . 3696) (nil fontified nil 3694 . 3695) (nil fontified nil 3693 . 3694) (nil fontified nil 3692 . 3693) (nil fontified nil 3691 . 3692) (nil fontified nil 3690 . 3691) (nil fontified nil 3689 . 3690) (nil fontified nil 3688 . 3689) (nil fontified nil 3687 . 3688) (nil fontified nil 3686 . 3687) (nil fontified nil 3685 . 3686) (nil fontified nil 3684 . 3685) (nil fontified nil 3683 . 3684) (nil fontified nil 3682 . 3683) (nil fontified nil 3681 . 3682) (nil fontified nil 3680 . 3681) (nil fontified nil 3679 . 3680) (nil fontified nil 3678 . 3679) (nil fontified nil 3677 . 3678) (nil fontified nil 3676 . 3677) (nil fontified nil 3675 . 3676) (nil fontified nil 3674 . 3675) (nil fontified nil 3673 . 3674) (nil fontified nil 3672 . 3673) (nil fontified nil 3671 . 3672) (nil fontified nil 3670 . 3671) (nil fontified nil 3669 . 3670) (nil fontified nil 3668 . 3669) (nil fontified nil 3667 . 3668) (nil fontified nil 3666 . 3667) (nil fontified nil 3665 . 3666) (nil fontified nil 3664 . 3665) (nil fontified nil 3663 . 3664) (nil fontified nil 3662 . 3663) (nil fontified nil 3661 . 3662) (nil fontified nil 3660 . 3661) (nil fontified nil 3659 . 3660) (nil fontified nil 3654 . 3659) (nil fontified nil 3653 . 3654) (nil fontified nil 3652 . 3653) (nil fontified nil 3651 . 3652) (nil fontified nil 3650 . 3651) (nil fontified nil 3649 . 3650) (nil fontified nil 3648 . 3649) (nil fontified nil 3647 . 3648) (nil fontified nil 3646 . 3647) (nil fontified nil 3645 . 3646) (nil fontified nil 3644 . 3645) (nil fontified nil 3643 . 3644) (nil fontified nil 3642 . 3643) (nil fontified nil 3641 . 3642) (nil fontified nil 3640 . 3641) (nil fontified nil 3639 . 3640) (nil fontified nil 3638 . 3639) (nil fontified nil 3637 . 3638) (nil fontified nil 3636 . 3637) (nil fontified nil 3635 . 3636) (nil fontified nil 3634 . 3635) (nil fontified nil 3631 . 3634) (nil fontified nil 3630 . 3631) (nil fontified nil 3629 . 3630) (nil fontified nil 3628 . 3629) (nil fontified nil 3627 . 3628) (nil fontified nil 3626 . 3627) (nil fontified nil 3625 . 3626) (nil fontified nil 3624 . 3625) (nil fontified nil 3623 . 3624) (nil fontified nil 3617 . 3623) (nil fontified nil 3616 . 3617) (3616 . 3706)) nil (25414 32013 252113 689000) 0 nil])
([nil nil ((#("	      " 0 1 (fontified t) 1 7 (fontified t)) . -3616) 3609) nil (25414 32013 252108 679000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3699) (undo-tree-id5700 . -1)) nil (25414 32013 252108 233000) 0 nil])
([nil nil ((#("	      <group delimiter=\" \">" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-element-local-name)) 9 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t) 14 23 (fontified t face (nxml-attribute-local-name)) 23 24 (fontified t) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face (nxml-tag-delimiter))) . 3699) (undo-tree-id5690 . -28) (undo-tree-id5691 . -28) (undo-tree-id5692 . -28) (undo-tree-id5693 . -28) (undo-tree-id5694 . -28) (undo-tree-id5695 . -28) (undo-tree-id5696 . -28) (undo-tree-id5697 . -28) (undo-tree-id5698 . 28) (undo-tree-id5699 . -28)) nil (25414 32013 252107 422000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3699) (undo-tree-id5688 . 1) (undo-tree-id5689 . -1)) nil (25414 32013 252087 726000) 0 nil])
([nil nil ((#("		<label variable=\"page\" form=\"short\"/>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t) 9 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t) 18 19 (fontified t face font-lock-string-face) 19 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t) 25 29 (fontified t face (nxml-attribute-local-name)) 29 30 (fontified t) 30 31 (fontified t face font-lock-string-face) 31 36 (fontified t face font-lock-string-face) 36 37 (fontified t face font-lock-string-face) 37 38 (fontified t face (nxml-tag-slash)) 38 39 (fontified t face (nxml-tag-delimiter))) . 3699) (undo-tree-id5686 . 39) (undo-tree-id5687 . -39)) nil (25414 32013 252086 644000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3699) (undo-tree-id5684 . 1) (undo-tree-id5685 . -1)) nil (25414 32013 252085 753000) 0 nil])
([nil nil ((#("		<text variable=\"page\"/>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 5 (fontified t face (nxml-element-local-name)) 5 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face (nxml-tag-slash)) 24 25 (fontified t face (nxml-tag-delimiter))) . 3699) (undo-tree-id5682 . 25) (undo-tree-id5683 . -25)) nil (25414 32013 252084 823000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3699) (undo-tree-id5679 . -1) (undo-tree-id5680 . 1) (undo-tree-id5681 . -1)) nil (25414 32013 252083 703000) 0 nil])
([nil nil ((#("	      </group>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-tag-delimiter))) . 3699) (undo-tree-id5676 . -15) (undo-tree-id5677 . 15) (undo-tree-id5678 . -15)) nil (25414 32013 252067 270000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 3699) (undo-tree-id5673 . -1) (undo-tree-id5674 . 1) (undo-tree-id5675 . -1)) nil (25414 32013 252065 966000) 0 nil])
([nil nil ((#("	    </group>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-tag-slash)) 7 10 (fontified t face (nxml-element-local-name)) 10 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 3699) (undo-tree-id5668 . 8) (undo-tree-id5669 . -7) (undo-tree-id5670 . -5) (undo-tree-id5671 . -13) (undo-tree-id5672 . -13)) nil (25414 32013 252064 454000) 0 nil])
([nil nil ((3699 . 3701)) nil (25414 32013 252062 732000) 0 nil])
([nil nil ((3701 . 3702)) nil (25414 32013 252062 380000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3706) (3706 . 3707) (#("	" 0 1 (fontified nil)) . 3706) (undo-tree-id5658 . -1) (undo-tree-id5659 . -1) (undo-tree-id5660 . -1) (undo-tree-id5661 . -1) (undo-tree-id5662 . -1) (undo-tree-id5663 . -1) (undo-tree-id5664 . -1) (undo-tree-id5665 . -1) (undo-tree-id5666 . -1) (undo-tree-id5667 . -1) (3700 . 3706) (3702 . 3703)) nil (25414 32013 252061 813000) 0 nil])
([nil nil ((3708 . 3715)) nil (25414 32013 252049 32000) 0 nil])
([nil nil ((3721 . 3723) 3732) nil (25414 32013 252048 708000) 0 nil])
([nil nil ((3754 . 3756) 3767) nil (25414 32013 252048 97000) 0 nil])
([nil nil ((3788 . 3790) 3803) nil (25414 32013 252047 683000) 0 nil])
([nil nil ((3819 . 3821) 3827) nil (25414 32013 252047 357000) 0 nil])
([nil nil ((3829 . 3835)) nil (25414 32013 252030 714000) 0 nil])
([nil nil ((3835 . 3836)) nil (25414 32013 252030 379000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -3833) (undo-tree-id5650 . -2) (undo-tree-id5651 . -2) (undo-tree-id5652 . -2) (undo-tree-id5653 . -2) (undo-tree-id5654 . -2) (undo-tree-id5655 . -2) (undo-tree-id5656 . -2) (undo-tree-id5657 . -2) (3836 . 3837)) nil (25414 32013 252029 899000) 0 nil])
([nil nil ((3835 . 3841)) nil (25414 32013 252027 514000) 0 nil])
([nil nil ((3833 . 3835) 3841) nil (25414 32013 252027 279000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face (nxml-text))) . -3842) (undo-tree-id5636 . -1) (undo-tree-id5637 . -1) (undo-tree-id5638 . -1) (undo-tree-id5639 . -1) (undo-tree-id5640 . -1) (undo-tree-id5641 . -1) (undo-tree-id5642 . -1) (undo-tree-id5643 . -1) (undo-tree-id5644 . -1) (undo-tree-id5645 . -1) (undo-tree-id5646 . -1) (undo-tree-id5647 . -1) (undo-tree-id5648 . -1) (undo-tree-id5649 . -1) 3843) nil (25414 32013 252026 598000) 0 nil])
([nil nil ((3842 . 3843)) nil (25414 32013 252021 222000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -3833) (undo-tree-id5635 . -2) 3843) nil (25414 32013 252020 755000) 0 nil])
([nil nil ((3421 . 3426) (3394 . 3399) (#(" " 0 1 (fontified t)) . 3394) (3416 . 3417)) nil (25414 32013 252020 136000) 0 nil])
([nil nil ((3426 . 3430)) nil (25414 32013 252019 516000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t face (nxml-element-local-name))) . -3429) (undo-tree-id5628 . -1) (undo-tree-id5629 . -1) (undo-tree-id5630 . -1) (undo-tree-id5631 . -1) (undo-tree-id5632 . -1) (undo-tree-id5633 . -1) (undo-tree-id5634 . -1) 3430) nil (25414 32013 252018 946000) 0 nil])
([nil nil ((3429 . 3447)) nil (25414 32013 252016 226000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t)) . -3446) (undo-tree-id5615 . -1) (undo-tree-id5616 . -1) (undo-tree-id5617 . -1) (undo-tree-id5618 . -1) (undo-tree-id5619 . -1) (undo-tree-id5620 . -1) (undo-tree-id5621 . -1) (undo-tree-id5622 . -1) (undo-tree-id5623 . -1) (undo-tree-id5624 . -1) (undo-tree-id5625 . -1) (undo-tree-id5626 . -1) (undo-tree-id5627 . -1) 3447) nil (25414 32013 252015 521000) 0 nil])
([nil nil ((3446 . 3447)) nil (25414 32013 252010 417000) 0 nil])
([nil nil ((3453 . 3455) 3471) nil (25414 32013 252010 65000) 0 nil])
([nil nil ((3479 . 3481) 3499) nil (25414 32013 252009 548000) 0 nil])
([nil nil ((#("	      <group delimiter=\". \">" 0 3 (fontified t) 3 5 (fontified t) 5 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t) 14 23 (fontified t face (nxml-attribute-local-name)) 23 24 (fontified t) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face (nxml-tag-delimiter))) . 3474) (undo-tree-id5604 . -27) (undo-tree-id5605 . -27) (undo-tree-id5606 . -27) (undo-tree-id5607 . -27) (undo-tree-id5608 . -27) (undo-tree-id5609 . -27) (undo-tree-id5610 . -27) (undo-tree-id5611 . -27) (undo-tree-id5612 . -27) (undo-tree-id5613 . -27) (undo-tree-id5614 . -29)) nil (25414 32013 252008 887000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3474) (undo-tree-id5602 . 1) (undo-tree-id5603 . -1)) nil (25414 32013 252005 53000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face (nxml-attribute-local-name))) . -3439) (undo-tree-id5598 . -1) (undo-tree-id5599 . -1) (undo-tree-id5600 . -1) (undo-tree-id5601 . -1) 3440) nil (25414 32013 252003 666000) 0 nil])
([nil nil ((3472 . 3480)) nil (25414 32013 252001 922000) 0 nil])
([nil nil ((3480 . 3481)) nil (25414 32013 252001 636000) 0 nil])
([nil nil ((3481 . 3502)) nil (25414 32013 252001 321000) 0 nil])
([nil nil ((3504 . 3505) (#("      " 0 6 (fontified t)) . 3504) 3532) nil (25414 32013 252000 722000) 0 nil])
([nil nil ((3579 . 3580) (#("      " 0 6 (fontified t)) . 3579) 3607) nil (25414 32013 252000 164000) 0 nil])
([nil nil ((3604 . 3605) (#("      " 0 6 (fontified t)) . 3604) 3632) nil (25414 32013 251999 729000) 0 nil])
([nil nil ((3629 . 3630) (#("      " 0 6 (fontified t)) . 3629) (undo-tree-id5596 . -6) (undo-tree-id5597 . -6) 3643) nil (25414 32013 251985 272000) 0 nil])
([nil nil ((3641 . 3643) 3649) nil (25414 32013 251983 180000) 0 nil])
([nil nil ((3668 . 3670) 3676) nil (25414 32013 251982 733000) 0 nil])
([nil nil ((3711 . 3713) 3716) nil (25414 32013 251982 244000) 0 nil])
([nil nil ((3720 . 3721) (#("      " 0 6 (fontified t)) . 3720) (undo-tree-id5586 . -6) (undo-tree-id5587 . -6) (undo-tree-id5588 . -6) (undo-tree-id5589 . -6) (undo-tree-id5590 . -6) (undo-tree-id5591 . -6) (undo-tree-id5592 . -6) (undo-tree-id5593 . -6) (undo-tree-id5594 . -6) (undo-tree-id5595 . -6) 3735) nil (25414 32013 251981 848000) 0 nil])
([nil nil ((3730 . 3733)) nil (25414 32013 251978 240000) 0 nil])
([nil nil ((3733 . 3734)) nil (25414 32013 251977 948000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil face (nxml-tag-delimiter))) . -3738) (3738 . 3739) (#("	" 0 1 (fontified nil face (nxml-tag-delimiter))) . 3738) (undo-tree-id5580 . -1) (undo-tree-id5581 . -1) (undo-tree-id5582 . -1) (undo-tree-id5583 . -1) (undo-tree-id5584 . -1) (undo-tree-id5585 . -1) (3732 . 3738) (3734 . 3735)) nil (25414 32013 251977 177000) 0 nil])
([nil nil ((3740 . 3748)) nil (25414 32013 251974 568000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t face (nxml-text))) . -3746) (undo-tree-id5553 . -1) (undo-tree-id5554 . -1) (undo-tree-id5555 . -1) (undo-tree-id5556 . -1) (undo-tree-id5557 . -1) (undo-tree-id5558 . -1) (undo-tree-id5559 . -1) (undo-tree-id5560 . -1) (undo-tree-id5561 . -1) (undo-tree-id5562 . -1) (undo-tree-id5563 . -1) (undo-tree-id5564 . -1) (undo-tree-id5565 . -1) (undo-tree-id5566 . -1) (undo-tree-id5567 . -1) (undo-tree-id5568 . -1) (#(":" 0 1 (fontified t face (nxml-text))) . -3747) (undo-tree-id5569 . -1) (undo-tree-id5570 . -1) (undo-tree-id5571 . -1) (undo-tree-id5572 . -1) (undo-tree-id5573 . -1) (undo-tree-id5574 . -1) (undo-tree-id5575 . -1) (undo-tree-id5576 . -1) (undo-tree-id5577 . -1) (undo-tree-id5578 . -1) (undo-tree-id5579 . -1) 3748) nil (25414 32013 251973 669000) 0 nil])
([nil nil ((3746 . 3754)) nil (25414 32013 251962 228000) 0 nil])
([nil nil ((3754 . 3755)) nil (25414 32013 251961 756000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t face (nxml-tag-delimiter))) . -3752) (undo-tree-id5549 . -2) (undo-tree-id5550 . -2) (undo-tree-id5551 . -2) (undo-tree-id5552 . -2) (3755 . 3756)) nil (25414 32013 251961 193000) 0 nil])
([nil nil ((3754 . 3760)) nil (25414 32013 251959 630000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t face (nxml-element-local-name))) . -3759) (undo-tree-id5542 . -1) (undo-tree-id5543 . -1) (undo-tree-id5544 . -1) (undo-tree-id5545 . -1) (undo-tree-id5546 . -1) (undo-tree-id5547 . -1) (undo-tree-id5548 . -1) 3760) nil (25414 32013 251958 645000) 0 nil])
([nil nil ((3759 . 3760)) nil (25414 32013 251955 592000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3766) 3774) nil (25414 32013 251955 15000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3797) 3803) nil (25414 32013 251954 595000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3829) 3833) nil (25414 32013 251954 127000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3858) 3862) nil (25414 32013 251937 330000) 0 nil])
([nil nil ((#("	  </group>" 0 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 5 (fontified t face (nxml-tag-slash)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 3867) (undo-tree-id5469 . -3) (undo-tree-id5470 . -3) (undo-tree-id5471 . -3) (undo-tree-id5472 . -3) (undo-tree-id5473 . -3) (undo-tree-id5474 . -3) (undo-tree-id5475 . -3) (undo-tree-id5476 . -3) (undo-tree-id5477 . -4) (undo-tree-id5478 . -4) (undo-tree-id5479 . -5) (undo-tree-id5480 . -5) (undo-tree-id5481 . -5) (undo-tree-id5482 . -5) (undo-tree-id5483 . -6) (undo-tree-id5484 . -3) (undo-tree-id5485 . -5) (undo-tree-id5486 . -6) (undo-tree-id5487 . -7) (undo-tree-id5488 . -3) (undo-tree-id5489 . -6) (undo-tree-id5490 . -7) (undo-tree-id5491 . -8) (undo-tree-id5492 . -3) (undo-tree-id5493 . -7) (undo-tree-id5494 . -8) (undo-tree-id5495 . -9) (undo-tree-id5496 . -3) (undo-tree-id5497 . -8) (undo-tree-id5498 . -9) (undo-tree-id5499 . -10) (undo-tree-id5500 . -3) (undo-tree-id5501 . -9) (undo-tree-id5502 . -10) (undo-tree-id5503 . -10) (undo-tree-id5504 . -3) (undo-tree-id5505 . -10) (undo-tree-id5506 . -10) (undo-tree-id5507 . -10) (undo-tree-id5508 . -10) (undo-tree-id5509 . -10) (undo-tree-id5510 . -10) (undo-tree-id5511 . -10) (undo-tree-id5512 . -10) (undo-tree-id5513 . -10) (undo-tree-id5514 . -10) (undo-tree-id5515 . -10) (undo-tree-id5516 . -10) (undo-tree-id5517 . -10) (undo-tree-id5518 . -10) (undo-tree-id5519 . -10) (undo-tree-id5520 . -10) (undo-tree-id5521 . -10) (undo-tree-id5522 . -10) (undo-tree-id5523 . -11) (undo-tree-id5524 . -3) (undo-tree-id5525 . -10) (undo-tree-id5526 . -11) (undo-tree-id5527 . -11) (undo-tree-id5528 . -11) (undo-tree-id5529 . -11) (undo-tree-id5530 . -11) (undo-tree-id5531 . -11) (undo-tree-id5532 . -11) (undo-tree-id5533 . -11) (undo-tree-id5534 . -11) (undo-tree-id5535 . -11) (undo-tree-id5536 . -11) (undo-tree-id5537 . 6) (undo-tree-id5538 . -10) (undo-tree-id5539 . -3) (undo-tree-id5540 . -11) (undo-tree-id5541 . -11)) nil (25414 32013 251936 107000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3867) (undo-tree-id5467 . 1) (undo-tree-id5468 . -1)) nil (25414 32013 251886 36000) 0 nil])
([nil nil ((#("	<!-- Journal articles -->
	<else-if type=\"article article-journal article-magazine\" match=\"any\">
	  <group delimiter=\". \">
	    <text variable=\"title\" text-case=\"title\" font-style=\"italic\"/>
	    <text variable=\"container-title\" form=\"short\"
		  text-case=\"title\"/>
	    <group delimiter=\"\">
	      <text variable=\"volume\" font-weight=\"bold\"/>
	      <choose>
		<if variable=\"number\">
		  <text prefix=\"(\" variable=\"number\" suffix=\")\"/>
		</if>
	      </choose>
	      <choose>
		<if variable=\"page\">
		  <text prefix=\", pp.\" variable=\"page\"/>
		</if>
	      </choose>
	    </group>
	    <text macro=\"references\"/>
	    <text macro=\"published\"/>
	  </group>
	</else-if>

" 0 1 (fontified t) 1 2 (syntax-table (2097163) fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-delimiter-face) 3 4 (fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-delimiter-face) 23 24 (fontified t face font-lock-comment-delimiter-face) 24 25 (fontified t face font-lock-comment-delimiter-face) 25 26 (syntax-table (2097164) fontified t face font-lock-comment-delimiter-face) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t face (nxml-tag-delimiter)) 29 30 (fontified t face (nxml-element-local-name)) 30 33 (fontified t face (nxml-element-local-name)) 33 34 (fontified t face (nxml-element-local-name)) 34 35 (fontified t face (nxml-element-local-name)) 35 36 (fontified t face (nxml-element-local-name)) 36 37 (fontified t) 37 38 (fontified t face (nxml-attribute-local-name)) 38 39 (fontified t face (nxml-attribute-local-name)) 39 40 (fontified t face (nxml-attribute-local-name)) 40 41 (fontified t face (nxml-attribute-local-name)) 41 42 (fontified t) 42 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t face font-lock-string-face) 48 49 (fontified t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 51 (fontified t face font-lock-string-face) 51 52 (fontified t face font-lock-string-face) 52 53 (fontified t face font-lock-string-face) 53 54 (fontified t face font-lock-string-face) 54 55 (fontified t face font-lock-string-face) 55 56 (fontified t face font-lock-string-face) 56 57 (fontified t face font-lock-string-face) 57 58 (fontified t face font-lock-string-face) 58 59 (fontified t face font-lock-string-face) 59 60 (fontified t face font-lock-string-face) 60 61 (fontified t face font-lock-string-face) 61 62 (fontified t face font-lock-string-face) 62 63 (fontified t face font-lock-string-face) 63 64 (fontified t face font-lock-string-face) 64 65 (fontified t face font-lock-string-face) 65 66 (fontified t face font-lock-string-face) 66 67 (fontified t face font-lock-string-face) 67 68 (fontified t face font-lock-string-face) 68 69 (fontified t face font-lock-string-face) 69 70 (fontified t face font-lock-string-face) 70 71 (fontified t face font-lock-string-face) 71 72 (fontified t face font-lock-string-face) 72 73 (fontified t face font-lock-string-face) 73 74 (fontified t face font-lock-string-face) 74 75 (fontified t face font-lock-string-face) 75 76 (fontified t face font-lock-string-face) 76 77 (fontified t face font-lock-string-face) 77 78 (fontified t face font-lock-string-face) 78 79 (fontified t face font-lock-string-face) 79 80 (fontified t face font-lock-string-face) 80 81 (fontified t face font-lock-string-face) 81 82 (fontified t face font-lock-string-face) 82 83 (fontified t face font-lock-string-face) 83 84 (fontified t face font-lock-string-face) 84 85 (fontified t) 85 86 (fontified t face (nxml-attribute-local-name)) 86 87 (fontified t face (nxml-attribute-local-name)) 87 88 (fontified t face (nxml-attribute-local-name)) 88 89 (fontified t face (nxml-attribute-local-name)) 89 90 (fontified t face (nxml-attribute-local-name)) 90 91 (fontified t) 91 92 (fontified t face font-lock-string-face) 92 93 (fontified t face font-lock-string-face) 93 94 (fontified t face font-lock-string-face) 94 95 (fontified t face font-lock-string-face) 95 96 (fontified t face font-lock-string-face) 96 97 (fontified t face (nxml-tag-delimiter)) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 101 (fontified t) 101 102 (fontified t face (nxml-tag-delimiter)) 102 107 (fontified t face (nxml-element-local-name)) 107 108 (fontified t) 108 109 (fontified t face (nxml-attribute-local-name)) 109 115 (fontified t face (nxml-attribute-local-name)) 115 117 (fontified t face (nxml-attribute-local-name)) 117 118 (fontified t) 118 119 (fontified t face font-lock-string-face) 119 120 (fontified t face font-lock-string-face) 120 121 (fontified t face font-lock-string-face) 121 122 (fontified t face font-lock-string-face) 122 123 (fontified t face (nxml-tag-delimiter)) 123 124 (fontified t) 124 129 (fontified t) 129 130 (fontified t face (nxml-tag-delimiter)) 130 134 (fontified t face (nxml-element-local-name)) 134 135 (fontified t) 135 143 (fontified t face (nxml-attribute-local-name)) 143 144 (fontified t) 144 147 (fontified t face font-lock-string-face) 147 149 (fontified t face font-lock-string-face) 149 151 (fontified t face font-lock-string-face) 151 152 (fontified t) 152 161 (fontified t face (nxml-attribute-local-name)) 161 162 (fontified t) 162 169 (fontified t face font-lock-string-face) 169 170 (fontified t) 170 171 (fontified t face (nxml-attribute-local-name)) 171 174 (fontified t face (nxml-attribute-local-name)) 174 180 (fontified t face (nxml-attribute-local-name)) 180 181 (fontified t) 181 182 (fontified t face font-lock-string-face) 182 189 (fontified t face font-lock-string-face) 189 190 (fontified t face (nxml-tag-slash)) 190 191 (fontified t face (nxml-tag-delimiter)) 191 192 (fontified t) 192 193 (fontified t) 193 197 (fontified t) 197 198 (fontified t face (nxml-tag-delimiter)) 198 202 (fontified t face (nxml-element-local-name)) 202 203 (fontified t) 203 211 (fontified t face (nxml-attribute-local-name)) 211 212 (fontified t) 212 224 (fontified t face font-lock-string-face) 224 229 (fontified t face font-lock-string-face) 229 230 (fontified t) 230 234 (fontified t face (nxml-attribute-local-name)) 234 235 (fontified t) 235 236 (fontified t face font-lock-string-face) 236 240 (fontified t face font-lock-string-face) 240 242 (fontified t face font-lock-string-face) 242 247 (fontified t) 247 248 (fontified t face (nxml-attribute-local-name)) 248 256 (fontified t face (nxml-attribute-local-name)) 256 257 (fontified t) 257 264 (fontified t face font-lock-string-face) 264 265 (fontified t face (nxml-tag-slash)) 265 266 (fontified t face (nxml-tag-delimiter)) 266 267 (fontified t) 267 268 (fontified t) 268 272 (fontified t) 272 273 (fontified t face (nxml-tag-delimiter)) 273 278 (fontified t face (nxml-element-local-name)) 278 279 (fontified t) 279 280 (fontified t face (nxml-attribute-local-name)) 280 281 (fontified t face (nxml-attribute-local-name)) 281 282 (fontified t face (nxml-attribute-local-name)) 282 283 (fontified t face (nxml-attribute-local-name)) 283 284 (fontified t face (nxml-attribute-local-name)) 284 285 (fontified t face (nxml-attribute-local-name)) 285 286 (fontified t face (nxml-attribute-local-name)) 286 287 (fontified t face (nxml-attribute-local-name)) 287 288 (fontified t face (nxml-attribute-local-name)) 288 289 (fontified t) 289 290 (fontified t face font-lock-string-face) 290 291 (fontified t face font-lock-string-face) 291 292 (fontified t face (nxml-tag-delimiter)) 292 293 (fontified t) 293 294 (fontified t) 294 300 (fontified t) 300 301 (fontified t face (nxml-tag-delimiter)) 301 305 (fontified t face (nxml-element-local-name)) 305 306 (fontified t) 306 314 (fontified t face (nxml-attribute-local-name)) 314 315 (fontified t) 315 323 (fontified t face font-lock-string-face) 323 324 (fontified t) 324 328 (fontified t face (nxml-attribute-local-name)) 328 331 (fontified t face (nxml-attribute-local-name)) 331 332 (fontified t face (nxml-attribute-local-name)) 332 335 (fontified t face (nxml-attribute-local-name)) 335 336 (fontified t) 336 337 (fontified t face font-lock-string-face) 337 341 (fontified t face font-lock-string-face) 341 342 (fontified t face font-lock-string-face) 342 343 (fontified t face (nxml-tag-slash)) 343 344 (fontified t face (nxml-tag-delimiter)) 344 345 (fontified t) 345 352 (fontified t) 352 353 (fontified t face (nxml-tag-delimiter)) 353 354 (fontified t face (nxml-element-local-name)) 354 355 (fontified t face (nxml-element-local-name)) 355 356 (fontified t face (nxml-element-local-name)) 356 357 (fontified t face (nxml-element-local-name)) 357 358 (fontified t face (nxml-element-local-name)) 358 359 (fontified t face (nxml-element-local-name)) 359 360 (fontified t face (nxml-tag-delimiter)) 360 361 (fontified t) 361 362 (fontified t) 362 363 (fontified t) 363 364 (fontified t face (nxml-tag-delimiter)) 364 365 (fontified t face (nxml-element-local-name)) 365 366 (fontified t face (nxml-element-local-name)) 366 367 (fontified t) 367 368 (fontified t face (nxml-attribute-local-name)) 368 369 (fontified t face (nxml-attribute-local-name)) 369 370 (fontified t face (nxml-attribute-local-name)) 370 371 (fontified t face (nxml-attribute-local-name)) 371 372 (fontified t face (nxml-attribute-local-name)) 372 373 (fontified t face (nxml-attribute-local-name)) 373 374 (fontified t face (nxml-attribute-local-name)) 374 375 (fontified t face (nxml-attribute-local-name)) 375 376 (fontified t) 376 377 (fontified t face font-lock-string-face) 377 378 (fontified t face font-lock-string-face) 378 379 (fontified t face font-lock-string-face) 379 380 (fontified t face font-lock-string-face) 380 381 (fontified t face font-lock-string-face) 381 382 (fontified t face font-lock-string-face) 382 383 (fontified t face font-lock-string-face) 383 384 (fontified t face font-lock-string-face) 384 385 (fontified t face (nxml-tag-delimiter)) 385 390 (fontified t) 390 391 (fontified t face (nxml-tag-delimiter)) 391 392 (fontified t face (nxml-element-local-name)) 392 393 (fontified t face (nxml-element-local-name)) 393 394 (fontified t face (nxml-element-local-name)) 394 395 (fontified t face (nxml-element-local-name)) 395 396 (fontified t) 396 397 (fontified t face (nxml-attribute-local-name)) 397 398 (fontified t face (nxml-attribute-local-name)) 398 399 (fontified t face (nxml-attribute-local-name)) 399 400 (fontified t face (nxml-attribute-local-name)) 400 401 (fontified t face (nxml-attribute-local-name)) 401 402 (fontified t face (nxml-attribute-local-name)) 402 403 (fontified t) 403 404 (fontified t face font-lock-string-face) 404 405 (fontified t face font-lock-string-face) 405 406 (fontified t face font-lock-string-face) 406 407 (fontified t) 407 408 (fontified t face (nxml-attribute-local-name)) 408 409 (fontified t face (nxml-attribute-local-name)) 409 410 (fontified t face (nxml-attribute-local-name)) 410 411 (fontified t face (nxml-attribute-local-name)) 411 412 (fontified t face (nxml-attribute-local-name)) 412 413 (fontified t face (nxml-attribute-local-name)) 413 414 (fontified t face (nxml-attribute-local-name)) 414 415 (fontified t face (nxml-attribute-local-name)) 415 416 (fontified t) 416 417 (fontified t face font-lock-string-face) 417 418 (fontified t face font-lock-string-face) 418 419 (fontified t face font-lock-string-face) 419 420 (fontified t face font-lock-string-face) 420 421 (fontified t face font-lock-string-face) 421 422 (fontified t face font-lock-string-face) 422 423 (fontified t face font-lock-string-face) 423 424 (fontified t face font-lock-string-face) 424 425 (fontified t) 425 426 (fontified t face (nxml-attribute-local-name)) 426 427 (fontified t face (nxml-attribute-local-name)) 427 428 (fontified t face (nxml-attribute-local-name)) 428 429 (fontified t face (nxml-attribute-local-name)) 429 430 (fontified t face (nxml-attribute-local-name)) 430 431 (fontified t face (nxml-attribute-local-name)) 431 432 (fontified t) 432 433 (fontified t face font-lock-string-face) 433 434 (fontified t face font-lock-string-face) 434 435 (fontified t face font-lock-string-face) 435 436 (fontified t face (nxml-tag-slash)) 436 437 (fontified t face (nxml-tag-delimiter)) 437 440 (fontified t) 440 441 (fontified t face (nxml-tag-delimiter)) 441 442 (fontified t face (nxml-tag-slash)) 442 443 (fontified t face (nxml-element-local-name)) 443 444 (fontified t face (nxml-element-local-name)) 444 445 (fontified t face (nxml-tag-delimiter)) 445 446 (fontified t) 446 447 (fontified t) 447 453 (fontified t) 453 454 (fontified t face (nxml-tag-delimiter)) 454 455 (fontified t face (nxml-tag-slash)) 455 456 (fontified t face (nxml-element-local-name)) 456 457 (fontified t face (nxml-element-local-name)) 457 458 (fontified t face (nxml-element-local-name)) 458 459 (fontified t face (nxml-element-local-name)) 459 460 (fontified t face (nxml-element-local-name)) 460 461 (fontified t face (nxml-element-local-name)) 461 462 (fontified t face (nxml-tag-delimiter)) 462 463 (fontified t) 463 464 (fontified t) 464 470 (fontified t) 470 471 (fontified t face (nxml-tag-delimiter)) 471 472 (fontified t face (nxml-element-local-name)) 472 473 (fontified t face (nxml-element-local-name)) 473 474 (fontified t face (nxml-element-local-name)) 474 475 (fontified t face (nxml-element-local-name)) 475 476 (fontified t face (nxml-element-local-name)) 476 477 (fontified t face (nxml-element-local-name)) 477 478 (fontified t face (nxml-tag-delimiter)) 478 481 (fontified t) 481 482 (fontified t face (nxml-tag-delimiter)) 482 483 (fontified t face (nxml-element-local-name)) 483 484 (fontified t face (nxml-element-local-name)) 484 485 (fontified t) 485 486 (fontified t face (nxml-attribute-local-name)) 486 487 (fontified t face (nxml-attribute-local-name)) 487 488 (fontified t face (nxml-attribute-local-name)) 488 489 (fontified t face (nxml-attribute-local-name)) 489 490 (fontified t face (nxml-attribute-local-name)) 490 491 (fontified t face (nxml-attribute-local-name)) 491 492 (fontified t face (nxml-attribute-local-name)) 492 493 (fontified t face (nxml-attribute-local-name)) 493 494 (fontified t) 494 495 (fontified t face font-lock-string-face) 495 496 (fontified t face font-lock-string-face) 496 497 (fontified t face font-lock-string-face) 497 498 (fontified t face font-lock-string-face) 498 499 (fontified t face font-lock-string-face) 499 500 (fontified t face font-lock-string-face) 500 501 (fontified t face (nxml-tag-delimiter)) 501 506 (fontified t) 506 507 (fontified t face (nxml-tag-delimiter)) 507 508 (fontified t face (nxml-element-local-name)) 508 509 (fontified t face (nxml-element-local-name)) 509 510 (fontified t face (nxml-element-local-name)) 510 511 (fontified t face (nxml-element-local-name)) 511 512 (fontified t) 512 513 (fontified t face (nxml-attribute-local-name)) 513 514 (fontified t face (nxml-attribute-local-name)) 514 515 (fontified t face (nxml-attribute-local-name)) 515 516 (fontified t face (nxml-attribute-local-name)) 516 517 (fontified t face (nxml-attribute-local-name)) 517 518 (fontified t face (nxml-attribute-local-name)) 518 519 (fontified t) 519 520 (fontified t face font-lock-string-face) 520 521 (fontified t face font-lock-string-face) 521 522 (fontified t face font-lock-string-face) 522 523 (fontified t face font-lock-string-face) 523 524 (fontified t face font-lock-string-face) 524 525 (fontified t face font-lock-string-face) 525 526 (fontified t face font-lock-string-face) 526 527 (fontified t) 527 528 (fontified t face (nxml-attribute-local-name)) 528 529 (fontified t face (nxml-attribute-local-name)) 529 530 (fontified t face (nxml-attribute-local-name)) 530 531 (fontified t face (nxml-attribute-local-name)) 531 532 (fontified t face (nxml-attribute-local-name)) 532 533 (fontified t face (nxml-attribute-local-name)) 533 534 (fontified t face (nxml-attribute-local-name)) 534 535 (fontified t face (nxml-attribute-local-name)) 535 536 (fontified t) 536 537 (fontified t face font-lock-string-face) 537 538 (fontified t face font-lock-string-face) 538 539 (fontified t face font-lock-string-face) 539 540 (fontified t face font-lock-string-face) 540 541 (fontified t face font-lock-string-face) 541 542 (fontified t face font-lock-string-face) 542 543 (fontified t face (nxml-tag-slash)) 543 544 (fontified t face (nxml-tag-delimiter)) 544 545 (fontified t) 545 546 (fontified t) 546 547 (fontified t) 547 548 (fontified t face (nxml-tag-delimiter)) 548 549 (fontified t face (nxml-tag-slash)) 549 550 (fontified t face (nxml-element-local-name)) 550 551 (fontified t face (nxml-element-local-name)) 551 552 (fontified t face (nxml-tag-delimiter)) 552 553 (fontified t) 553 554 (fontified t) 554 560 (fontified t) 560 561 (fontified t face (nxml-tag-delimiter)) 561 562 (fontified t face (nxml-tag-slash)) 562 568 (fontified t face (nxml-element-local-name)) 568 569 (fontified t face (nxml-tag-delimiter)) 569 575 (fontified t) 575 576 (fontified t face (nxml-tag-delimiter)) 576 577 (fontified t face (nxml-tag-slash)) 577 578 (fontified t face (nxml-element-local-name)) 578 579 (fontified t face (nxml-element-local-name)) 579 580 (fontified t face (nxml-element-local-name)) 580 581 (fontified t face (nxml-element-local-name)) 581 582 (fontified t face (nxml-element-local-name)) 582 583 (fontified t face (nxml-tag-delimiter)) 583 589 (fontified t) 589 590 (fontified t face (nxml-tag-delimiter)) 590 591 (fontified t face (nxml-element-local-name)) 591 592 (fontified t face (nxml-element-local-name)) 592 593 (fontified t face (nxml-element-local-name)) 593 594 (fontified t face (nxml-element-local-name)) 594 595 (fontified t) 595 596 (fontified t face (nxml-attribute-local-name)) 596 597 (fontified t face (nxml-attribute-local-name)) 597 598 (fontified t face (nxml-attribute-local-name)) 598 599 (fontified t face (nxml-attribute-local-name)) 599 600 (fontified t face (nxml-attribute-local-name)) 600 601 (fontified t) 601 602 (fontified t face font-lock-string-face) 602 603 (fontified t face font-lock-string-face) 603 604 (fontified t face font-lock-string-face) 604 605 (fontified t face font-lock-string-face) 605 606 (fontified t face font-lock-string-face) 606 607 (fontified t face font-lock-string-face) 607 608 (fontified t face font-lock-string-face) 608 609 (fontified t face font-lock-string-face) 609 610 (fontified t face font-lock-string-face) 610 611 (fontified t face font-lock-string-face) 611 612 (fontified t face font-lock-string-face) 612 613 (fontified t face font-lock-string-face) 613 614 (fontified t face (nxml-tag-slash)) 614 615 (fontified t face (nxml-tag-delimiter)) 615 616 (fontified t) 616 617 (fontified t) 617 621 (fontified t) 621 622 (fontified t face (nxml-tag-delimiter)) 622 626 (fontified t face (nxml-element-local-name)) 626 627 (fontified t) 627 631 (fontified t face (nxml-attribute-local-name)) 631 632 (fontified t face (nxml-attribute-local-name)) 632 633 (fontified t) 633 634 (fontified t face font-lock-string-face) 634 635 (fontified t face font-lock-string-face) 635 636 (fontified t face font-lock-string-face) 636 637 (fontified t face font-lock-string-face) 637 638 (fontified t face font-lock-string-face) 638 639 (fontified t face font-lock-string-face) 639 640 (fontified t face font-lock-string-face) 640 641 (fontified t face font-lock-string-face) 641 642 (fontified t face font-lock-string-face) 642 643 (fontified t face font-lock-string-face) 643 644 (fontified t face font-lock-string-face) 644 645 (fontified t face (nxml-tag-slash)) 645 646 (fontified t face (nxml-tag-delimiter)) 646 647 (fontified t) 647 648 (fontified t) 648 649 (fontified t) 649 650 (fontified t) 650 651 (fontified t face (nxml-tag-delimiter)) 651 652 (fontified t face (nxml-tag-slash)) 652 653 (fontified t face (nxml-element-local-name)) 653 657 (fontified t face (nxml-element-local-name)) 657 658 (fontified t face (nxml-tag-delimiter)) 658 659 (fontified t) 659 660 (fontified t) 660 661 (fontified t face (nxml-tag-delimiter)) 661 662 (fontified t face (nxml-tag-slash)) 662 665 (fontified t face (nxml-element-local-name)) 665 666 (fontified t face (nxml-element-local-name)) 666 667 (fontified t face (nxml-element-local-name)) 667 668 (fontified t face (nxml-element-local-name)) 668 669 (fontified t face (nxml-element-local-name)) 669 670 (fontified t face (nxml-tag-delimiter)) 670 671 (fontified t) 671 672 (fontified t)) . 4316) (undo-tree-id6087 . -96) (undo-tree-id6088 . -672) (undo-tree-id6089 . -458) (undo-tree-id6090 . -458) (undo-tree-id6091 . -27) (undo-tree-id6092 . -672) 4988 (t 25414 32013 265547 299000)) nil (25414 32103 66140 289000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3898 . 3899) (nil fontified nil 3898 . 3899) (nil fontified nil 3897 . 3898) (nil fontified nil 3896 . 3897) (nil fontified nil 3895 . 3896) (nil fontified nil 3894 . 3895) (nil fontified nil 3893 . 3894) (nil fontified nil 3892 . 3893) (nil fontified nil 3889 . 3892) (nil fontified nil 3888 . 3889) (nil fontified nil 3887 . 3888) (nil fontified nil 3886 . 3887) (nil fontified nil 3885 . 3886) (nil fontified nil 3884 . 3885) (nil fontified nil 3880 . 3884) (nil fontified nil 3879 . 3880) (nil fontified nil 3878 . 3879) (nil fontified nil 3877 . 3878) (nil fontified nil 3876 . 3877) (nil fontified nil 3875 . 3876) (nil fontified nil 3874 . 3875) (nil fontified nil 3873 . 3874) (nil fontified nil 3872 . 3873) (nil fontified nil 3871 . 3872) (nil fontified nil 3870 . 3871) (nil fontified nil 3869 . 3870) (nil fontified nil 3868 . 3869) (nil fontified nil 3867 . 3868) (nil fontified nil 3866 . 3867) (nil fontified nil 3865 . 3866) (nil fontified nil 3864 . 3865) (nil fontified nil 3863 . 3864) (nil fontified nil 3862 . 3863) (nil fontified nil 3861 . 3862) (nil fontified nil 3860 . 3861) (nil fontified nil 3859 . 3860) (nil fontified nil 3858 . 3859) (nil fontified nil 3854 . 3858) (nil fontified nil 3853 . 3854) (nil fontified nil 3849 . 3853) (nil fontified nil 3848 . 3849) (nil fontified nil 3844 . 3848) (nil fontified nil 3843 . 3844) (nil fontified nil 3842 . 3843) (nil fontified nil 3841 . 3842) (nil fontified nil 3840 . 3841) (nil fontified nil 3839 . 3840) (nil fontified nil 3838 . 3839) (nil fontified nil 3837 . 3838) (nil fontified nil 3836 . 3837) (nil fontified nil 3835 . 3836) (nil fontified nil 3834 . 3835) (nil fontified nil 3833 . 3834) (nil fontified nil 3832 . 3833) (nil fontified nil 3831 . 3832) (nil fontified nil 3830 . 3831) (nil fontified nil 3829 . 3830) (nil fontified nil 3828 . 3829) (nil fontified nil 3827 . 3828) (nil fontified nil 3826 . 3827) (nil fontified nil 3825 . 3826) (nil fontified nil 3824 . 3825) (nil fontified nil 3823 . 3824) (nil fontified nil 3822 . 3823) (nil fontified nil 3821 . 3822) (nil fontified nil 3820 . 3821) (nil fontified nil 3819 . 3820) (nil fontified nil 3818 . 3819) (nil fontified nil 3817 . 3818) (nil fontified nil 3816 . 3817) (nil fontified nil 3810 . 3816) (nil fontified nil 3809 . 3810) (nil fontified nil 3808 . 3809) (nil fontified nil 3807 . 3808) (nil fontified nil 3806 . 3807) (nil fontified nil 3805 . 3806) (nil fontified nil 3804 . 3805) (nil fontified nil 3803 . 3804) (nil fontified nil 3802 . 3803) (nil fontified nil 3796 . 3802) (nil fontified nil 3795 . 3796) (nil fontified nil 3789 . 3795) (nil fontified nil 3788 . 3789) (nil fontified nil 3787 . 3788) (nil fontified nil 3781 . 3787) (nil fontified nil 3780 . 3781) (nil fontified nil 3779 . 3780) (nil fontified nil 3778 . 3779) (nil fontified nil 3777 . 3778) (nil fontified nil 3776 . 3777) (nil fontified nil 3775 . 3776) (nil fontified nil 3774 . 3775) (nil fontified nil 3773 . 3774) (nil fontified nil 3772 . 3773) (nil fontified nil 3771 . 3772) (nil fontified nil 3770 . 3771) (nil fontified nil 3769 . 3770) (nil fontified nil 3768 . 3769) (nil fontified nil 3767 . 3768) (nil fontified nil 3766 . 3767) (nil fontified nil 3765 . 3766) (nil fontified nil 3764 . 3765) (nil fontified nil 3763 . 3764) (nil fontified nil 3762 . 3763) (nil fontified nil 3761 . 3762) (nil fontified nil 3760 . 3761) (nil fontified nil 3759 . 3760) (nil fontified nil 3758 . 3759) (nil fontified nil 3757 . 3758) (nil fontified nil 3756 . 3757) (nil fontified nil 3755 . 3756) (nil fontified nil 3754 . 3755) (nil fontified nil 3753 . 3754) (nil fontified nil 3752 . 3753) (nil fontified nil 3751 . 3752) (nil fontified nil 3750 . 3751) (nil fontified nil 3749 . 3750) (nil fontified nil 3748 . 3749) (nil fontified nil 3747 . 3748) (nil fontified nil 3746 . 3747) (nil fontified nil 3745 . 3746) (nil fontified nil 3744 . 3745) (nil fontified nil 3743 . 3744) (nil fontified nil 3742 . 3743) (nil fontified nil 3741 . 3742) (nil fontified nil 3740 . 3741) (nil fontified nil 3739 . 3740) (nil fontified nil 3738 . 3739) (nil fontified nil 3737 . 3738) (nil fontified nil 3736 . 3737) (nil fontified nil 3735 . 3736) (nil fontified nil 3734 . 3735) (nil fontified nil 3733 . 3734) (nil fontified nil 3728 . 3733) (nil fontified nil 3727 . 3728) (nil fontified nil 3726 . 3727) (nil fontified nil 3725 . 3726) (nil fontified nil 3724 . 3725) (nil fontified nil 3723 . 3724) (nil fontified nil 3722 . 3723) (nil fontified nil 3721 . 3722) (nil fontified nil 3720 . 3721) (nil fontified nil 3719 . 3720) (nil fontified nil 3718 . 3719) (nil fontified nil 3717 . 3718) (nil fontified nil 3716 . 3717) (nil fontified nil 3715 . 3716) (nil fontified nil 3714 . 3715) (nil fontified nil 3713 . 3714) (nil fontified nil 3712 . 3713) (nil fontified nil 3711 . 3712) (nil fontified nil 3710 . 3711) (nil fontified nil 3709 . 3710) (nil fontified nil 3708 . 3709) (nil fontified nil 3705 . 3708) (nil fontified nil 3704 . 3705) (nil fontified nil 3703 . 3704) (nil fontified nil 3702 . 3703) (nil fontified nil 3701 . 3702) (nil fontified nil 3700 . 3701) (nil fontified nil 3699 . 3700) (nil fontified nil 3698 . 3699) (nil fontified nil 3697 . 3698) (nil fontified nil 3691 . 3697) (nil fontified nil 3690 . 3691) (nil fontified nil 3689 . 3690) (nil fontified nil 3688 . 3689) (nil fontified nil 3687 . 3688) (nil fontified nil 3686 . 3687) (nil fontified nil 3685 . 3686) (nil fontified nil 3684 . 3685) (nil fontified nil 3683 . 3684) (nil fontified nil 3682 . 3683) (nil fontified nil 3681 . 3682) (nil fontified nil 3680 . 3681) (nil fontified nil 3674 . 3680) (nil fontified nil 3673 . 3674) (nil fontified nil 3672 . 3673) (nil fontified nil 3671 . 3672) (nil fontified nil 3670 . 3671) (nil fontified nil 3669 . 3670) (nil fontified nil 3668 . 3669) (nil fontified nil 3667 . 3668) (nil fontified nil 3664 . 3667) (nil fontified nil 3663 . 3664) (nil fontified nil 3662 . 3663) (nil fontified nil 3661 . 3662) (nil fontified nil 3660 . 3661) (nil fontified nil 3659 . 3660) (nil fontified nil 3658 . 3659) (nil fontified nil 3657 . 3658) (nil fontified nil 3656 . 3657) (nil fontified nil 3655 . 3656) (nil fontified nil 3654 . 3655) (nil fontified nil 3653 . 3654) (nil fontified nil 3652 . 3653) (nil fontified nil 3651 . 3652) (nil fontified nil 3650 . 3651) (nil fontified nil 3649 . 3650) (nil fontified nil 3648 . 3649) (nil fontified nil 3647 . 3648) (nil fontified nil 3646 . 3647) (nil fontified nil 3645 . 3646) (nil fontified nil 3644 . 3645) (nil fontified nil 3643 . 3644) (nil fontified nil 3642 . 3643) (nil fontified nil 3641 . 3642) (nil fontified nil 3640 . 3641) (nil fontified nil 3639 . 3640) (nil fontified nil 3638 . 3639) (nil fontified nil 3637 . 3638) (nil fontified nil 3636 . 3637) (nil fontified nil 3635 . 3636) (nil fontified nil 3634 . 3635) (nil fontified nil 3633 . 3634) (nil fontified nil 3632 . 3633) (nil fontified nil 3631 . 3632) (nil fontified nil 3630 . 3631) (nil fontified nil 3629 . 3630) (nil fontified nil 3628 . 3629) (nil fontified nil 3627 . 3628) (nil fontified nil 3626 . 3627) (nil fontified nil 3625 . 3626) (nil fontified nil 3624 . 3625) (nil fontified nil 3623 . 3624) (nil fontified nil 3622 . 3623) (nil fontified nil 3621 . 3622) (nil fontified nil 3620 . 3621) (nil fontified nil 3619 . 3620) (nil fontified nil 3618 . 3619) (nil fontified nil 3617 . 3618) (nil fontified nil 3612 . 3617) (nil fontified nil 3611 . 3612) (nil fontified nil 3610 . 3611) (nil fontified nil 3609 . 3610) (nil fontified nil 3608 . 3609) (nil fontified nil 3607 . 3608) (nil fontified nil 3606 . 3607) (nil fontified nil 3605 . 3606) (nil fontified nil 3604 . 3605) (nil fontified nil 3603 . 3604) (nil fontified nil 3602 . 3603) (nil fontified nil 3601 . 3602) (nil fontified nil 3600 . 3601) (nil fontified nil 3599 . 3600) (nil fontified nil 3598 . 3599) (nil fontified nil 3597 . 3598) (nil fontified nil 3596 . 3597) (nil fontified nil 3595 . 3596) (nil fontified nil 3594 . 3595) (nil fontified nil 3593 . 3594) (nil fontified nil 3592 . 3593) (nil fontified nil 3591 . 3592) (nil fontified nil 3590 . 3591) (nil fontified nil 3589 . 3590) (nil fontified nil 3588 . 3589) (nil fontified nil 3587 . 3588) (nil fontified nil 3586 . 3587) (nil fontified nil 3585 . 3586) (nil fontified nil 3584 . 3585) (nil fontified nil 3583 . 3584) (nil fontified nil 3582 . 3583) (nil fontified nil 3581 . 3582) (nil fontified nil 3580 . 3581) (nil fontified nil 3579 . 3580) (nil fontified nil 3572 . 3579) (nil fontified nil 3571 . 3572) (nil fontified nil 3570 . 3571) (nil fontified nil 3569 . 3570) (nil fontified nil 3568 . 3569) (nil fontified nil 3564 . 3568) (nil fontified nil 3563 . 3564) (nil fontified nil 3562 . 3563) (nil fontified nil 3559 . 3562) (nil fontified nil 3558 . 3559) (nil fontified nil 3555 . 3558) (nil fontified nil 3551 . 3555) (nil fontified nil 3550 . 3551) (nil fontified nil 3542 . 3550) (nil fontified nil 3541 . 3542) (nil fontified nil 3533 . 3541) (nil fontified nil 3532 . 3533) (nil fontified nil 3528 . 3532) (nil fontified nil 3527 . 3528) (nil fontified nil 3521 . 3527) (nil fontified nil 3520 . 3521) (nil fontified nil 3519 . 3520) (nil fontified nil 3518 . 3519) (nil fontified nil 3517 . 3518) (nil fontified nil 3516 . 3517) (nil fontified nil 3515 . 3516) (nil fontified nil 3514 . 3515) (nil fontified nil 3513 . 3514) (nil fontified nil 3512 . 3513) (nil fontified nil 3511 . 3512) (nil fontified nil 3510 . 3511) (nil fontified nil 3509 . 3510) (nil fontified nil 3508 . 3509) (nil fontified nil 3507 . 3508) (nil fontified nil 3506 . 3507) (nil fontified nil 3505 . 3506) (nil fontified nil 3500 . 3505) (nil fontified nil 3499 . 3500) (nil fontified nil 3495 . 3499) (nil fontified nil 3494 . 3495) (nil fontified nil 3493 . 3494) (nil fontified nil 3492 . 3493) (nil fontified nil 3491 . 3492) (nil fontified nil 3484 . 3491) (nil fontified nil 3483 . 3484) (nil fontified nil 3475 . 3483) (nil fontified nil 3474 . 3475) (nil fontified nil 3469 . 3474) (nil fontified nil 3467 . 3469) (nil fontified nil 3463 . 3467) (nil fontified nil 3462 . 3463) (nil fontified nil 3461 . 3462) (nil fontified nil 3457 . 3461) (nil fontified nil 3456 . 3457) (nil fontified nil 3451 . 3456) (nil fontified nil 3439 . 3451) (nil fontified nil 3438 . 3439) (nil fontified nil 3430 . 3438) (nil fontified nil 3429 . 3430) (nil fontified nil 3425 . 3429) (nil fontified nil 3424 . 3425) (nil fontified nil 3420 . 3424) (nil fontified nil 3419 . 3420) (nil fontified nil 3418 . 3419) (nil fontified nil 3417 . 3418) (nil fontified nil 3416 . 3417) (nil fontified nil 3409 . 3416) (nil fontified nil 3408 . 3409) (nil fontified nil 3407 . 3408) (nil fontified nil 3401 . 3407) (nil fontified nil 3398 . 3401) (nil fontified nil 3397 . 3398) (nil fontified nil 3396 . 3397) (nil fontified nil 3389 . 3396) (nil fontified nil 3388 . 3389) (nil fontified nil 3379 . 3388) (nil fontified nil 3378 . 3379) (nil fontified nil 3376 . 3378) (nil fontified nil 3374 . 3376) (nil fontified nil 3371 . 3374) (nil fontified nil 3370 . 3371) (nil fontified nil 3362 . 3370) (nil fontified nil 3361 . 3362) (nil fontified nil 3357 . 3361) (nil fontified nil 3356 . 3357) (nil fontified nil 3351 . 3356) (nil fontified nil 3350 . 3351) (nil fontified nil 3349 . 3350) (nil fontified nil 3348 . 3349) (nil fontified nil 3347 . 3348) (nil fontified nil 3346 . 3347) (nil fontified nil 3345 . 3346) (nil fontified nil 3344 . 3345) (nil fontified nil 3342 . 3344) (nil fontified nil 3336 . 3342) (nil fontified nil 3335 . 3336) (nil fontified nil 3334 . 3335) (nil fontified nil 3329 . 3334) (nil fontified nil 3328 . 3329) (nil fontified nil 3327 . 3328) (nil fontified nil 3326 . 3327) (nil fontified nil 3325 . 3326) (nil fontified nil 3324 . 3325) (nil fontified nil 3323 . 3324) (nil fontified nil 3322 . 3323) (nil fontified nil 3321 . 3322) (nil fontified nil 3320 . 3321) (nil fontified nil 3319 . 3320) (nil fontified nil 3318 . 3319) (nil fontified nil 3317 . 3318) (nil fontified nil 3316 . 3317) (nil fontified nil 3315 . 3316) (nil fontified nil 3314 . 3315) (nil fontified nil 3313 . 3314) (nil fontified nil 3312 . 3313) (nil fontified nil 3311 . 3312) (nil fontified nil 3310 . 3311) (nil fontified nil 3309 . 3310) (nil fontified nil 3308 . 3309) (nil fontified nil 3307 . 3308) (nil fontified nil 3306 . 3307) (nil fontified nil 3305 . 3306) (nil fontified nil 3304 . 3305) (nil fontified nil 3303 . 3304) (nil fontified nil 3302 . 3303) (nil fontified nil 3301 . 3302) (nil fontified nil 3300 . 3301) (nil fontified nil 3299 . 3300) (nil fontified nil 3298 . 3299) (nil fontified nil 3297 . 3298) (nil fontified nil 3296 . 3297) (nil fontified nil 3295 . 3296) (nil fontified nil 3294 . 3295) (nil fontified nil 3293 . 3294) (nil fontified nil 3292 . 3293) (nil fontified nil 3291 . 3292) (nil fontified nil 3290 . 3291) (nil fontified nil 3289 . 3290) (nil fontified nil 3288 . 3289) (nil fontified nil 3287 . 3288) (nil fontified nil 3286 . 3287) (nil fontified nil 3285 . 3286) (nil fontified nil 3284 . 3285) (nil fontified nil 3283 . 3284) (nil fontified nil 3282 . 3283) (nil fontified nil 3281 . 3282) (nil fontified nil 3280 . 3281) (nil fontified nil 3279 . 3280) (nil fontified nil 3278 . 3279) (nil fontified nil 3277 . 3278) (nil fontified nil 3276 . 3277) (nil fontified nil 3275 . 3276) (nil fontified nil 3274 . 3275) (nil fontified nil 3273 . 3274) (nil fontified nil 3272 . 3273) (nil fontified nil 3271 . 3272) (nil fontified nil 3270 . 3271) (nil fontified nil 3269 . 3270) (nil fontified nil 3268 . 3269) (nil fontified nil 3267 . 3268) (nil fontified nil 3266 . 3267) (nil fontified nil 3265 . 3266) (nil fontified nil 3264 . 3265) (nil fontified nil 3263 . 3264) (nil fontified nil 3262 . 3263) (nil fontified nil 3261 . 3262) (nil fontified nil 3260 . 3261) (nil fontified nil 3257 . 3260) (nil fontified nil 3256 . 3257) (nil fontified nil 3255 . 3256) (nil fontified nil 3254 . 3255) (nil fontified nil 3253 . 3254) (nil fontified nil 3252 . 3253) (nil fontified nil 3251 . 3252) (nil fontified nil 3250 . 3251) (nil fontified nil 3249 . 3250) (nil fontified nil 3248 . 3249) (nil fontified nil 3247 . 3248) (nil fontified nil 3246 . 3247) (nil fontified nil 3245 . 3246) (nil fontified nil 3244 . 3245) (nil fontified nil 3243 . 3244) (nil fontified nil 3242 . 3243) (nil fontified nil 3241 . 3242) (nil fontified nil 3240 . 3241) (nil fontified nil 3239 . 3240) (nil fontified nil 3238 . 3239) (nil fontified nil 3237 . 3238) (nil fontified nil 3236 . 3237) (nil fontified nil 3235 . 3236) (nil fontified nil 3234 . 3235) (nil fontified nil 3233 . 3234) (nil fontified nil 3232 . 3233) (nil fontified nil 3231 . 3232) (nil fontified nil 3230 . 3231) (nil fontified nil 3229 . 3230) (nil fontified nil 3228 . 3229) (nil fontified nil 3227 . 3228) (3227 . 3899)) nil (25414 32103 66134 16000) 0 nil])
([nil nil ((5060 . 5061)) nil (25414 32103 66104 398000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -5060) (undo-tree-id6082 . -1) (undo-tree-id6083 . -1) (undo-tree-id6084 . -1) (undo-tree-id6085 . -1) (undo-tree-id6086 . -1) 5061) nil (25414 32103 66103 985000) 0 nil])
([nil nil ((5060 . 5061)) nil (25414 32103 66102 268000) 0 nil])
([nil nil ((#("suffix=\".\"" 0 1 (fontified t face (nxml-attribute-local-name)) 1 2 (fontified t face (nxml-attribute-local-name)) 2 3 (fontified t face (nxml-attribute-local-name)) 3 4 (fontified t face (nxml-attribute-local-name)) 4 5 (fontified t face (nxml-attribute-local-name)) 5 6 (fontified t face (nxml-attribute-local-name)) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face)) . -5135) (undo-tree-id6081 . -10) 5145) nil (25414 32103 66101 881000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5134) (undo-tree-id6077 . -1) (undo-tree-id6078 . -1) (undo-tree-id6079 . -1) (undo-tree-id6080 . -1) 5135) nil (25414 32103 66101 100000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 5110) (undo-tree-id6074 . 1) (#("	" 0 1 (fontified t)) . 5110) (undo-tree-id6075 . 1) (#("	" 0 1 (fontified t)) . 5110) (undo-tree-id6076 . 1) (#("
" 0 1 (fontified t)) . 5110)) nil (25414 32103 66098 345000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -5202) (undo-tree-id6004 . -1) (undo-tree-id6005 . -1) (undo-tree-id6006 . -1) (undo-tree-id6007 . -1) (undo-tree-id6008 . -1) (undo-tree-id6009 . -1) (undo-tree-id6010 . -1) (undo-tree-id6011 . -1) (undo-tree-id6012 . -1) (undo-tree-id6013 . -1) (undo-tree-id6014 . -1) (undo-tree-id6015 . -1) (undo-tree-id6016 . -1) (undo-tree-id6017 . -1) (undo-tree-id6018 . -1) (undo-tree-id6019 . -1) (undo-tree-id6020 . -1) (undo-tree-id6021 . -1) (undo-tree-id6022 . -1) (#("i" 0 1 (fontified t)) . -5203) (undo-tree-id6023 . -1) (undo-tree-id6024 . -1) (undo-tree-id6025 . -1) (undo-tree-id6026 . -1) (undo-tree-id6027 . -1) (undo-tree-id6028 . -1) (undo-tree-id6029 . -1) (undo-tree-id6030 . -1) (undo-tree-id6031 . -1) (undo-tree-id6032 . -1) (undo-tree-id6033 . -1) (undo-tree-id6034 . -1) (undo-tree-id6035 . -1) (undo-tree-id6036 . -1) (undo-tree-id6037 . -1) (undo-tree-id6038 . -1) (#("x" 0 1 (fontified t)) . -5204) (undo-tree-id6039 . -1) (undo-tree-id6040 . -1) (undo-tree-id6041 . -1) (undo-tree-id6042 . -1) (undo-tree-id6043 . -1) (undo-tree-id6044 . -1) (undo-tree-id6045 . -1) (undo-tree-id6046 . -1) (undo-tree-id6047 . -1) (undo-tree-id6048 . -1) (undo-tree-id6049 . -1) (undo-tree-id6050 . -1) (undo-tree-id6051 . -1) (#("=" 0 1 (fontified t)) . -5205) (undo-tree-id6052 . -1) (undo-tree-id6053 . -1) (undo-tree-id6054 . -1) (undo-tree-id6055 . -1) (undo-tree-id6056 . -1) (undo-tree-id6057 . -1) (undo-tree-id6058 . -1) (undo-tree-id6059 . -1) (undo-tree-id6060 . -1) (undo-tree-id6061 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -5206) (undo-tree-id6062 . -1) (undo-tree-id6063 . -1) (undo-tree-id6064 . -1) (undo-tree-id6065 . -1) (undo-tree-id6066 . -1) (undo-tree-id6067 . -1) (undo-tree-id6068 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -5207) (undo-tree-id6069 . -1) (undo-tree-id6070 . -1) (undo-tree-id6071 . -1) (undo-tree-id6072 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -5208) (undo-tree-id6073 . -1) 5209) nil (25414 32103 66095 602000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -5198) (undo-tree-id5898 . -1) (undo-tree-id5899 . -1) (undo-tree-id5900 . -1) (undo-tree-id5901 . -1) (undo-tree-id5902 . -1) (undo-tree-id5903 . -1) (undo-tree-id5904 . -1) (undo-tree-id5905 . -1) (undo-tree-id5906 . -1) (undo-tree-id5907 . -1) (undo-tree-id5908 . -1) (undo-tree-id5909 . -1) (undo-tree-id5910 . -1) (undo-tree-id5911 . -1) (undo-tree-id5912 . -1) (undo-tree-id5913 . -1) (undo-tree-id5914 . -1) (undo-tree-id5915 . -1) (undo-tree-id5916 . -1) (undo-tree-id5917 . -1) (undo-tree-id5918 . -1) (undo-tree-id5919 . -1) (undo-tree-id5920 . -1) (undo-tree-id5921 . -1) (undo-tree-id5922 . -1) (undo-tree-id5923 . -1) (undo-tree-id5924 . -1) (undo-tree-id5925 . -1) (undo-tree-id5926 . -1) (undo-tree-id5927 . -1) (undo-tree-id5928 . -1) (#("s" 0 1 (fontified t)) . -5199) (undo-tree-id5929 . -1) (undo-tree-id5930 . -1) (undo-tree-id5931 . -1) (undo-tree-id5932 . -1) (undo-tree-id5933 . -1) (undo-tree-id5934 . -1) (undo-tree-id5935 . -1) (undo-tree-id5936 . -1) (undo-tree-id5937 . -1) (undo-tree-id5938 . -1) (undo-tree-id5939 . -1) (undo-tree-id5940 . -1) (undo-tree-id5941 . -1) (undo-tree-id5942 . -1) (undo-tree-id5943 . -1) (undo-tree-id5944 . -1) (undo-tree-id5945 . -1) (undo-tree-id5946 . -1) (undo-tree-id5947 . -1) (undo-tree-id5948 . -1) (undo-tree-id5949 . -1) (undo-tree-id5950 . -1) (undo-tree-id5951 . -1) (undo-tree-id5952 . -1) (undo-tree-id5953 . -1) (undo-tree-id5954 . -1) (undo-tree-id5955 . -1) (undo-tree-id5956 . -1) (#("u" 0 1 (fontified t)) . -5200) (undo-tree-id5957 . -1) (undo-tree-id5958 . -1) (undo-tree-id5959 . -1) (undo-tree-id5960 . -1) (undo-tree-id5961 . -1) (undo-tree-id5962 . -1) (undo-tree-id5963 . -1) (undo-tree-id5964 . -1) (undo-tree-id5965 . -1) (undo-tree-id5966 . -1) (undo-tree-id5967 . -1) (undo-tree-id5968 . -1) (undo-tree-id5969 . -1) (undo-tree-id5970 . -1) (undo-tree-id5971 . -1) (undo-tree-id5972 . -1) (undo-tree-id5973 . -1) (undo-tree-id5974 . -1) (undo-tree-id5975 . -1) (undo-tree-id5976 . -1) (undo-tree-id5977 . -1) (undo-tree-id5978 . -1) (undo-tree-id5979 . -1) (undo-tree-id5980 . -1) (undo-tree-id5981 . -1) (#("f" 0 1 (fontified t)) . -5201) (undo-tree-id5982 . -1) (undo-tree-id5983 . -1) (undo-tree-id5984 . -1) (undo-tree-id5985 . -1) (undo-tree-id5986 . -1) (undo-tree-id5987 . -1) (undo-tree-id5988 . -1) (undo-tree-id5989 . -1) (undo-tree-id5990 . -1) (undo-tree-id5991 . -1) (undo-tree-id5992 . -1) (undo-tree-id5993 . -1) (undo-tree-id5994 . -1) (undo-tree-id5995 . -1) (undo-tree-id5996 . -1) (undo-tree-id5997 . -1) (undo-tree-id5998 . -1) (undo-tree-id5999 . -1) (undo-tree-id6000 . -1) (undo-tree-id6001 . -1) (undo-tree-id6002 . -1) (undo-tree-id6003 . -1) 5202) nil (25414 32103 66068 285000) 0 nil])
([nil nil ((#("	    <choose>" 0 3 (fontified t) 3 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 5133) (undo-tree-id5893 . -13) (undo-tree-id5894 . -13) (undo-tree-id5895 . -13) (undo-tree-id5896 . -13) (undo-tree-id5897 . -13)) nil (25414 32103 65529 213000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5133) (undo-tree-id5891 . 1) (undo-tree-id5892 . -1)) nil (25414 32103 65527 120000) 0 nil])
([nil nil ((#("	      <if variable=\"note\">" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 12 (fontified t face (nxml-attribute-local-name)) 12 14 (fontified t face (nxml-attribute-local-name)) 14 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face (nxml-tag-delimiter))) . 5133) (undo-tree-id5889 . 27) (undo-tree-id5890 . -27)) nil (25414 32103 65526 132000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5133) (undo-tree-id5887 . 1) (undo-tree-id5888 . -1)) nil (25414 32103 65525 211000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -5138) (5138 . 5139) (#("	" 0 1 (fontified nil)) . 5138) (undo-tree-id5875 . -1) (undo-tree-id5876 . -1) (undo-tree-id5877 . -1) (undo-tree-id5878 . -1) (undo-tree-id5879 . -1) (undo-tree-id5880 . -1) (undo-tree-id5881 . -1) (undo-tree-id5882 . -1) (undo-tree-id5883 . -1) (undo-tree-id5884 . -1) (undo-tree-id5885 . -1) (undo-tree-id5886 . 1) (5134 . 5138) 5133) nil (25414 32103 65524 35000) 0 nil])
([nil nil ((#("	      </if>" 0 4 (fontified t) 4 5 (fontified t) 5 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter))) . 5162) (undo-tree-id5864 . 3) (undo-tree-id5865 . -11) (undo-tree-id5866 . -5) (undo-tree-id5867 . -5) (undo-tree-id5868 . -7) (undo-tree-id5869 . -12) (undo-tree-id5870 . -5) (undo-tree-id5871 . -5) (undo-tree-id5872 . -5) (undo-tree-id5873 . -5) (undo-tree-id5874 . -12)) nil (25414 32103 65518 911000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5162) (undo-tree-id5862 . 1) (undo-tree-id5863 . -1)) nil (25414 32103 65514 522000) 0 nil])
([nil nil ((#("	    </choose>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-tag-slash)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-tag-delimiter))) . 5162) (undo-tree-id5858 . -5) (undo-tree-id5859 . -14) (undo-tree-id5860 . 14) (undo-tree-id5861 . -14)) nil (25414 32103 65513 231000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5162) (undo-tree-id5855 . -1) (undo-tree-id5856 . 1) (undo-tree-id5857 . -1)) nil (25414 32103 65509 230000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-comment-face)) . -5005) (undo-tree-id6104 . -1) (undo-tree-id6105 . -1) (undo-tree-id6106 . -1) (undo-tree-id6107 . -1) (undo-tree-id6108 . -1) (undo-tree-id6109 . -1) (undo-tree-id6110 . -1) 5006 (t 25414 32103 77794 291000)) nil (25414 32126 945127 216000) 0 nil])
([nil nil ((5025 . 5046)) nil (25414 32126 945123 879000) 0 nil])
([nil nil ((5059 . 5066) (5049 . 5056) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 5049) (undo-tree-id6101 . -1) (undo-tree-id6102 . -1) (undo-tree-id6103 . -1) (5046 . 5053)) nil (25414 32126 945123 80000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-face)) . -5030) (undo-tree-id6093 . -1) (undo-tree-id6094 . -1) (undo-tree-id6095 . -1) (undo-tree-id6096 . -1) (undo-tree-id6097 . -1) (undo-tree-id6098 . -1) (undo-tree-id6099 . -1) (undo-tree-id6100 . -1) 5031) nil (25414 32126 945119 401000) 0 nil])
([nil nil ((#("		<text macro=\"editor\"/>
		<text macro=\"volume\"/>
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face (nxml-tag-slash)) 23 24 (fontified t face (nxml-tag-delimiter)) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t face (nxml-tag-delimiter)) 28 32 (fontified t face (nxml-element-local-name)) 32 33 (fontified t) 33 38 (fontified t face (nxml-attribute-local-name)) 38 39 (fontified t) 39 40 (fontified t face font-lock-string-face) 40 41 (fontified t face font-lock-string-face) 41 46 (fontified t face font-lock-string-face) 46 47 (fontified t face font-lock-string-face) 47 48 (fontified t face (nxml-tag-slash)) 48 49 (fontified t face (nxml-tag-delimiter)) 49 50 (fontified t)) . 4250) (undo-tree-id6111 . -40) (undo-tree-id6112 . -40) (undo-tree-id6113 . -50) (undo-tree-id6114 . -40) (undo-tree-id6115 . -24) (undo-tree-id6116 . -24) (undo-tree-id6117 . -24) (undo-tree-id6118 . -24) (undo-tree-id6119 . -24) (undo-tree-id6120 . -24) (undo-tree-id6121 . -24) (undo-tree-id6122 . -50) (undo-tree-id6123 . -25) (undo-tree-id6124 . -25) (undo-tree-id6125 . -50) (undo-tree-id6126 . -50) (undo-tree-id6127 . -50) 4300 (t 25414 32126 957505 447000)) nil (25414 32343 265217 189000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4402 . 4403) (nil fontified nil 4402 . 4403) (nil fontified nil 4401 . 4402) (nil fontified nil 4400 . 4401) (nil fontified nil 4399 . 4400) (nil fontified nil 4394 . 4399) (nil fontified nil 4393 . 4394) (nil fontified nil 4392 . 4393) (nil fontified nil 4391 . 4392) (nil fontified nil 4386 . 4391) (nil fontified nil 4385 . 4386) (nil fontified nil 4381 . 4385) (nil fontified nil 4380 . 4381) (nil fontified nil 4379 . 4380) (nil fontified nil 4378 . 4379) (nil fontified nil 4377 . 4378) (nil fontified nil 4376 . 4377) (nil fontified nil 4375 . 4376) (nil fontified nil 4374 . 4375) (nil fontified nil 4368 . 4374) (nil fontified nil 4367 . 4368) (nil fontified nil 4366 . 4367) (nil fontified nil 4361 . 4366) (nil fontified nil 4360 . 4361) (nil fontified nil 4356 . 4360) (nil fontified nil 4355 . 4356) (nil fontified nil 4354 . 4355) (nil fontified nil 4353 . 4354) (4353 . 4403)) nil (25414 32343 265203 696000) 0 nil])
([nil nil ((#("	      <text term=\"In \"/>" 0 1 (fontified t) 1 5 (fontified t) 5 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t) 13 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face (nxml-tag-slash)) 24 25 (fontified t face (nxml-tag-delimiter))) . 4119) (undo-tree-id6237 . -13) (undo-tree-id6238 . -13) (undo-tree-id6239 . -25) (t 25414 32343 278218 296000)) nil (25414 32445 728923 639000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4119) (undo-tree-id6235 . 1) (undo-tree-id6236 . -1)) nil (25414 32445 728922 293000) 0 nil])
([nil nil ((4157 . 4170)) nil (25414 32445 728921 328000) 0 nil])
([nil nil ((4116 . 4118)) nil (25414 32445 728921 89000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face font-lock-string-face)) . -4146) (undo-tree-id6230 . -1) (undo-tree-id6231 . -1) (undo-tree-id6232 . -1) (undo-tree-id6233 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -4147) (undo-tree-id6234 . -1) 4148) nil (25414 32445 728920 711000) 0 nil])
([nil nil ((4339 . 4342)) nil (25414 32445 728918 670000) 0 nil])
([nil nil ((4342 . 4343)) nil (25414 32445 728918 243000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil face (nxml-tag-delimiter))) . -4347) (4347 . 4348) (#("	" 0 1 (fontified nil face (nxml-tag-delimiter))) . 4347) (undo-tree-id6226 . -1) (undo-tree-id6227 . -1) (undo-tree-id6228 . -1) (undo-tree-id6229 . -1) (4341 . 4347) (4343 . 4344)) nil (25414 32445 728917 847000) 0 nil])
([nil nil ((4349 . 4355)) nil (25414 32445 728915 305000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face (nxml-element-local-name))) . -4349) (undo-tree-id6133 . -1) (undo-tree-id6134 . -1) (undo-tree-id6135 . -1) (undo-tree-id6136 . -1) (undo-tree-id6137 . -1) (undo-tree-id6138 . -1) (undo-tree-id6139 . -1) (undo-tree-id6140 . -1) (undo-tree-id6141 . -1) (undo-tree-id6142 . -1) (undo-tree-id6143 . -1) (undo-tree-id6144 . -1) (undo-tree-id6145 . -1) (undo-tree-id6146 . -1) (undo-tree-id6147 . -1) (undo-tree-id6148 . -1) (undo-tree-id6149 . -1) (undo-tree-id6150 . -1) (undo-tree-id6151 . -1) (undo-tree-id6152 . -1) (undo-tree-id6153 . -1) (undo-tree-id6154 . -1) (undo-tree-id6155 . -1) (undo-tree-id6156 . -1) (undo-tree-id6157 . -1) (undo-tree-id6158 . -1) (undo-tree-id6159 . -1) (undo-tree-id6160 . -1) (#("h" 0 1 (fontified t face (nxml-element-local-name))) . -4350) (undo-tree-id6161 . -1) (undo-tree-id6162 . -1) (undo-tree-id6163 . -1) (undo-tree-id6164 . -1) (undo-tree-id6165 . -1) (undo-tree-id6166 . -1) (undo-tree-id6167 . -1) (undo-tree-id6168 . -1) (undo-tree-id6169 . -1) (undo-tree-id6170 . -1) (undo-tree-id6171 . -1) (undo-tree-id6172 . -1) (undo-tree-id6173 . -1) (undo-tree-id6174 . -1) (undo-tree-id6175 . -1) (undo-tree-id6176 . -1) (undo-tree-id6177 . -1) (undo-tree-id6178 . -1) (undo-tree-id6179 . -1) (undo-tree-id6180 . -1) (undo-tree-id6181 . -1) (undo-tree-id6182 . -1) (undo-tree-id6183 . -1) (#("o" 0 1 (fontified t face (nxml-element-local-name))) . -4351) (undo-tree-id6184 . -1) (undo-tree-id6185 . -1) (undo-tree-id6186 . -1) (undo-tree-id6187 . -1) (undo-tree-id6188 . -1) (undo-tree-id6189 . -1) (undo-tree-id6190 . -1) (undo-tree-id6191 . -1) (undo-tree-id6192 . -1) (undo-tree-id6193 . -1) (undo-tree-id6194 . -1) (undo-tree-id6195 . -1) (undo-tree-id6196 . -1) (undo-tree-id6197 . -1) (undo-tree-id6198 . -1) (undo-tree-id6199 . -1) (undo-tree-id6200 . -1) (undo-tree-id6201 . -1) (#("o" 0 1 (fontified t face (nxml-element-local-name))) . -4352) (undo-tree-id6202 . -1) (undo-tree-id6203 . -1) (undo-tree-id6204 . -1) (undo-tree-id6205 . -1) (undo-tree-id6206 . -1) (undo-tree-id6207 . -1) (undo-tree-id6208 . -1) (undo-tree-id6209 . -1) (undo-tree-id6210 . -1) (undo-tree-id6211 . -1) (undo-tree-id6212 . -1) (undo-tree-id6213 . -1) (undo-tree-id6214 . -1) (#("s" 0 1 (fontified t face (nxml-element-local-name))) . -4353) (undo-tree-id6215 . -1) (undo-tree-id6216 . -1) (undo-tree-id6217 . -1) (undo-tree-id6218 . -1) (undo-tree-id6219 . -1) (undo-tree-id6220 . -1) (undo-tree-id6221 . -1) (undo-tree-id6222 . -1) (#("e" 0 1 (fontified t face (nxml-element-local-name))) . -4354) (undo-tree-id6223 . -1) (undo-tree-id6224 . -1) (undo-tree-id6225 . -1) 4355) nil (25414 32445 728913 741000) 0 nil])
([nil nil ((4349 . 4355)) nil (25414 32445 728880 28000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -4363) (4363 . 4364) (#("	" 0 1 (fontified nil)) . 4363) (undo-tree-id6132 . 1) (4357 . 4363) 4364) nil (25414 32445 728879 499000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -4393) (4393 . 4394) (#("	" 0 1 (fontified nil)) . 4393) (undo-tree-id6131 . 1) (4387 . 4393) 4392) nil (25414 32445 728878 462000) 0 nil])
([nil nil ((#("	      </group>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-tag-delimiter))) . 4416) (undo-tree-id6130 . -15)) nil (25414 32445 728877 141000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4416) (undo-tree-id6128 . 1) (undo-tree-id6129 . -1)) nil (25414 32445 728874 355000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1375) (undo-tree-id6248 . -1) (#("s" 0 1 (fontified t)) . -1376) (undo-tree-id6249 . -1) (#("u" 0 1 (fontified t)) . -1377) (undo-tree-id6250 . -1) (#("f" 0 1 (fontified t)) . -1378) (undo-tree-id6251 . -1) (#("f" 0 1 (fontified t)) . -1379) (undo-tree-id6252 . -1) (#("i" 0 1 (fontified t)) . -1380) (undo-tree-id6253 . -1) (#("x" 0 1 (fontified t)) . -1381) (undo-tree-id6254 . -1) (#("=" 0 1 (fontified t)) . -1382) (undo-tree-id6255 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -1383) (undo-tree-id6256 . -1) (undo-tree-id6257 . 1) (undo-tree-id6258 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -1384) (undo-tree-id6259 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -1385) (undo-tree-id6260 . -1) 1386 (t 25414 32445 743647 518000)) nil (25414 32532 178217 182000) 0 nil])
([nil nil ((#("      <label form=\"long\" prefix=\", \"/>
" 0 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t) 13 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t) 18 19 (fontified t face font-lock-string-face) 19 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t) 25 31 (fontified t face (nxml-attribute-local-name)) 31 32 (fontified t) 32 33 (fontified t face font-lock-string-face) 33 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t face (nxml-tag-slash)) 37 38 (fontified t face (nxml-tag-delimiter)) 38 39 (rear-nonsticky t fontified t)) . 1339) (undo-tree-id6241 . -39) (undo-tree-id6242 . -36) (undo-tree-id6243 . -39) (undo-tree-id6244 . -39) (undo-tree-id6245 . -39) (undo-tree-id6246 . -39) (undo-tree-id6247 . -39) 1378) nil (25414 32532 178211 546000) 0 nil])
([nil nil ((1339 . 1340)) nil (25414 32532 178207 658000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (nxml-text))) . -1339) (undo-tree-id6240 . -1) 1340) nil (25414 32532 178206 985000) 0 nil])
([nil nil ((nil fontified nil 1377 . 1378) (nil fontified nil 1376 . 1377) (nil fontified nil 1375 . 1376) (nil fontified nil 1374 . 1375) (nil fontified nil 1372 . 1374) (nil fontified nil 1371 . 1372) (nil fontified nil 1370 . 1371) (nil fontified nil 1364 . 1370) (nil fontified nil 1363 . 1364) (nil fontified nil 1362 . 1363) (nil fontified nil 1358 . 1362) (nil fontified nil 1357 . 1358) (nil fontified nil 1356 . 1357) (nil fontified nil 1352 . 1356) (nil fontified nil 1351 . 1352) (nil fontified nil 1346 . 1351) (nil fontified nil 1345 . 1346) (nil fontified nil 1339 . 1345) (1339 . 1378)) nil (25414 32532 178199 924000) 0 nil])
([nil nil ((2169 . 2180) (t 25414 32532 192605 827000)) nil (25414 32612 273149 161000) 0 nil])
([nil nil ((#("suffix=\".\"" 0 1 (fontified t face (nxml-attribute-local-name)) 1 2 (fontified t face (nxml-attribute-local-name)) 2 3 (fontified t face (nxml-attribute-local-name)) 3 4 (fontified t face (nxml-attribute-local-name)) 4 5 (fontified t face (nxml-attribute-local-name)) 5 6 (fontified t face (nxml-attribute-local-name)) 6 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face)) . -2170) (undo-tree-id6264 . -10) 2180) nil (25414 32612 273148 798000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2169) (undo-tree-id6263 . -1) 2170) nil (25414 32612 273148 90000) 0 nil])
([nil nil ((3004 . 3015)) nil (25414 32612 273147 387000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face (nxml-attribute-local-name))) . -3010) (undo-tree-id6262 . -1) 3011) nil (25414 32612 273147 63000) 0 nil])
([nil nil ((3010 . 3011)) nil (25414 32612 273146 123000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3359 . 3360) (nil fontified nil 3359 . 3360) (nil fontified nil 3358 . 3359) (nil fontified nil 3357 . 3358) (nil fontified nil 3356 . 3357) (nil fontified nil 3355 . 3356) (nil fontified nil 3354 . 3355) (nil fontified nil 3353 . 3354) (nil fontified nil 3352 . 3353) (nil fontified nil 3351 . 3352) (nil fontified nil 3350 . 3351) (nil fontified nil 3349 . 3350) (3349 . 3360)) nil (25414 32612 273145 793000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4040 . 4041) (nil fontified nil 4040 . 4041) (nil fontified nil 4039 . 4040) (nil fontified nil 4038 . 4039) (nil fontified nil 4037 . 4038) (nil fontified nil 4036 . 4037) (nil fontified nil 4035 . 4036) (nil fontified nil 4034 . 4035) (nil fontified nil 4033 . 4034) (nil fontified nil 4032 . 4033) (nil fontified nil 4031 . 4032) (nil fontified nil 4030 . 4031) (4030 . 4041)) nil (25414 32612 273145 132000) 0 nil])
([nil nil ((4656 . 4657)) nil (25414 32612 273144 485000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4667 . 4668) (nil fontified nil 4667 . 4668) (nil fontified nil 4666 . 4667) (nil fontified nil 4665 . 4666) (nil fontified nil 4664 . 4665) (nil fontified nil 4663 . 4664) (nil fontified nil 4662 . 4663) (nil fontified nil 4661 . 4662) (nil fontified nil 4660 . 4661) (nil fontified nil 4659 . 4660) (nil fontified nil 4658 . 4659) (nil fontified nil 4657 . 4658) (4657 . 4668)) nil (25414 32612 273144 119000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -4653) (undo-tree-id6261 . -1) 4654) nil (25414 32612 273143 230000) 0 nil])
([nil nil ((4653 . 4654)) nil (25414 32612 273138 930000) 0 nil])
([nil nil ((5133 . 5134)) nil (25414 32612 273138 624000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5144 . 5145) (nil fontified nil 5144 . 5145) (nil fontified nil 5143 . 5144) (nil fontified nil 5142 . 5143) (nil fontified nil 5141 . 5142) (nil fontified nil 5140 . 5141) (nil fontified nil 5139 . 5140) (nil fontified nil 5138 . 5139) (nil fontified nil 5137 . 5138) (nil fontified nil 5136 . 5137) (nil fontified nil 5135 . 5136) (nil fontified nil 5134 . 5135) (5134 . 5145)) nil (25414 32612 273135 723000) 0 nil])
([nil nil ((3022 . 3026) (t 25414 32612 284974 408000)) nil (25414 32857 138045 289000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3024) (undo-tree-id6473 . -1) (undo-tree-id6474 . -1) (undo-tree-id6475 . -1) (undo-tree-id6476 . -1) (#(" " 0 1 (fontified t)) . -3025) (undo-tree-id6477 . -1) 3026) nil (25414 32857 138044 545000) 0 nil])
([nil nil ((3024 . 3027)) nil (25414 32857 138041 940000) 0 nil])
([nil nil ((#("<" 0 1 (fontified t)) . -3022) (undo-tree-id6352 . -1) (undo-tree-id6353 . -1) (undo-tree-id6354 . -1) (undo-tree-id6355 . -1) (undo-tree-id6356 . -1) (undo-tree-id6357 . -1) (undo-tree-id6358 . -1) (undo-tree-id6359 . -1) (undo-tree-id6360 . -1) (undo-tree-id6361 . -1) (undo-tree-id6362 . -1) (undo-tree-id6363 . -1) (undo-tree-id6364 . -1) (undo-tree-id6365 . -1) (undo-tree-id6366 . -1) (undo-tree-id6367 . -1) (undo-tree-id6368 . -1) (undo-tree-id6369 . -1) (undo-tree-id6370 . -1) (undo-tree-id6371 . -1) (undo-tree-id6372 . -1) (undo-tree-id6373 . -1) (undo-tree-id6374 . -1) (undo-tree-id6375 . -1) (undo-tree-id6376 . -1) (undo-tree-id6377 . -1) (undo-tree-id6378 . -1) (undo-tree-id6379 . -1) (undo-tree-id6380 . -1) (undo-tree-id6381 . -1) (undo-tree-id6382 . -1) (undo-tree-id6383 . -1) (undo-tree-id6384 . -1) (undo-tree-id6385 . -1) (undo-tree-id6386 . -1) (undo-tree-id6387 . -1) (undo-tree-id6388 . -1) (undo-tree-id6389 . -1) (undo-tree-id6390 . -1) (#("!" 0 1 (fontified t)) . -3023) (undo-tree-id6391 . -1) (undo-tree-id6392 . -1) (undo-tree-id6393 . -1) (undo-tree-id6394 . -1) (undo-tree-id6395 . -1) (undo-tree-id6396 . -1) (undo-tree-id6397 . -1) (undo-tree-id6398 . -1) (undo-tree-id6399 . -1) (undo-tree-id6400 . -1) (undo-tree-id6401 . -1) (undo-tree-id6402 . -1) (undo-tree-id6403 . -1) (undo-tree-id6404 . -1) (undo-tree-id6405 . -1) (undo-tree-id6406 . -1) (undo-tree-id6407 . -1) (undo-tree-id6408 . -1) (undo-tree-id6409 . -1) (undo-tree-id6410 . -1) (undo-tree-id6411 . -1) (undo-tree-id6412 . -1) (undo-tree-id6413 . -1) (undo-tree-id6414 . -1) (undo-tree-id6415 . -1) (undo-tree-id6416 . -1) (undo-tree-id6417 . -1) (undo-tree-id6418 . -1) (undo-tree-id6419 . -1) (undo-tree-id6420 . -1) (undo-tree-id6421 . -1) (undo-tree-id6422 . -1) (undo-tree-id6423 . -1) (undo-tree-id6424 . -1) (undo-tree-id6425 . -1) (undo-tree-id6426 . -1) (undo-tree-id6427 . -1) (#("-" 0 1 (fontified t)) . -3024) (undo-tree-id6428 . -1) (undo-tree-id6429 . -1) (undo-tree-id6430 . -1) (undo-tree-id6431 . -1) (undo-tree-id6432 . -1) (undo-tree-id6433 . -1) (undo-tree-id6434 . -1) (undo-tree-id6435 . -1) (undo-tree-id6436 . -1) (undo-tree-id6437 . -1) (undo-tree-id6438 . -1) (undo-tree-id6439 . -1) (undo-tree-id6440 . -1) (undo-tree-id6441 . -1) (undo-tree-id6442 . -1) (undo-tree-id6443 . -1) (undo-tree-id6444 . -1) (undo-tree-id6445 . -1) (undo-tree-id6446 . -1) (undo-tree-id6447 . -1) (undo-tree-id6448 . -1) (#("-" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -3025) (undo-tree-id6449 . -1) (undo-tree-id6450 . -1) (undo-tree-id6451 . -1) (undo-tree-id6452 . -1) (undo-tree-id6453 . -1) (undo-tree-id6454 . -1) (undo-tree-id6455 . -1) (undo-tree-id6456 . -1) (undo-tree-id6457 . -1) (undo-tree-id6458 . -1) (undo-tree-id6459 . -1) (undo-tree-id6460 . -1) (undo-tree-id6461 . -1) (undo-tree-id6462 . -1) (undo-tree-id6463 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -3026) (undo-tree-id6464 . -1) (undo-tree-id6465 . -1) (undo-tree-id6466 . -1) (undo-tree-id6467 . -1) (undo-tree-id6468 . -1) (undo-tree-id6469 . -1) (undo-tree-id6470 . -1) (undo-tree-id6471 . -1) (undo-tree-id6472 . -1) 3027) nil (25414 32966 161274 562000) 0 nil])
([nil nil ((3149 . 3154)) nil (25414 32975 997281 432000) 0 nil] [nil nil ((#("	    <text variable=\"title\" text-case=\"title\" font-style=\"italic\"/>
" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 21 (fontified t face font-lock-string-face) 21 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t) 28 37 (fontified t face (nxml-attribute-local-name)) 37 38 (fontified t) 38 39 (fontified t face font-lock-string-face) 39 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t) 46 47 (fontified t face (nxml-attribute-local-name)) 47 50 (fontified t face (nxml-attribute-local-name)) 50 56 (fontified t face (nxml-attribute-local-name)) 56 57 (fontified t) 57 58 (fontified t face font-lock-string-face) 58 64 (fontified t face font-lock-string-face) 64 65 (fontified t face font-lock-string-face) 65 66 (fontified t face (nxml-tag-slash)) 66 67 (fontified t face (nxml-tag-delimiter)) 67 68 (face font-lock-comment-face fontified t)) . 3017) (undo-tree-id6295 . -68) (undo-tree-id6297 . -5) (undo-tree-id6299 . -5) (undo-tree-id6301 . -5) (undo-tree-id6303 . -5) (undo-tree-id6305 . -5) (undo-tree-id6307 . -5) (undo-tree-id6309 . -5) (undo-tree-id6311 . -5) (undo-tree-id6313 . -5) (undo-tree-id6315 . -5) (undo-tree-id6317 . -5) (undo-tree-id6319 . -5) (undo-tree-id6321 . -5) (undo-tree-id6323 . -5) (undo-tree-id6325 . -5) (undo-tree-id6327 . -5) (undo-tree-id6329 . -5) (undo-tree-id6331 . -5) (undo-tree-id6333 . -5) (undo-tree-id6335 . -5) (undo-tree-id6337 . -5) (undo-tree-id6339 . -5) (undo-tree-id6341 . -5) (undo-tree-id6343 . -5) (undo-tree-id6345 . -5) (undo-tree-id6347 . -68) (undo-tree-id6348 . -68) (undo-tree-id6350 . -68) 3085) ((3017 . 3085)) (25414 32965 18510 198000) 0 nil])
([nil nil ((3180 . 3184)) nil (25414 32975 997278 763000) 0 nil])
([nil nil ((#("	    " 0 5 (fontified nil)) . 3975) (3975 . 3980) (3975 . 3976)) ((#("
" 0 1 (fontified nil)) . 3975) (undo-tree-id6605 . 1) (#("	    " 0 5 (fontified nil)) . 3975) (3975 . 3980)) (25414 32964 425257 778000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3149) (#("-" 0 1 (fontified t face (nxml-text))) . 3149) (#("-" 0 1 (fontified t face (nxml-text))) . 3149) (#("!" 0 1 (fontified t face (nxml-text))) . 3149) (#("<" 0 1 (fontified t syntax-table (2097163) face font-lock-comment-delimiter-face)) . 3149) (t 25414 32976 13925 964000)) nil (25414 33092 869968 110000) 0 nil])
([nil nil ((3016 . 3022)) ((#("
	    " 0 6 (fontified t)) . 3016) (undo-tree-id6600 . -6) (undo-tree-id6601 . -6) (undo-tree-id6602 . -1) (undo-tree-id6603 . -6) (undo-tree-id6604 . -6)) (25414 32964 148900 145000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -3175) (undo-tree-id6731 . -1) (undo-tree-id6732 . -1) (#("-" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -3176) (undo-tree-id6733 . -1) (undo-tree-id6734 . -1) (#("-" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -3177) (undo-tree-id6735 . -1) (undo-tree-id6736 . -1) (#(">" 0 1 (fontified t face font-lock-comment-delimiter-face syntax-table (2097164))) . -3178) (undo-tree-id6737 . -1) (undo-tree-id6738 . -1) 3179) nil (25414 33092 869967 114000) 0 nil])
([nil nil ((3022 . 3041)) ((#("<text macro=\"title\"" 0 1 (fontified t face (nxml-tag-delimiter)) 1 2 (fontified t face (nxml-element-local-name)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t) 6 7 (fontified t face (nxml-attribute-local-name)) 7 8 (fontified t face (nxml-attribute-local-name)) 8 9 (fontified t face (nxml-attribute-local-name)) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face)) . 3022) (undo-tree-id6595 . -19) (undo-tree-id6596 . -19) (undo-tree-id6597 . -13) (undo-tree-id6598 . 19) (undo-tree-id6599 . -1)) (25414 32963 733327 810000) 0 nil])
([nil nil ((2115 . 2118)) nil (25414 33092 869964 82000) 0 nil])
([nil nil ((3041 . 3042)) ((#("/" 0 1 (fontified t face (nxml-tag-slash))) . 3041) (undo-tree-id6591 . -1) (undo-tree-id6592 . -1) (undo-tree-id6593 . 1) (undo-tree-id6594 . -1)) (25414 32963 325571 745000) 0 nil])
([nil nil ((2118 . 2122)) nil (25414 33092 869963 848000) 0 nil])
([nil nil ((3042 . 3043)) ((#(">" 0 1 (fontified t face (nxml-tag-delimiter))) . 3042)) (25414 32962 633991 757000) 0 nil])
([nil nil ((2455 . 2459) (2444 . 2446) (2452 . 2453)) nil (25414 33092 869963 466000) 0 nil])
([nil nil ((3035 . 3042)) ((#("linked-" 0 1 (face font-lock-string-face) 1 2 (face font-lock-string-face) 2 3 (face font-lock-string-face) 3 4 (face font-lock-string-face) 4 5 (face font-lock-string-face) 5 6 (face font-lock-string-face) 6 7 (face font-lock-string-face)) . 3035)) (25414 32962 283027 413000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2459) (undo-tree-id6730 . 1)) nil (25414 33092 869963 11000) 0 nil])
([nil nil ((1259 . 1262)) ((#("
  " 0 1 (fontified t face (nxml-tag-delimiter)) 1 3 (fontified t face (nxml-tag-delimiter))) . 1259) (undo-tree-id6570 . -3) (undo-tree-id6571 . -3) (undo-tree-id6572 . -3) (undo-tree-id6573 . -3) (undo-tree-id6574 . -3) (undo-tree-id6575 . -3) (undo-tree-id6576 . -3) (undo-tree-id6577 . -3) (undo-tree-id6578 . -3) (undo-tree-id6579 . -3) (undo-tree-id6580 . -3) (undo-tree-id6581 . -3) (undo-tree-id6582 . -3) (undo-tree-id6583 . -3) (undo-tree-id6584 . -3) (undo-tree-id6585 . -3) (undo-tree-id6586 . -3) (undo-tree-id6587 . -3) (undo-tree-id6588 . -3) (undo-tree-id6589 . -3) (undo-tree-id6590 . -3)) (25414 32961 935084 989000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t face font-lock-comment-face)) . 2455) (undo-tree-id6722 . -4) (undo-tree-id6723 . -4) (undo-tree-id6724 . -4) (undo-tree-id6725 . -4) (undo-tree-id6726 . -4) (undo-tree-id6727 . -4) (undo-tree-id6728 . -4) (undo-tree-id6729 . -4) (2459 . 2460)) nil (25414 33092 869962 134000) 0 nil])
([nil nil ((1262 . 1283)) ((#("<macro name=\"Linked=t" 0 1 (fontified t face (nxml-tag-delimiter)) 1 2 (fontified t face (nxml-element-local-name)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t) 7 8 (fontified t face (nxml-attribute-local-name)) 8 9 (fontified t face (nxml-attribute-local-name)) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t) 12 13 (fontified t face (nxml-text font-lock-string-face)) 13 14 (fontified t face (nxml-text font-lock-string-face)) 14 15 (fontified t face (nxml-text font-lock-string-face)) 15 16 (fontified t face (nxml-text font-lock-string-face)) 16 17 (fontified t face (nxml-text font-lock-string-face)) 17 18 (fontified t face (nxml-text font-lock-string-face)) 18 19 (fontified t face (nxml-text font-lock-string-face)) 19 20 (fontified t face (nxml-text font-lock-string-face)) 20 21 (fontified t face (nxml-text font-lock-string-face))) . 1262) (undo-tree-id6547 . -21) (undo-tree-id6548 . -21) (undo-tree-id6549 . -21) (undo-tree-id6550 . -21) (undo-tree-id6551 . -21) (undo-tree-id6552 . -21) (undo-tree-id6553 . -21) (undo-tree-id6554 . -21) (undo-tree-id6555 . -21) (undo-tree-id6556 . -13) (undo-tree-id6557 . -13) (undo-tree-id6558 . -19) (undo-tree-id6559 . -19) (undo-tree-id6560 . -21) (undo-tree-id6561 . -21) (undo-tree-id6562 . -12) (undo-tree-id6563 . -21) (undo-tree-id6564 . 21) (undo-tree-id6565 . -1) (undo-tree-id6566 . 1) (undo-tree-id6567 . -21) (undo-tree-id6568 . 9) (undo-tree-id6569 . -13)) (25414 32961 596348 823000) 0 nil])
([nil nil ((2456 . 2459)) nil (25414 33092 869157 522000) 0 nil])
([nil nil ((1283 . 1289)) ((#("itle\">" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face (nxml-tag-delimiter))) . 1283) (undo-tree-id6536 . -6) (undo-tree-id6537 . -6) (undo-tree-id6538 . -6) (undo-tree-id6539 . -6) (undo-tree-id6540 . -6) (undo-tree-id6541 . -6) (undo-tree-id6542 . -6) (undo-tree-id6543 . -6) (undo-tree-id6544 . -6) (undo-tree-id6545 . -6) (undo-tree-id6546 . -6)) (25414 32961 180923 806000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -2454) (undo-tree-id6707 . -1) (undo-tree-id6708 . 1) (undo-tree-id6709 . -1) (undo-tree-id6710 . -1) (undo-tree-id6711 . -1) (undo-tree-id6712 . -1) (undo-tree-id6713 . -1) (undo-tree-id6714 . -1) (undo-tree-id6715 . -1) (undo-tree-id6716 . -1) (undo-tree-id6717 . -1) (undo-tree-id6718 . -1) (undo-tree-id6719 . -1) (undo-tree-id6720 . -1) (undo-tree-id6721 . -1) 2455) nil (25414 33092 869156 931000) 0 nil])
([nil nil ((1289 . 1294)) ((#("
    " 0 1 (fontified t) 1 2 (fontified t) 2 5 (fontified t)) . 1289) (undo-tree-id6525 . -5) (undo-tree-id6526 . -5) (undo-tree-id6527 . -5) (undo-tree-id6528 . -5) (undo-tree-id6529 . -5) (undo-tree-id6530 . -5) (undo-tree-id6531 . -5) (undo-tree-id6532 . -5) (undo-tree-id6533 . -5) (undo-tree-id6534 . -5) (undo-tree-id6535 . -5)) (25414 32960 961064 98000) 0 nil])
([nil nil ((2461 . 2463) (2455 . 2457) (2458 . 2459)) nil (25414 33092 869151 871000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1361 . 1362) (nil fontified nil 1361 . 1362) (nil fontified nil 1360 . 1361) (nil fontified nil 1359 . 1360) (nil fontified nil 1358 . 1359) (nil fontified nil 1352 . 1358) (nil fontified nil 1351 . 1352) (nil fontified nil 1350 . 1351) (nil fontified nil 1344 . 1350) (nil fontified nil 1341 . 1344) (nil fontified nil 1340 . 1341) (nil fontified nil 1339 . 1340) (nil fontified nil 1338 . 1339) (nil fontified nil 1333 . 1338) (nil fontified nil 1332 . 1333) (nil fontified nil 1331 . 1332) (nil fontified nil 1322 . 1331) (nil fontified nil 1321 . 1322) (nil fontified nil 1320 . 1321) (nil fontified nil 1315 . 1320) (nil fontified nil 1314 . 1315) (nil fontified nil 1313 . 1314) (nil fontified nil 1312 . 1313) (nil fontified nil 1305 . 1312) (nil fontified nil 1304 . 1305) (nil fontified nil 1300 . 1304) (nil fontified nil 1299 . 1300) (nil fontified nil 1295 . 1299) (nil fontified nil 1294 . 1295) (1294 . 1362)) ((#("	    <text variable=\"title\" text-case=\"title\" font-style=\"italic\"/>
" 0 1 (fontified nil) 1 5 (fontified nil) 5 6 (fontified nil face (nxml-tag-delimiter)) 6 10 (fontified nil face (nxml-element-local-name)) 10 11 (fontified nil) 11 18 (fontified nil face (nxml-attribute-local-name)) 18 19 (fontified nil face (nxml-attribute-local-name)) 19 20 (fontified nil) 20 21 (fontified nil face font-lock-string-face) 21 26 (fontified nil face font-lock-string-face) 26 27 (fontified nil face font-lock-string-face) 27 28 (fontified nil) 28 37 (fontified nil face (nxml-attribute-local-name)) 37 38 (fontified nil) 38 39 (fontified nil face font-lock-string-face) 39 44 (fontified nil face font-lock-string-face) 44 45 (fontified nil face font-lock-string-face) 45 46 (fontified nil) 46 47 (fontified nil face (nxml-attribute-local-name)) 47 50 (fontified nil face (nxml-attribute-local-name)) 50 56 (fontified nil face (nxml-attribute-local-name)) 56 57 (fontified nil) 57 58 (fontified nil face font-lock-string-face) 58 64 (fontified nil face font-lock-string-face) 64 65 (fontified nil face font-lock-string-face) 65 66 (fontified nil face (nxml-tag-slash)) 66 67 (fontified nil face (nxml-tag-delimiter)) 67 68 (rear-nonsticky nil fontified nil)) . 1294) (undo-tree-id6516 . -68) (undo-tree-id6517 . -68) (undo-tree-id6518 . -67) (undo-tree-id6519 . -67) (undo-tree-id6520 . -67) (undo-tree-id6521 . -67) (undo-tree-id6522 . -67) (undo-tree-id6523 . -68) (undo-tree-id6524 . -68) (nil fontified t 1294 . 1295) (nil fontified t 1295 . 1299) (nil fontified t 1299 . 1300) (nil fontified t 1300 . 1304) (nil fontified t 1304 . 1305) (nil fontified t 1305 . 1312) (nil fontified t 1312 . 1313) (nil fontified t 1313 . 1314) (nil fontified t 1314 . 1315) (nil fontified t 1315 . 1320) (nil fontified t 1320 . 1321) (nil fontified t 1321 . 1322) (nil fontified t 1322 . 1331) (nil fontified t 1331 . 1332) (nil fontified t 1332 . 1333) (nil fontified t 1333 . 1338) (nil fontified t 1338 . 1339) (nil fontified t 1339 . 1340) (nil fontified t 1340 . 1341) (nil fontified t 1341 . 1344) (nil fontified t 1344 . 1350) (nil fontified t 1350 . 1351) (nil fontified t 1351 . 1352) (nil fontified t 1352 . 1358) (nil fontified t 1358 . 1359) (nil fontified t 1359 . 1360) (nil fontified t 1360 . 1361) (nil rear-nonsticky t 1361 . 1362)) (25414 32960 702294 233000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2792 . 2793) (nil fontified nil 2792 . 2793) (nil fontified nil 2791 . 2792) (nil fontified nil 2790 . 2791) (nil fontified nil 2789 . 2790) (nil fontified nil 2788 . 2789) (nil fontified nil 2787 . 2788) (nil fontified nil 2786 . 2787) (nil fontified nil 2785 . 2786) (nil fontified nil 2784 . 2785) (nil fontified nil 2782 . 2784) (nil fontified nil 2780 . 2782) (nil fontified nil 2779 . 2780) (nil fontified nil 2778 . 2779) (nil fontified nil 2777 . 2778) (nil fontified nil 2776 . 2777) (nil fontified nil 2775 . 2776) (nil fontified nil 2774 . 2775) (nil fontified nil 2773 . 2774) (nil fontified nil 2772 . 2773) (nil fontified nil 2771 . 2772) (nil fontified nil 2767 . 2771) (nil fontified nil 2766 . 2767) (nil fontified nil 2765 . 2766) (nil fontified nil 2764 . 2765) (nil fontified nil 2763 . 2764) (nil fontified nil 2762 . 2763) (nil fontified nil 2761 . 2762) (nil fontified nil 2760 . 2761) (nil fontified nil 2759 . 2760) (nil fontified nil 2758 . 2759) (nil fontified nil 2757 . 2758) (nil fontified nil 2755 . 2757) (nil fontified nil 2752 . 2755) (nil fontified nil 2751 . 2752) (nil fontified nil 2750 . 2751) (nil fontified nil 2749 . 2750) (nil fontified nil 2748 . 2749) (nil fontified nil 2747 . 2748) (nil fontified nil 2746 . 2747) (nil fontified nil 2745 . 2746) (nil fontified nil 2744 . 2745) (nil fontified nil 2743 . 2744) (nil fontified nil 2742 . 2743) (nil fontified nil 2741 . 2742) (nil fontified nil 2740 . 2741) (nil fontified nil 2739 . 2740) (nil fontified nil 2738 . 2739) (nil fontified nil 2737 . 2738) (nil fontified nil 2736 . 2737) (nil fontified nil 2735 . 2736) (nil fontified nil 2734 . 2735) (nil fontified nil 2733 . 2734) (nil fontified nil 2732 . 2733) (nil fontified nil 2731 . 2732) (nil fontified nil 2730 . 2731) (nil fontified nil 2729 . 2730) (nil fontified nil 2728 . 2729) (nil fontified nil 2727 . 2728) (nil fontified nil 2726 . 2727) (nil fontified nil 2725 . 2726) (nil fontified nil 2724 . 2725) (nil fontified nil 2723 . 2724) (nil fontified nil 2722 . 2723) (nil fontified nil 2721 . 2722) (nil fontified nil 2720 . 2721) (nil fontified nil 2719 . 2720) (nil fontified nil 2718 . 2719) (nil fontified nil 2717 . 2718) (nil fontified nil 2716 . 2717) (nil fontified nil 2715 . 2716) (nil fontified nil 2714 . 2715) (nil fontified nil 2713 . 2714) (nil fontified nil 2712 . 2713) (nil fontified nil 2711 . 2712) (nil fontified nil 2710 . 2711) (nil fontified nil 2709 . 2710) (nil fontified nil 2708 . 2709) (nil fontified nil 2707 . 2708) (nil fontified nil 2706 . 2707) (nil fontified nil 2705 . 2706) (nil fontified nil 2703 . 2705) (nil fontified nil 2702 . 2703) (nil fontified nil 2701 . 2702) (nil fontified nil 2700 . 2701) (nil fontified nil 2699 . 2700) (nil fontified nil 2698 . 2699) (nil fontified nil 2697 . 2698) (nil fontified nil 2696 . 2697) (nil fontified nil 2695 . 2696) (nil fontified nil 2694 . 2695) (nil fontified nil 2693 . 2694) (nil fontified nil 2686 . 2693) (nil fontified nil 2685 . 2686) (nil fontified nil 2684 . 2685) (nil fontified nil 2683 . 2684) (nil fontified nil 2682 . 2683) (nil fontified nil 2681 . 2682) (nil fontified nil 2680 . 2681) (nil fontified nil 2679 . 2680) (nil fontified nil 2678 . 2679) (nil fontified nil 2677 . 2678) (nil fontified nil 2676 . 2677) (nil fontified nil 2675 . 2676) (nil fontified nil 2674 . 2675) (nil fontified nil 2673 . 2674) (nil fontified nil 2672 . 2673) (nil fontified nil 2671 . 2672) (nil fontified nil 2664 . 2671) (nil fontified nil 2663 . 2664) (nil fontified nil 2662 . 2663) (nil fontified nil 2661 . 2662) (nil fontified nil 2660 . 2661) (nil fontified nil 2659 . 2660) (nil fontified nil 2658 . 2659) (nil fontified nil 2657 . 2658) (nil fontified nil 2656 . 2657) (nil fontified nil 2655 . 2656) (nil fontified nil 2649 . 2655) (nil fontified nil 2648 . 2649) (nil fontified nil 2647 . 2648) (nil fontified nil 2646 . 2647) (nil fontified nil 2645 . 2646) (nil fontified nil 2644 . 2645) (nil fontified nil 2643 . 2644) (nil fontified nil 2642 . 2643) (nil fontified nil 2641 . 2642) (nil fontified nil 2640 . 2641) (nil fontified nil 2639 . 2640) (nil fontified nil 2638 . 2639) (nil fontified nil 2637 . 2638) (nil fontified nil 2636 . 2637) (nil fontified nil 2635 . 2636) (nil fontified nil 2634 . 2635) (nil fontified nil 2633 . 2634) (nil fontified nil 2632 . 2633) (nil fontified nil 2631 . 2632) (nil fontified nil 2630 . 2631) (nil fontified nil 2629 . 2630) (nil fontified nil 2628 . 2629) (nil fontified nil 2627 . 2628) (nil fontified nil 2626 . 2627) (nil fontified nil 2625 . 2626) (nil fontified nil 2624 . 2625) (nil fontified nil 2623 . 2624) (nil fontified nil 2622 . 2623) (nil fontified nil 2621 . 2622) (nil fontified nil 2620 . 2621) (nil fontified nil 2619 . 2620) (nil fontified nil 2618 . 2619) (nil fontified nil 2617 . 2618) (nil fontified nil 2616 . 2617) (nil fontified nil 2615 . 2616) (nil fontified nil 2614 . 2615) (nil fontified nil 2612 . 2614) (nil fontified nil 2611 . 2612) (nil fontified nil 2610 . 2611) (nil fontified nil 2609 . 2610) (nil fontified nil 2608 . 2609) (nil fontified nil 2607 . 2608) (nil fontified nil 2606 . 2607) (nil fontified nil 2605 . 2606) (nil fontified nil 2604 . 2605) (nil fontified nil 2603 . 2604) (nil fontified nil 2596 . 2603) (nil fontified nil 2595 . 2596) (nil fontified nil 2594 . 2595) (nil fontified nil 2593 . 2594) (nil fontified nil 2592 . 2593) (nil fontified nil 2591 . 2592) (nil fontified nil 2590 . 2591) (nil fontified nil 2589 . 2590) (nil fontified nil 2588 . 2589) (nil fontified nil 2587 . 2588) (nil fontified nil 2586 . 2587) (nil fontified nil 2585 . 2586) (nil fontified nil 2584 . 2585) (nil fontified nil 2583 . 2584) (nil fontified nil 2582 . 2583) (nil fontified nil 2581 . 2582) (nil fontified nil 2580 . 2581) (nil fontified nil 2579 . 2580) (nil fontified nil 2578 . 2579) (nil fontified nil 2577 . 2578) (nil fontified nil 2576 . 2577) (nil fontified nil 2575 . 2576) (nil fontified nil 2574 . 2575) (nil fontified nil 2573 . 2574) (nil fontified nil 2572 . 2573) (nil fontified nil 2571 . 2572) (nil fontified nil 2570 . 2571) (nil fontified nil 2569 . 2570) (nil fontified nil 2568 . 2569) (nil fontified nil 2567 . 2568) (nil fontified nil 2566 . 2567) (nil fontified nil 2565 . 2566) (nil fontified nil 2564 . 2565) (nil fontified nil 2563 . 2564) (nil fontified nil 2562 . 2563) (nil fontified nil 2561 . 2562) (nil fontified nil 2560 . 2561) (nil fontified nil 2559 . 2560) (nil fontified nil 2558 . 2559) (nil fontified nil 2557 . 2558) (nil fontified nil 2556 . 2557) (nil fontified nil 2555 . 2556) (nil fontified nil 2553 . 2555) (nil fontified nil 2552 . 2553) (nil fontified nil 2551 . 2552) (nil fontified nil 2550 . 2551) (nil fontified nil 2549 . 2550) (nil fontified nil 2548 . 2549) (nil fontified nil 2547 . 2548) (nil fontified nil 2546 . 2547) (nil fontified nil 2545 . 2546) (nil fontified nil 2544 . 2545) (nil fontified nil 2536 . 2544) (nil fontified nil 2535 . 2536) (nil fontified nil 2533 . 2535) (nil fontified nil 2532 . 2533) (nil fontified nil 2531 . 2532) (nil fontified nil 2530 . 2531) (nil fontified nil 2529 . 2530) (nil fontified nil 2528 . 2529) (nil fontified nil 2527 . 2528) (nil fontified nil 2526 . 2527) (nil fontified nil 2525 . 2526) (nil fontified nil 2524 . 2525) (nil fontified nil 2523 . 2524) (nil fontified nil 2522 . 2523) (nil fontified nil 2520 . 2522) (nil fontified nil 2516 . 2520) (nil fontified nil 2515 . 2516) (nil fontified nil 2514 . 2515) (nil fontified nil 2513 . 2514) (nil fontified nil 2512 . 2513) (nil fontified nil 2511 . 2512) (nil fontified nil 2510 . 2511) (nil fontified nil 2509 . 2510) (nil fontified nil 2508 . 2509) (nil fontified nil 2507 . 2508) (nil fontified nil 2506 . 2507) (nil fontified nil 2505 . 2506) (nil fontified nil 2504 . 2505) (nil fontified nil 2503 . 2504) (nil fontified nil 2502 . 2503) (nil fontified nil 2501 . 2502) (nil fontified nil 2500 . 2501) (nil fontified nil 2499 . 2500) (nil fontified nil 2498 . 2499) (nil fontified nil 2497 . 2498) (nil fontified nil 2496 . 2497) (nil fontified nil 2495 . 2496) (nil fontified nil 2494 . 2495) (nil fontified nil 2493 . 2494) (nil fontified nil 2489 . 2493) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2478 . 2479) (nil fontified nil 2477 . 2478) (nil fontified nil 2476 . 2477) (nil fontified nil 2475 . 2476) (nil fontified nil 2474 . 2475) (nil fontified nil 2473 . 2474) (nil fontified nil 2472 . 2473) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2464 . 2465) (nil fontified nil 2463 . 2464) (nil fontified nil 2461 . 2463) (2461 . 2793)) nil (25414 33092 869148 987000) 0 nil])
([nil nil ((1363 . 1368) (#("	    " 0 5 (fontified nil)) . 1362) (1362 . 1367) (1362 . 1363)) ((#("
" 0 1 (fontified nil)) . 1362) (undo-tree-id6509 . -1) (undo-tree-id6510 . -1) (undo-tree-id6511 . -1) (undo-tree-id6512 . -1) (#("	    " 0 5 (fontified nil)) . 1362) (1362 . 1367) (#("	    " 0 1 (fontified t) 1 2 (fontified t) 2 5 (fontified t)) . 1363) (undo-tree-id6513 . -5) (undo-tree-id6514 . -5) (undo-tree-id6515 . -5)) (25414 32960 419652 44000) 0 nil])
([nil nil ((#("      <choose>" 0 4 (fontified t) 4 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-tag-delimiter))) . 2516) (undo-tree-id6706 . -14)) nil (25414 33092 869137 711000) 0 nil])
([nil nil ((1368 . 1369)) ((#("<" 0 1 (fontified t)) . 1368) (undo-tree-id6506 . -1) (undo-tree-id6507 . -1) (undo-tree-id6508 . -1)) (25414 32960 208239 646000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2516) (undo-tree-id6705 . -1)) nil (25414 33092 869137 36000) 0 nil])
([nil nil ((#("	    " 0 1 (fontified nil) 1 2 (fontified nil) 2 5 (fontified t)) . -1365) (undo-tree-id6290 . -5) (undo-tree-id6292 . -5) (undo-tree-id6294 . -5) (1365 . 1366) (#("	" 0 1 (fontified nil)) . 1365) (1363 . 1365) (1369 . 1370)) ((#("/" 0 1 (fontified t face (nxml-tag-slash))) . 1369) (undo-tree-id6502 . -1) (undo-tree-id6503 . -1) (undo-tree-id6504 . -1) (#("  " 0 1 (fontified t) 1 2 (fontified t)) . 1363) (undo-tree-id6505 . -2) (1365 . 1366) (#("	" 0 1 (fontified nil)) . 1365) (1365 . 1370)) (25414 32959 998812 879000) 0 nil])
([nil nil ((#("	<if variable=\"DOI\">" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t) 5 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face (nxml-tag-delimiter))) . 2516) (undo-tree-id6703 . 20) (undo-tree-id6704 . -20)) nil (25414 33092 869136 109000) 0 nil])
([nil nil ((1367 . 1374)) ((#("m,acro>" 0 1 (fontified t face (nxml-element-local-name)) 1 2 (fontified t face (nxml-text)) 2 3 (fontified t face (nxml-text)) 3 4 (fontified t face (nxml-text)) 4 5 (fontified t face (nxml-text)) 5 6 (fontified t face (nxml-text)) 6 7 (fontified t face (nxml-text))) . 1367) (undo-tree-id6498 . -2) (undo-tree-id6499 . -2) (undo-tree-id6500 . 5) (undo-tree-id6501 . -1)) (25414 32959 800326 18000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 2516) (undo-tree-id6701 . 1) (undo-tree-id6702 . -1)) nil (25414 33092 869135 262000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face (nxml-text))) . -1368) (undo-tree-id6283 . -1) (undo-tree-id6285 . -1) (undo-tree-id6287 . -1) 1369) ((1368 . 1369)) (25414 32959 573069 139000) 0 nil])
([nil nil ((#("	  <text variable=\"DOI\"/>" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face (nxml-tag-slash)) 24 25 (fontified t face (nxml-tag-delimiter))) . 2516) (undo-tree-id6699 . 25) (undo-tree-id6700 . -25)) nil (25414 33092 869134 390000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-string-face)) . -1281) (undo-tree-id6279 . -1) (undo-tree-id6281 . -1) 1282) ((1281 . 1282)) (25414 32959 364883 930000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2516) (undo-tree-id6697 . 1) (undo-tree-id6698 . -1)) nil (25414 33092 869133 460000) 0 nil])
([nil nil ((1281 . 1282)) ((#("-" 0 1 (fontified t face font-lock-string-face)) . 1281)) (25414 32959 31616 652000) 0 nil])
([nil nil ((#("    <group delimiter=\". \">" 0 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t face (nxml-attribute-local-name)) 20 21 (fontified t) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-delimiter))) . 2489) (undo-tree-id6696 . -26)) nil (25414 33092 869132 490000) 0 nil])
([nil nil ((#("L" 0 1 (fontified t face font-lock-string-face)) . -1275) (undo-tree-id6273 . -1) (undo-tree-id6275 . -1) (undo-tree-id6277 . -1) 1276) ((1275 . 1276)) (25414 32958 661788 211000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2489) (undo-tree-id6671 . -1) (undo-tree-id6672 . -1) (undo-tree-id6673 . -1) (undo-tree-id6674 . -1) (undo-tree-id6675 . -1) (undo-tree-id6676 . -1) (undo-tree-id6677 . -1) (undo-tree-id6678 . -1) (undo-tree-id6679 . -1) (undo-tree-id6680 . -1) (undo-tree-id6681 . -1) (undo-tree-id6682 . -1) (undo-tree-id6683 . -1) (undo-tree-id6684 . -1) (undo-tree-id6685 . -1) (undo-tree-id6686 . -1) (undo-tree-id6687 . -1) (undo-tree-id6688 . -1) (undo-tree-id6689 . -1) (undo-tree-id6690 . -1) (undo-tree-id6691 . -1) (undo-tree-id6692 . -1) (undo-tree-id6693 . -1) (undo-tree-id6694 . -1) (undo-tree-id6695 . -1)) nil (25414 33092 869131 572000) 0 nil])
([nil nil ((1275 . 1276)) ((#("l" 0 1 (fontified t face font-lock-string-face)) . 1275)) (25414 32958 315137 533000) 0 nil])
([nil nil ((#("	</if>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-slash)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-tag-delimiter))) . 2489) (undo-tree-id6665 . -1) (undo-tree-id6666 . -6) (undo-tree-id6667 . 3) (undo-tree-id6668 . -5) (undo-tree-id6669 . 6) (undo-tree-id6670 . -6)) nil (25414 33092 869122 489000) 0 nil])
([nil nil ((#("	    " 0 1 (fontified t) 1 5 (fontified t)) . -1294) 1302) ((1294 . 1299)) (25414 32957 940376 751000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2489) (undo-tree-id6663 . 1) (undo-tree-id6664 . -1)) nil (25414 33092 869119 378000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . -1356) (undo-tree-id6265 . -1) (undo-tree-id6267 . -1) (undo-tree-id6269 . -1) (undo-tree-id6271 . -1) 1357) ((1356 . 1357) (t 25414 32857 152024 323000)) (25414 32957 648215 826000) 0 nil])
([nil nil ((#("	<else-if variable=\"URL\">" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 11 (fontified t face (nxml-attribute-local-name)) 11 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face (nxml-tag-delimiter))) . 2489) (undo-tree-id6661 . 25) (undo-tree-id6662 . -25)) nil (25414 33092 869118 348000) 0 nil])
([nil nil ((#("  <macro name=\"linked-title\">" 0 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face (nxml-tag-delimiter))) . 1260) (undo-tree-id6497 . -29) (t 25414 32857 152024 323000)) ((1260 . 1289)) (25414 32957 275877 417000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 2489) (undo-tree-id6659 . 1) (undo-tree-id6660 . -1)) nil (25414 33092 869117 420000) 0 nil])
([nil nil ((#("
" 0 1 (face (nxml-tag-delimiter) fontified t)) . 1260) (undo-tree-id6495 . 1) (undo-tree-id6496 . -1)) ((1260 . 1261)) (25414 32957 4327 228000) 0 nil])
([nil nil ((#("	  <text variable=\"URL\"/>" 0 1 (fontified t) 1 3 (fontified t) 3 4 (fontified t face (nxml-tag-delimiter)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face (nxml-tag-slash)) 24 25 (fontified t face (nxml-tag-delimiter))) . 2489) (undo-tree-id6657 . 25) (undo-tree-id6658 . -25)) nil (25414 33092 869116 397000) 0 nil])
([nil nil ((#("    <text variable=\"title\" text-case=\"title\" font-style=\"italic\"/>" 0 1 (face (nxml-tag-delimiter) fontified t) 1 4 (face (nxml-tag-delimiter) fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t) 10 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t) 19 20 (fontified t face font-lock-string-face) 20 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t) 27 36 (fontified t face (nxml-attribute-local-name)) 36 37 (fontified t) 37 38 (fontified t face font-lock-string-face) 38 43 (fontified t face font-lock-string-face) 43 44 (fontified t face font-lock-string-face) 44 45 (fontified t) 45 46 (fontified t face (nxml-attribute-local-name)) 46 49 (fontified t face (nxml-attribute-local-name)) 49 55 (fontified t face (nxml-attribute-local-name)) 55 56 (fontified t) 56 57 (fontified t face font-lock-string-face) 57 63 (fontified t face font-lock-string-face) 63 64 (fontified t face font-lock-string-face) 64 65 (fontified t face (nxml-tag-slash)) 65 66 (fontified t face (nxml-tag-delimiter))) . 1260) (undo-tree-id6485 . -4) (undo-tree-id6486 . -66) (undo-tree-id6487 . -4) (undo-tree-id6488 . -66) (undo-tree-id6489 . -66) (undo-tree-id6490 . -66) (undo-tree-id6491 . -66) (undo-tree-id6492 . -66) (undo-tree-id6493 . 66) (undo-tree-id6494 . -66)) ((1260 . 1326)) (25414 32956 641791 534000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2489) (undo-tree-id6655 . 1) (undo-tree-id6656 . -1)) nil (25414 33092 869115 254000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1260) (undo-tree-id6483 . 1) (undo-tree-id6484 . -1)) ((1260 . 1261)) (25414 32956 218285 271000) 0 nil])
([nil nil ((#("	</else-if>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-slash)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 2489) (undo-tree-id6653 . 11) (undo-tree-id6654 . -11)) nil (25414 33092 869114 350000) 0 nil])
([nil nil ((#("  </macro>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-tag-slash)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-tag-delimiter))) . 1260) (undo-tree-id6481 . 10) (undo-tree-id6482 . -10)) ((1260 . 1270)) (25414 32954 802225 206000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2489) (undo-tree-id6651 . 1) (undo-tree-id6652 . -1)) nil (25414 33092 869113 319000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1260) (undo-tree-id6479 . 1) (undo-tree-id6480 . -1)) ((1260 . 1261)) (25414 32954 394422 302000) 0 nil])
([nil nil ((#("      </choose>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 8 (fontified t face (nxml-tag-slash)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-tag-delimiter))) . 2489) (undo-tree-id6645 . -6) (undo-tree-id6646 . -15) (undo-tree-id6647 . 7) (undo-tree-id6648 . -14) (undo-tree-id6649 . 15) (undo-tree-id6650 . -15)) nil (25414 33092 869112 307000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3050) (undo-tree-id6478 . -1)) ((3050 . 3051)) (25414 32954 150753 747000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2489) (undo-tree-id6643 . 1) (undo-tree-id6644 . -1)) nil (25414 33092 869109 747000) 0 nil])
nil
([nil nil ((#("      <choose>" 0 1 (fontified t) 1 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-tag-delimiter))) . 2489) (undo-tree-id6642 . -14)) nil (25414 33092 869108 504000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2489) (undo-tree-id6640 . 1) (undo-tree-id6641 . -1)) nil (25414 33092 869107 822000) 0 nil])
([nil nil ((#("	<if variable=\"ISBN\">" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t) 5 6 (fontified t face (nxml-attribute-local-name)) 6 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face (nxml-tag-delimiter))) . 2489) (undo-tree-id6639 . -21)) nil (25414 33092 869106 662000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 2489) (undo-tree-id6637 . 1) (undo-tree-id6638 . -1)) nil (25414 33092 869105 960000) 0 nil])
([nil nil ((#("	  " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified t)) . -2493) (undo-tree-id6635 . 2) (2493 . 2494) (#("	" 0 1 (fontified nil)) . 2493) (undo-tree-id6636 . 1) (2489 . 2493)) nil (25414 33092 869104 349000) 0 nil])
([nil nil ((#("	</if>" 0 1 (fontified t) 1 2 (fontified t face (nxml-tag-delimiter)) 2 3 (fontified t face (nxml-tag-slash)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-tag-delimiter))) . 2532) (undo-tree-id6630 . 3) (undo-tree-id6631 . -5) (undo-tree-id6632 . -1) (undo-tree-id6633 . -6) (undo-tree-id6634 . -6)) nil (25414 33092 869103 197000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 2532) (undo-tree-id6628 . 1) (undo-tree-id6629 . -1)) nil (25414 33092 869101 246000) 0 nil])
([nil nil ((#("      </choose>" 0 1 (fontified t) 1 4 (fontified t) 4 6 (fontified t) 6 7 (fontified t face (nxml-tag-delimiter)) 7 8 (fontified t face (nxml-tag-slash)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-tag-delimiter))) . 2532) (undo-tree-id6622 . 7) (undo-tree-id6623 . -14) (undo-tree-id6624 . -6) (undo-tree-id6625 . -15) (undo-tree-id6626 . 15) (undo-tree-id6627 . -15)) nil (25414 33092 869100 279000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2532) (undo-tree-id6620 . 1) (undo-tree-id6621 . -1)) nil (25414 33092 869097 283000) 0 nil])
([nil nil ((#("    </group>" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 6 (fontified t face (nxml-tag-slash)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-tag-delimiter))) . 2532) (undo-tree-id6614 . 6) (undo-tree-id6615 . -11) (undo-tree-id6616 . -4) (undo-tree-id6617 . -12) (undo-tree-id6618 . 12) (undo-tree-id6619 . -12)) nil (25414 33092 869096 123000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2532) (undo-tree-id6612 . 1) (undo-tree-id6613 . -1)) nil (25414 33092 869093 540000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -2534) 2532) nil (25414 33092 869092 346000) 0 nil])
([nil nil ((#("  " 0 1 (fontified t) 1 2 (fontified t)) . -2543) (undo-tree-id6606 . -2) (undo-tree-id6607 . -2) (undo-tree-id6608 . -2) (undo-tree-id6609 . -2) (undo-tree-id6610 . -2) (undo-tree-id6611 . -2) 2534) nil (25414 33092 869090 254000) 0 nil])
([nil nil ((#("	    <group delimiter=\"\">
" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t face (nxml-attribute-local-name)) 20 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face (nxml-tag-delimiter)) 25 26 (fontified t)) . 3602) (undo-tree-id6855 . -26) (undo-tree-id6856 . -26) 3628 (t 25414 33092 882518 789000)) nil (25414 33197 17856 631000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3552 . 3553) (nil fontified nil 3552 . 3553) (nil fontified nil 3551 . 3552) (nil fontified nil 3550 . 3551) (nil fontified nil 3549 . 3550) (nil fontified nil 3548 . 3549) (nil fontified nil 3547 . 3548) (nil fontified nil 3546 . 3547) (nil fontified nil 3545 . 3546) (nil fontified nil 3544 . 3545) (nil fontified nil 3543 . 3544) (nil fontified nil 3542 . 3543) (nil fontified nil 3541 . 3542) (nil fontified nil 3540 . 3541) (nil fontified nil 3539 . 3540) (nil fontified nil 3538 . 3539) (nil fontified nil 3533 . 3538) (nil fontified nil 3532 . 3533) (nil fontified nil 3528 . 3532) (nil fontified nil 3527 . 3528) (3527 . 3553)) nil (25414 33197 17839 919000) 0 nil])
([nil nil ((3558 . 3560) 3553) nil (25414 33197 17838 871000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3605) (#(" " 0 1 (fontified t)) . 3605) (#("	" 0 1 (fontified t)) . 3605) (#("	" 0 1 (fontified t)) . 3605) (#("
" 0 1 (fontified t)) . 3605)) nil (25414 33197 17837 801000) 0 nil])
([nil nil ((3605 . 3606)) nil (25414 33197 17837 248000) 0 nil])
([nil nil ((3550 . 3551)) nil (25414 33197 17836 971000) 0 nil])
([nil nil ((3633 . 3640) (3606 . 3613) (#(" " 0 1 (fontified t)) . 3606) (undo-tree-id6854 . -1) (3626 . 3627)) nil (25414 33197 17836 347000) 0 nil])
([nil nil ((3640 . 3661)) nil (25414 33197 17835 573000) 0 nil])
([nil nil ((3663 . 3664) (#("      " 0 6 (fontified t)) . 3663) 3690) nil (25414 33197 17835 318000) 0 nil])
([nil nil ((3710 . 3711) (#("      " 0 6 (fontified t)) . 3710) 3724) nil (25414 33197 17834 960000) 0 nil])
([nil nil ((#("		<choose>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-tag-delimiter))) . 3709) (undo-tree-id6851 . -10) (undo-tree-id6852 . -10) (undo-tree-id6853 . -10)) nil (25414 33197 17834 546000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3709) (undo-tree-id6849 . 1) (undo-tree-id6850 . -1)) nil (25414 33197 17833 320000) 0 nil])
([nil nil ((#("		<if variable=\"number\">" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t) 6 7 (fontified t face (nxml-attribute-local-name)) 7 8 (fontified t face (nxml-attribute-local-name)) 8 9 (fontified t face (nxml-attribute-local-name)) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face (nxml-tag-delimiter))) . 3709) (undo-tree-id6844 . -10) (undo-tree-id6845 . -10) (undo-tree-id6846 . -10) (undo-tree-id6847 . -10) (undo-tree-id6848 . -24)) nil (25414 33197 17832 333000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3709) (undo-tree-id6842 . 1) (undo-tree-id6843 . -1)) nil (25414 33197 17830 459000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3711) 3709) nil (25414 33197 17829 330000) 0 nil])
([nil nil ((#("		</if>" 0 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-tag-slash)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-tag-delimiter))) . 3759) (undo-tree-id6837 . 3) (undo-tree-id6838 . -6) (undo-tree-id6839 . -2) (undo-tree-id6840 . -7) (undo-tree-id6841 . -7)) nil (25414 33197 17828 893000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3759) (undo-tree-id6835 . 1) (undo-tree-id6836 . -1)) nil (25414 33197 17826 813000) 0 nil])
([nil nil ((#("	      </choose>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-element-local-name)) 15 16 (fontified t face (nxml-tag-delimiter))) . 3759) (undo-tree-id6831 . -7) (undo-tree-id6832 . -16) (undo-tree-id6833 . 16) (undo-tree-id6834 . -16)) nil (25414 33197 17825 757000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3759) (undo-tree-id6829 . 1) (undo-tree-id6830 . -1)) nil (25414 33197 17806 782000) 0 nil])
([nil nil ((3760 . 3761) (#("      " 0 6 (fontified t)) . 3760) 3759) nil (25414 33197 17805 752000) 0 nil])
([nil nil ((#("choose" 0 1 (fontified t face (nxml-element-local-name)) 1 2 (fontified t face (nxml-element-local-name)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name))) . -3762) (undo-tree-id6828 . -6) 3768) nil (25414 33197 17804 982000) 0 nil])
([nil nil ((3762 . 3764)) nil (25414 33197 17804 424000) 0 nil])
([nil nil ((3764 . 3767)) nil (25414 33197 17804 248000) 0 nil])
([nil nil ((#("	" 0 1 (fontified nil)) . -3766) (3766 . 3767) (#("	" 0 1 (fontified nil)) . 3766) (undo-tree-id6814 . -1) (undo-tree-id6815 . -1) (undo-tree-id6816 . -1) (undo-tree-id6817 . -1) (undo-tree-id6818 . -1) (undo-tree-id6819 . -1) (undo-tree-id6820 . -1) (undo-tree-id6821 . -1) (undo-tree-id6822 . -1) (undo-tree-id6823 . -1) (undo-tree-id6824 . -1) (undo-tree-id6825 . -1) (undo-tree-id6826 . -1) (undo-tree-id6827 . -1) (3760 . 3766) (3762 . 3763)) nil (25414 33197 17803 649000) 0 nil])
([nil nil ((#("	      </group>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-tag-delimiter))) . 3759) (undo-tree-id6765 . -7) (undo-tree-id6766 . -7) (undo-tree-id6767 . -7) (undo-tree-id6768 . -7) (undo-tree-id6769 . -7) (undo-tree-id6770 . -7) (undo-tree-id6771 . -7) (undo-tree-id6772 . -7) (undo-tree-id6773 . -8) (undo-tree-id6774 . -7) (undo-tree-id6775 . -8) (undo-tree-id6776 . -8) (undo-tree-id6777 . -8) (undo-tree-id6778 . -8) (undo-tree-id6779 . -10) (undo-tree-id6780 . -7) (undo-tree-id6781 . -8) (undo-tree-id6782 . -10) (undo-tree-id6783 . -11) (undo-tree-id6784 . -7) (undo-tree-id6785 . -10) (undo-tree-id6786 . -11) (undo-tree-id6787 . -12) (undo-tree-id6788 . -7) (undo-tree-id6789 . -11) (undo-tree-id6790 . -12) (undo-tree-id6791 . -13) (undo-tree-id6792 . -7) (undo-tree-id6793 . -12) (undo-tree-id6794 . -13) (undo-tree-id6795 . -14) (undo-tree-id6796 . -7) (undo-tree-id6797 . -13) (undo-tree-id6798 . -14) (undo-tree-id6799 . -14) (undo-tree-id6800 . -14) (undo-tree-id6801 . -14) (undo-tree-id6802 . -14) (undo-tree-id6803 . -8) (undo-tree-id6804 . -8) (undo-tree-id6805 . -9) (undo-tree-id6806 . -9) (undo-tree-id6807 . -9) (undo-tree-id6808 . -9) (undo-tree-id6809 . -9) (undo-tree-id6810 . -9) (undo-tree-id6811 . -9) (undo-tree-id6812 . -9) (undo-tree-id6813 . -15)) nil (25414 33197 17798 733000) 0 nil])
([nil nil ((#("
" 0 1 (face (nxml-text) fontified t)) . 3759) (undo-tree-id6763 . 1) (undo-tree-id6764 . -1)) nil (25414 33197 17766 831000) 0 nil])
([nil nil ((#("		<if variable=\"page\">" 0 1 (face (nxml-text) fontified t) 1 2 (face (nxml-text) fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t) 6 7 (fontified t face (nxml-attribute-local-name)) 7 8 (fontified t face (nxml-attribute-local-name)) 8 9 (fontified t face (nxml-attribute-local-name)) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face (nxml-tag-delimiter))) . 3759) (undo-tree-id6762 . -22)) nil (25414 33197 17765 339000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3759) (undo-tree-id6760 . 1) (undo-tree-id6761 . -1)) nil (25414 33197 17764 616000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -3761) 3759) nil (25414 33197 17763 584000) 0 nil])
([nil nil ((#("</if>" 0 1 (fontified t face (nxml-tag-delimiter)) 1 2 (fontified t face (nxml-tag-slash)) 2 3 (fontified t face (nxml-element-local-name)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-tag-delimiter))) . 3802) (undo-tree-id6756 . 3) (undo-tree-id6757 . -4) (undo-tree-id6758 . -5) (undo-tree-id6759 . -5)) nil (25414 33197 17763 210000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3802) (undo-tree-id6753 . -1) (undo-tree-id6754 . 1) (undo-tree-id6755 . -1)) nil (25414 33197 17761 323000) 0 nil])
([nil nil ((#("		      " 0 1 (fontified nil) 1 2 (fontified nil) 2 8 (fontified t)) . -3807) (undo-tree-id6740 . -8) (undo-tree-id6741 . 7) (3807 . 3808) (#("	" 0 1 (fontified nil)) . 3807) (undo-tree-id6742 . -1) (undo-tree-id6743 . -1) (undo-tree-id6744 . -1) (undo-tree-id6745 . -1) (undo-tree-id6746 . -1) (undo-tree-id6747 . -1) (undo-tree-id6748 . -1) (undo-tree-id6749 . -1) (undo-tree-id6750 . -1) (undo-tree-id6751 . -1) (undo-tree-id6752 . 1) (3801 . 3807) 3802) nil (25414 33197 17741 926000) 0 nil])
([nil nil ((#("choose" 0 6 (fontified t face (nxml-element-local-name))) . -3809) (undo-tree-id6739 . -6) 3815) nil (25414 33197 17735 36000) 0 nil])
([nil nil ((3809 . 3814)) nil (25414 33197 17728 530000) 0 nil])
([nil nil ((#("		<choose>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-element-local-name)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-tag-delimiter))) . 4267) (undo-tree-id7039 . -10) (t 25414 33197 31264 581000)) nil (25414 33384 506029 410000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4267) (undo-tree-id7037 . 1) (undo-tree-id7038 . -1)) nil (25414 33384 506028 641000) 0 nil])
([nil nil ((#("		  <if variable=\"page\">" 0 1 (fontified t) 1 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 9 (fontified t face (nxml-attribute-local-name)) 9 10 (fontified t face (nxml-attribute-local-name)) 10 11 (fontified t face (nxml-attribute-local-name)) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face (nxml-tag-delimiter))) . 4267) (undo-tree-id7035 . 24) (undo-tree-id7036 . -24)) nil (25414 33384 506027 435000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4267) (undo-tree-id7033 . 1) (undo-tree-id7034 . -1)) nil (25414 33384 506026 341000) 0 nil])
([nil nil ((#("    " 0 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t)) . -4269) 4267) nil (25414 33384 506025 207000) 0 nil])
([nil nil ((#("		  </if>" 0 2 (fontified t) 2 4 (fontified t) 4 5 (fontified t face (nxml-tag-delimiter)) 5 6 (fontified t face (nxml-tag-slash)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-tag-delimiter))) . 4308) (undo-tree-id7022 . -2) (undo-tree-id7023 . -2) (undo-tree-id7024 . -4) (undo-tree-id7025 . -9) (undo-tree-id7026 . -2) (undo-tree-id7027 . -2) (undo-tree-id7028 . 3) (undo-tree-id7029 . -8) (undo-tree-id7030 . -2) (undo-tree-id7031 . -2) (undo-tree-id7032 . -9)) nil (25414 33384 506024 717000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 4308) (undo-tree-id7020 . 1) (undo-tree-id7021 . -1)) nil (25414 33384 506019 583000) 0 nil])
([nil nil ((#("		</choose>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 4 (fontified t face (nxml-tag-slash)) 4 5 (fontified t face (nxml-element-local-name)) 5 6 (fontified t face (nxml-element-local-name)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t face (nxml-tag-delimiter))) . 4308) (undo-tree-id7016 . -2) (undo-tree-id7017 . -11) (undo-tree-id7018 . 11) (undo-tree-id7019 . -11)) nil (25414 33384 506018 621000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4308) (undo-tree-id7014 . 1) (undo-tree-id7015 . -1)) nil (25414 33384 506017 104000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4096)) nil (25414 33384 506016 166000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4096) (undo-tree-id7011 . 1) (#("	" 0 1 (fontified t)) . 4096) (undo-tree-id7012 . 1) (#("	" 0 1 (fontified t)) . 4096) (undo-tree-id7013 . 1)) nil (25414 33384 506015 604000) 0 nil])
([nil nil ((#("	    <text variable=\"title\" text-case=\"title\"/>
" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 16 (fontified t face (nxml-attribute-local-name)) 16 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 22 (fontified t face font-lock-string-face) 22 24 (fontified t face font-lock-string-face) 24 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t) 28 29 (fontified t face (nxml-attribute-local-name)) 29 30 (fontified t face (nxml-attribute-local-name)) 30 33 (fontified t face (nxml-attribute-local-name)) 33 34 (fontified t face (nxml-attribute-local-name)) 34 36 (fontified t face (nxml-attribute-local-name)) 36 37 (fontified t face (nxml-attribute-local-name)) 37 38 (fontified t) 38 42 (fontified t face font-lock-string-face) 42 44 (fontified t face font-lock-string-face) 44 45 (fontified t face font-lock-string-face) 45 46 (fontified t face (nxml-tag-slash)) 46 47 (fontified t face (nxml-tag-delimiter)) 47 48 (fontified t)) . -4612) (undo-tree-id7006 . -48) (undo-tree-id7007 . -48) (undo-tree-id7008 . -48) (undo-tree-id7009 . -48) (undo-tree-id7010 . -48)) nil (25414 33384 506014 141000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4679 . 4680) (nil fontified nil 4679 . 4680) (nil fontified nil 4678 . 4679) (nil fontified nil 4677 . 4678) (nil fontified nil 4676 . 4677) (nil fontified nil 4670 . 4676) (nil fontified nil 4669 . 4670) (nil fontified nil 4668 . 4669) (nil fontified nil 4659 . 4668) (nil fontified nil 4658 . 4659) (nil fontified nil 4657 . 4658) (nil fontified nil 4656 . 4657) (nil fontified nil 4651 . 4656) (nil fontified nil 4650 . 4651) (nil fontified nil 4649 . 4650) (nil fontified nil 4640 . 4649) (nil fontified nil 4639 . 4640) (nil fontified nil 4638 . 4639) (nil fontified nil 4633 . 4638) (nil fontified nil 4632 . 4633) (nil fontified nil 4631 . 4632) (nil fontified nil 4623 . 4631) (nil fontified nil 4622 . 4623) (nil fontified nil 4619 . 4622) (nil fontified nil 4618 . 4619) (nil fontified nil 4617 . 4618) (nil fontified nil 4613 . 4617) (nil fontified nil 4612 . 4613) (4612 . 4680)) nil (25414 33384 506011 795000) 0 nil])
([nil nil ((#("	    <group delimiter=\" \">" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 11 (fontified t face (nxml-element-local-name)) 11 12 (fontified t) 12 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-delimiter))) . 4680) (undo-tree-id7005 . -26)) nil (25414 33384 506010 2000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4680) (undo-tree-id7003 . 1) (undo-tree-id7004 . -1)) nil (25414 33384 506009 388000) 0 nil])
([nil nil ((#("	      <text variable=\"genre\"/>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t) 13 21 (fontified t face (nxml-attribute-local-name)) 21 22 (fontified t) 22 29 (fontified t face font-lock-string-face) 29 30 (fontified t face (nxml-tag-slash)) 30 31 (fontified t face (nxml-tag-delimiter))) . 4680) (undo-tree-id7001 . 31) (undo-tree-id7002 . -31)) nil (25414 33384 506008 443000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4680) (undo-tree-id6999 . 1) (undo-tree-id7000 . -1)) nil (25414 33384 506006 729000) 0 nil])
([nil nil ((#("	      <group delimiter=\" \">" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 13 (fontified t face (nxml-element-local-name)) 13 14 (fontified t) 14 17 (fontified t face (nxml-attribute-local-name)) 17 23 (fontified t face (nxml-attribute-local-name)) 23 24 (fontified t) 24 27 (fontified t face font-lock-string-face) 27 28 (fontified t face (nxml-tag-delimiter))) . 4680) (undo-tree-id6997 . 28) (undo-tree-id6998 . -28)) nil (25414 33384 506005 705000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4680) (undo-tree-id6995 . 1) (undo-tree-id6996 . -1)) nil (25414 33384 506004 397000) 0 nil])
([nil nil ((#("		<text term=\"issue\" form=\"short\" text-case=\"capitalize-first\"/>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t) 13 20 (fontified t face font-lock-string-face) 20 21 (fontified t) 21 25 (fontified t face (nxml-attribute-local-name)) 25 26 (fontified t) 26 29 (fontified t face font-lock-string-face) 29 33 (fontified t face font-lock-string-face) 33 34 (fontified t) 34 42 (fontified t face (nxml-attribute-local-name)) 42 43 (fontified t face (nxml-attribute-local-name)) 43 44 (fontified t) 44 46 (fontified t face font-lock-string-face) 46 62 (fontified t face font-lock-string-face) 62 63 (fontified t face (nxml-tag-slash)) 63 64 (fontified t face (nxml-tag-delimiter))) . 4680) (undo-tree-id6993 . 64) (undo-tree-id6994 . -64)) nil (25414 33384 506003 319000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4680) (undo-tree-id6991 . 1) (undo-tree-id6992 . -1)) nil (25414 33384 506002 385000) 0 nil])
([nil nil ((#("		<text variable=\"number\"/>" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t face (nxml-tag-delimiter)) 3 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t) 8 13 (fontified t face (nxml-attribute-local-name)) 13 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t) 17 25 (fontified t face font-lock-string-face) 25 26 (fontified t face (nxml-tag-slash)) 26 27 (fontified t face (nxml-tag-delimiter))) . 4680) (undo-tree-id6990 . -27)) nil (25414 33384 506001 219000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4680) (undo-tree-id6988 . 1) (undo-tree-id6989 . -1)) nil (25414 33384 506000 501000) 0 nil])
([nil nil ((#("	      </group>" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face (nxml-tag-delimiter)) 8 9 (fontified t face (nxml-tag-slash)) 9 14 (fontified t face (nxml-element-local-name)) 14 15 (fontified t face (nxml-tag-delimiter))) . 4680) (undo-tree-id6987 . -15)) nil (25414 33384 505999 125000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4680) (undo-tree-id6985 . 1) (undo-tree-id6986 . -1)) nil (25414 33384 505998 352000) 0 nil])
([nil nil ((#("	    </group>" 0 1 (fontified t) 1 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-tag-slash)) 7 12 (fontified t face (nxml-element-local-name)) 12 13 (fontified t face (nxml-tag-delimiter))) . 4680) (undo-tree-id6982 . -5) (undo-tree-id6983 . -13) (undo-tree-id6984 . -13)) nil (25414 33384 505997 90000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4680) (undo-tree-id6980 . 1) (undo-tree-id6981 . -1)) nil (25414 33384 505995 701000) 0 nil])
([nil nil ((4684 . 4689) (4657 . 4662) (#(" " 0 1 (fontified t)) . 4657) (4679 . 4680)) nil (25414 33384 505993 965000) 0 nil])
([nil nil ((4689 . 4710)) nil (25414 33384 505993 401000) 0 nil])
([nil nil ((4710 . 4713)) nil (25414 33384 505993 162000) 0 nil])
([nil nil ((4713 . 4714)) nil (25414 33384 505992 962000) 0 nil])
([nil nil ((4714 . 4715)) nil (25414 33384 505992 734000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t face (nxml-attribute-local-name))) . -4702) (undo-tree-id6979 . -1) 4703) nil (25414 33384 505992 377000) 0 nil])
([nil nil ((4695 . 4716)) nil (25414 33384 505991 328000) 0 nil])
([nil nil ((4716 . 4722)) nil (25414 33384 505991 28000) 0 nil])
([nil nil ((4806 . 4812)) nil (25414 33384 505990 659000) 0 nil])
([nil nil ((4812 . 4814)) nil (25414 33384 505990 335000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face (nxml-tag-delimiter))) . -4811) (undo-tree-id6932 . -1) (undo-tree-id6933 . -1) (undo-tree-id6934 . -1) (undo-tree-id6935 . -1) (undo-tree-id6936 . -1) (undo-tree-id6937 . -1) (undo-tree-id6938 . -1) (undo-tree-id6939 . -1) (undo-tree-id6940 . -1) (undo-tree-id6941 . -1) (undo-tree-id6942 . -1) (undo-tree-id6943 . -1) (undo-tree-id6944 . -1) (undo-tree-id6945 . -1) (undo-tree-id6946 . -1) (undo-tree-id6947 . -1) (undo-tree-id6948 . -1) (undo-tree-id6949 . -1) (undo-tree-id6950 . -1) (undo-tree-id6951 . -1) (undo-tree-id6952 . -1) (undo-tree-id6953 . -1) (undo-tree-id6954 . -1) (undo-tree-id6955 . -1) (undo-tree-id6956 . -1) (undo-tree-id6957 . -1) (undo-tree-id6958 . -1) (#("<" 0 1 (fontified t face (nxml-tag-delimiter))) . -4812) (undo-tree-id6959 . -1) (undo-tree-id6960 . -1) (undo-tree-id6961 . -1) (undo-tree-id6962 . 1) (undo-tree-id6963 . -1) (undo-tree-id6964 . -1) (undo-tree-id6965 . -1) (undo-tree-id6966 . -1) (undo-tree-id6967 . -1) (undo-tree-id6968 . -1) (undo-tree-id6969 . -1) (undo-tree-id6970 . -1) (undo-tree-id6971 . -1) (undo-tree-id6972 . -1) (undo-tree-id6973 . -1) (undo-tree-id6974 . -1) (undo-tree-id6975 . -1) (#("t" 0 1 (fontified t face (nxml-element-local-name))) . -4813) (undo-tree-id6976 . -1) (undo-tree-id6977 . -1) (undo-tree-id6978 . -1) 4814) nil (25414 33384 505989 203000) 0 nil])
([nil nil ((4811 . 4814)) nil (25414 33384 505970 569000) 0 nil])
([nil nil ((4811 . 4812) 4814) nil (25414 33384 505970 262000) 0 nil])
([nil nil ((#("M" 0 1 (fontified t face (nxml-element-local-name))) . -4813) (undo-tree-id6905 . -1) (undo-tree-id6906 . -1) (undo-tree-id6907 . -1) (undo-tree-id6908 . -1) (undo-tree-id6909 . -1) (undo-tree-id6910 . -1) (undo-tree-id6911 . -1) (undo-tree-id6912 . -1) (undo-tree-id6913 . -1) (undo-tree-id6914 . -1) (undo-tree-id6915 . -1) (undo-tree-id6916 . -1) (undo-tree-id6917 . -1) (undo-tree-id6918 . -1) (undo-tree-id6919 . -1) (undo-tree-id6920 . -1) (#("t" 0 1 (fontified t face (nxml-element-local-name))) . -4814) (undo-tree-id6921 . -1) (undo-tree-id6922 . -1) (undo-tree-id6923 . -1) (undo-tree-id6924 . -1) (undo-tree-id6925 . -1) (undo-tree-id6926 . -1) (undo-tree-id6927 . -1) (undo-tree-id6928 . -1) (undo-tree-id6929 . -1) (undo-tree-id6930 . -1) (undo-tree-id6931 . -1) 4815) nil (25414 33384 505969 516000) 0 nil])
([nil nil ((4813 . 4834)) nil (25414 33384 505957 203000) 0 nil])
([nil nil ((4834 . 4836)) nil (25414 33384 505956 932000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -4833) (undo-tree-id6857 . -1) (undo-tree-id6858 . -1) (undo-tree-id6859 . -1) (undo-tree-id6860 . -1) (undo-tree-id6861 . -1) (undo-tree-id6862 . -1) (undo-tree-id6863 . -1) (undo-tree-id6864 . -1) (undo-tree-id6865 . -1) (undo-tree-id6866 . -1) (undo-tree-id6867 . -1) (undo-tree-id6868 . -1) (undo-tree-id6869 . -1) (undo-tree-id6870 . -1) (undo-tree-id6871 . -1) (undo-tree-id6872 . -1) (undo-tree-id6873 . -1) (undo-tree-id6874 . -1) (undo-tree-id6875 . -1) (undo-tree-id6876 . -1) (undo-tree-id6877 . -1) (#("?" 0 1 (fontified t)) . -4834) (undo-tree-id6878 . -1) (undo-tree-id6879 . -1) (undo-tree-id6880 . -1) (undo-tree-id6881 . -1) (undo-tree-id6882 . -1) (undo-tree-id6883 . -1) (undo-tree-id6884 . -1) (undo-tree-id6885 . -1) (undo-tree-id6886 . -1) (undo-tree-id6887 . -1) (undo-tree-id6888 . -1) (undo-tree-id6889 . -1) (undo-tree-id6890 . -1) (undo-tree-id6891 . -1) (undo-tree-id6892 . -1) (undo-tree-id6893 . -1) (#(">" 0 1 (fontified t face (nxml-tag-delimiter))) . -4835) (undo-tree-id6894 . -1) (undo-tree-id6895 . -1) (undo-tree-id6896 . -1) (undo-tree-id6897 . -1) (undo-tree-id6898 . -1) (undo-tree-id6899 . -1) (undo-tree-id6900 . -1) (undo-tree-id6901 . -1) (undo-tree-id6902 . -1) (undo-tree-id6903 . -1) (undo-tree-id6904 . -1) 4836) nil (25414 33384 505955 542000) 0 nil])
([nil nil ((4833 . 4834)) nil (25414 33384 505386 979000) 0 nil])
([nil nil ((4834 . 4835)) nil (25414 33384 505384 85000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5177 . 5178) (nil fontified nil 5177 . 5178) (nil fontified nil 5176 . 5177) (nil fontified nil 5175 . 5176) (nil fontified nil 5174 . 5175) (nil fontified nil 5173 . 5174) (nil fontified nil 5172 . 5173) (nil fontified nil 5171 . 5172) (nil fontified nil 5170 . 5171) (nil fontified nil 5169 . 5170) (nil fontified nil 5168 . 5169) (nil fontified nil 5167 . 5168) (nil fontified nil 5166 . 5167) (nil fontified nil 5165 . 5166) (nil fontified nil 5164 . 5165) (nil fontified nil 5163 . 5164) (nil fontified nil 5162 . 5163) (nil fontified nil 5161 . 5162) (nil fontified nil 5160 . 5161) (nil fontified nil 5159 . 5160) (nil fontified nil 5158 . 5159) (nil fontified nil 5157 . 5158) (nil fontified nil 5156 . 5157) (nil fontified nil 5155 . 5156) (nil fontified nil 5154 . 5155) (nil fontified nil 5153 . 5154) (nil fontified nil 5149 . 5153) (5149 . 5178) (t 25414 33384 519006 477000)) nil (25414 33446 478990 515000) 0 nil])
([nil nil ((#("	    <text variable=\"note\"/>" 0 1 (fontified t) 1 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t face (nxml-tag-delimiter)) 6 7 (fontified t face (nxml-element-local-name)) 7 8 (fontified t face (nxml-element-local-name)) 8 9 (fontified t face (nxml-element-local-name)) 9 10 (fontified t face (nxml-element-local-name)) 10 11 (fontified t) 11 12 (fontified t face (nxml-attribute-local-name)) 12 13 (fontified t face (nxml-attribute-local-name)) 13 14 (fontified t face (nxml-attribute-local-name)) 14 15 (fontified t face (nxml-attribute-local-name)) 15 16 (fontified t face (nxml-attribute-local-name)) 16 17 (fontified t face (nxml-attribute-local-name)) 17 18 (fontified t face (nxml-attribute-local-name)) 18 19 (fontified t face (nxml-attribute-local-name)) 19 20 (fontified t) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face (nxml-tag-slash)) 27 28 (fontified t face (nxml-tag-delimiter))) . 5057) (undo-tree-id7042 . -28)) nil (25414 33446 478988 900000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5057) (undo-tree-id7040 . 1) (undo-tree-id7041 . -1)) nil (25414 33446 478987 738000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3332 . 3333) (nil fontified nil 3332 . 3333) (nil fontified nil 3331 . 3332) (nil fontified nil 3330 . 3331) (nil fontified nil 3329 . 3330) (nil fontified nil 3328 . 3329) (nil fontified nil 3327 . 3328) (nil fontified nil 3326 . 3327) (nil fontified nil 3325 . 3326) (nil fontified nil 3324 . 3325) (nil fontified nil 3323 . 3324) (nil fontified nil 3322 . 3323) (nil fontified nil 3321 . 3322) (nil fontified nil 3320 . 3321) (nil fontified nil 3319 . 3320) (nil fontified nil 3318 . 3319) (nil fontified nil 3317 . 3318) (nil fontified nil 3316 . 3317) (nil fontified nil 3315 . 3316) (nil fontified nil 3314 . 3315) (nil fontified nil 3313 . 3314) (nil fontified nil 3312 . 3313) (nil fontified nil 3311 . 3312) (nil fontified nil 3310 . 3311) (nil fontified nil 3309 . 3310) (nil fontified nil 3308 . 3309) (nil fontified nil 3305 . 3308) (nil fontified nil 3304 . 3305) (3304 . 3333)) nil (25414 33446 478982 662000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3950 . 3951) (nil fontified nil 3950 . 3951) (nil fontified nil 3949 . 3950) (nil fontified nil 3948 . 3949) (nil fontified nil 3947 . 3948) (nil fontified nil 3946 . 3947) (nil fontified nil 3945 . 3946) (nil fontified nil 3944 . 3945) (nil fontified nil 3943 . 3944) (nil fontified nil 3942 . 3943) (nil fontified nil 3941 . 3942) (nil fontified nil 3940 . 3941) (nil fontified nil 3939 . 3940) (nil fontified nil 3938 . 3939) (nil fontified nil 3937 . 3938) (nil fontified nil 3936 . 3937) (nil fontified nil 3935 . 3936) (nil fontified nil 3934 . 3935) (nil fontified nil 3933 . 3934) (nil fontified nil 3932 . 3933) (nil fontified nil 3931 . 3932) (nil fontified nil 3930 . 3931) (nil fontified nil 3929 . 3930) (nil fontified nil 3928 . 3929) (nil fontified nil 3927 . 3928) (nil fontified nil 3926 . 3927) (nil fontified nil 3923 . 3926) (nil fontified nil 3922 . 3923) (3922 . 3951)) nil (25414 33446 478980 796000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4574 . 4575) (nil fontified nil 4574 . 4575) (nil fontified nil 4573 . 4574) (nil fontified nil 4572 . 4573) (nil fontified nil 4571 . 4572) (nil fontified nil 4570 . 4571) (nil fontified nil 4569 . 4570) (nil fontified nil 4568 . 4569) (nil fontified nil 4567 . 4568) (nil fontified nil 4566 . 4567) (nil fontified nil 4565 . 4566) (nil fontified nil 4564 . 4565) (nil fontified nil 4563 . 4564) (nil fontified nil 4562 . 4563) (nil fontified nil 4561 . 4562) (nil fontified nil 4560 . 4561) (nil fontified nil 4559 . 4560) (nil fontified nil 4558 . 4559) (nil fontified nil 4557 . 4558) (nil fontified nil 4556 . 4557) (nil fontified nil 4555 . 4556) (nil fontified nil 4554 . 4555) (nil fontified nil 4553 . 4554) (nil fontified nil 4552 . 4553) (nil fontified nil 4551 . 4552) (nil fontified nil 4550 . 4551) (nil fontified nil 4547 . 4550) (nil fontified nil 4546 . 4547) (4546 . 4575)) nil (25414 33446 478976 597000) 0 nil])
([nil nil ((#(" sort=\"descending\"" 0 1 (fontified t) 1 2 (fontified t face (nxml-attribute-local-name)) 2 3 (fontified t face (nxml-attribute-local-name)) 3 4 (fontified t face (nxml-attribute-local-name)) 4 5 (fontified t face (nxml-attribute-local-name)) 5 6 (fontified t) 6 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face)) . 2884) (undo-tree-id7043 . -18) (undo-tree-id7044 . -18) (undo-tree-id7045 . -18) (undo-tree-id7046 . -18) (undo-tree-id7047 . -18) 2902 (t 25414 33446 494926 593000)) nil (25414 33613 966761 45000) 0 nil])
([nil nil ((2884 . 2885) (t 25414 33598 436433 348000)) nil (25414 33650 494925 129000) 0 nil] [nil nil ((nil rear-nonsticky nil 5507 . 5508) (nil fontified nil 2884 . 5508) (2884 . 5508) (t 25414 33598 436433 348000)) ((#("#+CSL-STYLE: ../../files/complete-online.csl

[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
[NO BIBLIOGRAPHY LAYOUT IN CSL STYLE]
----- -939941275333361813 -----
" 0 44 (fontified nil) 44 1500 (fontified nil face (nxml-text)) 1500 2623 (fontified nil face (nxml-text)) 2623 2624 (fontified nil rear-nonsticky nil face (nxml-text))) . 2884) (undo-tree-id7048 . -1718) (undo-tree-id7049 . -2624) (undo-tree-id7050 . -2624) (undo-tree-id7051 . -2624) (undo-tree-id7052 . -44) (undo-tree-id7053 . -44) (nil fontified t 4384 . 5507) (nil fontified t 2928 . 4384) (nil fontified t 2884 . 2928) (nil rear-nonsticky t 5507 . 5508)) (25414 33613 109669 155000) 0 nil])
([nil nil ((2885 . 2902)) nil (25414 33650 494922 202000) 0 nil])
nil
([nil nil ((262 . 275) (t 25414 33650 509149 681000)) nil (25414 33806 995308 690000) 0 nil])
([nil nil ((230 . 246)) nil (25414 33806 995308 229000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face (nxml-text))) . -853) (undo-tree-id7071 . -1) (undo-tree-id7072 . -1) (undo-tree-id7073 . -1) (undo-tree-id7074 . -1) (undo-tree-id7075 . -1) (undo-tree-id7076 . -1) (undo-tree-id7077 . -1) (undo-tree-id7078 . -1) (undo-tree-id7079 . -1) (#("8" 0 1 (fontified t face (nxml-text))) . -854) (undo-tree-id7080 . -1) (undo-tree-id7081 . -1) (undo-tree-id7082 . -1) (undo-tree-id7083 . -1) (undo-tree-id7084 . -1) (undo-tree-id7085 . -1) (undo-tree-id7086 . -1) 855) nil (25414 33806 995307 459000) 0 nil])
([nil nil ((853 . 855)) nil (25414 33806 995300 71000) 0 nil])
([nil nil ((#("year" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face)) . -2908) (undo-tree-id7064 . -4) (undo-tree-id7065 . -4) (undo-tree-id7066 . -4) (undo-tree-id7067 . -4) (undo-tree-id7068 . -4) (undo-tree-id7069 . -4) (undo-tree-id7070 . -4) 2912) nil (25414 33806 995299 312000) 0 nil])
([nil nil ((2908 . 2910)) nil (25414 33806 995295 442000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face font-lock-string-face)) . -2909) (undo-tree-id7057 . -1) (undo-tree-id7058 . -1) (undo-tree-id7059 . -1) (undo-tree-id7060 . -1) (undo-tree-id7061 . -1) (undo-tree-id7062 . -1) (undo-tree-id7063 . -1) 2910) nil (25414 33806 995294 937000) 0 nil])
([nil nil ((2909 . 2913)) nil (25414 33806 995291 236000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -2912) (undo-tree-id7054 . -1) (undo-tree-id7055 . -1) (undo-tree-id7056 . -1) 2913) nil (25414 33806 995290 380000) 0 nil])
([nil nil ((2912 . 2914)) nil (25414 33806 995282 585000) 0 nil])
([nil nil ((1037 . 1039) (#("  " 0 2 (fontified nil)) . 1036) (1036 . 1038) (1036 . 1037) (t 25414 33807 10738 634000)) nil (25414 34004 488442 128000) 0 nil])
([nil nil ((1039 . 1045)) nil (25414 34004 488441 450000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face font-lock-comment-face)) . -1044) (undo-tree-id7149 . -1) 1045) nil (25414 34004 488440 733000) 0 nil])
([nil nil ((1044 . 1054)) nil (25414 34004 488439 978000) 0 nil])
([nil nil ((1054 . 1061)) nil (25414 34004 488439 637000) 0 nil])
([nil nil ((1061 . 1071)) nil (25414 34004 488439 287000) 0 nil])
([nil nil ((1061 . 1062)) nil (25414 34004 488438 991000) 0 nil])
([nil nil ((1072 . 1076)) nil (25414 34004 488438 757000) 0 nil])
([nil nil ((1076 . 1079)) nil (25414 34004 488438 424000) 0 nil])
([nil nil ((#("  <!-- ---------- Macros ---------- -->" 0 2 (fontified t) 2 3 (fontified t face font-lock-comment-delimiter-face syntax-table (2097163)) 3 4 (fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 7 (fontified t face font-lock-comment-delimiter-face) 7 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face) 25 26 (fontified t face font-lock-comment-face) 26 35 (fontified t face font-lock-comment-face) 35 36 (fontified t face font-lock-comment-delimiter-face) 36 37 (fontified t face font-lock-comment-delimiter-face) 37 38 (fontified t face font-lock-comment-delimiter-face) 38 39 (fontified t face font-lock-comment-delimiter-face syntax-table (2097164))) . 1037) (undo-tree-id7126 . -24) (undo-tree-id7127 . -33) (undo-tree-id7128 . -24) (undo-tree-id7129 . 6) (undo-tree-id7130 . -35) (undo-tree-id7131 . 8) (undo-tree-id7132 . -33) (undo-tree-id7133 . 10) (undo-tree-id7134 . -31) (undo-tree-id7135 . 12) (undo-tree-id7136 . -29) (undo-tree-id7137 . 14) (undo-tree-id7138 . -27) (undo-tree-id7139 . 24) (undo-tree-id7140 . -17) (undo-tree-id7141 . 26) (undo-tree-id7142 . -15) (undo-tree-id7143 . 28) (undo-tree-id7144 . -13) (undo-tree-id7145 . 30) (undo-tree-id7146 . -11) (undo-tree-id7147 . 32) (undo-tree-id7148 . -9)) nil (25414 34004 488437 757000) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 1037)) nil (25414 34004 488229 711000) 0 nil])
([nil nil ((#("  
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t) 2 3 (fontified t)) . 1037)) nil (25414 34004 488229 434000) 0 nil])
([nil nil ((#("  <!--" 0 2 (fontified t) 2 3 (fontified t syntax-table (2097163) face font-lock-comment-delimiter-face) 3 4 (fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face)) . 2145)) nil (25414 34004 488229 40000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 2145) (undo-tree-id7125 . -1)) nil (25414 34004 488228 461000) 0 nil])
([nil nil ((#("  <macro name=\"references\">" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face) 25 26 (fontified t face font-lock-comment-face) 26 27 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488227 373000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488226 865000) 0 nil])
([nil nil ((#("    <group delimiter=\". \">" 0 1 (fontified t face font-lock-comment-face) 1 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face) 25 26 (fontified t face font-lock-comment-face)) . 2145) (undo-tree-id7124 . -26)) nil (25414 34004 488226 402000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488225 85000) 0 nil])
([nil nil ((#("      <choose>" 0 1 (fontified t face font-lock-comment-face) 1 4 (fontified t face font-lock-comment-face) 4 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488224 719000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488224 411000) 0 nil])
([nil nil ((#("	<if variable=\"DOI\">" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-face) 2 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488223 899000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488223 385000) 0 nil])
([nil nil ((#("	  <text variable=\"DOI\"/>" 0 1 (fontified t face font-lock-comment-face) 1 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488222 806000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488222 370000) 0 nil])
([nil nil ((#("	</if>" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488221 978000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488221 564000) 0 nil])
([nil nil ((#("	<else-if variable=\"URL\">" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488221 146000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488220 807000) 0 nil])
([nil nil ((#("	  <text variable=\"URL\"/>" 0 1 (fontified t face font-lock-comment-face) 1 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488220 202000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488219 792000) 0 nil])
([nil nil ((#("	</else-if>" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488219 389000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488218 960000) 0 nil])
([nil nil ((#("      </choose>" 0 1 (fontified t face font-lock-comment-face) 1 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488218 470000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488218 123000) 0 nil])
([nil nil ((#("      <choose>" 0 1 (fontified t face font-lock-comment-face) 1 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488217 696000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488217 334000) 0 nil])
([nil nil ((#("	<if variable=\"ISBN\">" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488216 842000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488216 420000) 0 nil])
([nil nil ((#("	  <text prefix=\"ISBN \" variable=\"ISBN\"/>" 0 1 (fontified t face font-lock-comment-face) 1 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face) 15 16 (fontified t face font-lock-comment-face) 16 17 (fontified t face font-lock-comment-face) 17 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face) 25 26 (fontified t face font-lock-comment-face) 26 27 (fontified t face font-lock-comment-face) 27 28 (fontified t face font-lock-comment-face) 28 29 (fontified t face font-lock-comment-face) 29 30 (fontified t face font-lock-comment-face) 30 31 (fontified t face font-lock-comment-face) 31 32 (fontified t face font-lock-comment-face) 32 33 (fontified t face font-lock-comment-face) 33 34 (fontified t face font-lock-comment-face) 34 35 (fontified t face font-lock-comment-face) 35 36 (fontified t face font-lock-comment-face) 36 37 (fontified t face font-lock-comment-face) 37 38 (fontified t face font-lock-comment-face) 38 39 (fontified t face font-lock-comment-face) 39 40 (fontified t face font-lock-comment-face) 40 41 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488215 748000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488215 246000) 0 nil])
([nil nil ((#("	</if>" 0 1 (fontified t) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488214 620000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488214 19000) 0 nil])
([nil nil ((#("      </choose>" 0 1 (fontified t face font-lock-comment-face) 1 4 (fontified t face font-lock-comment-face) 4 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face) 14 15 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488213 507000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488212 829000) 0 nil])
([nil nil ((#("    </group>" 0 1 (fontified t face font-lock-comment-face) 1 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488212 417000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488212 61000) 0 nil])
([nil nil ((#("    </macro>" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 8 (fontified t face font-lock-comment-face) 8 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face)) . 2145)) nil (25414 34004 488211 651000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face (nxml-text))) . 2145)) nil (25414 34004 488211 333000) 0 nil])
([nil nil ((#("  -->" 0 1 (fontified t face (nxml-text)) 1 2 (fontified t face (nxml-text)) 2 3 (fontified t face (nxml-text)) 3 4 (fontified t face (nxml-text)) 4 5 (fontified t syntax-table (2097164) face (nxml-text))) . 2145)) nil (25414 34004 488210 976000) 0 nil])
([nil nil ((2146 . 2148) (#("  " 0 2 (fontified nil face (nxml-text))) . 2145) (2145 . 2147) (2145 . 2146)) nil (25414 34004 488210 376000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t face (nxml-tag-delimiter))) . -2143) (undo-tree-id7115 . -1) (undo-tree-id7116 . -1) (undo-tree-id7117 . -1) (#("
" 0 1 (fontified t face (nxml-text))) . -2144) (undo-tree-id7118 . -1) (undo-tree-id7119 . -1) (undo-tree-id7120 . -1) (#("
" 0 1 (fontified t face (nxml-text))) . -2145) (undo-tree-id7121 . -1) (#(" " 0 1 (fontified t face (nxml-text))) . -2146) (undo-tree-id7122 . -1) (#(" " 0 1 (fontified t face (nxml-text))) . -2147) (undo-tree-id7123 . -1) 2148) nil (25414 34004 488209 88000) 0 nil])
([nil nil ((2143 . 2144)) nil (25414 34004 488203 449000) 0 nil])
([nil nil ((2172 . 2177)) nil (25414 34004 488202 970000) 0 nil])
([nil nil ((2177 . 2185)) nil (25414 34004 488202 626000) 0 nil])
([nil nil ((2185 . 2206)) nil (25414 34004 488202 332000) 0 nil])
([nil nil ((2206 . 2210)) nil (25414 34004 488202 58000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -2208) (undo-tree-id7113 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -2209) (undo-tree-id7114 . -1) 2210) nil (25414 34004 488201 398000) 0 nil])
([nil nil ((2208 . 2226)) nil (25414 34004 488199 626000) 0 nil])
([nil nil ((2226 . 2247)) nil (25414 34004 488199 300000) 0 nil])
([nil nil ((2247 . 2248)) nil (25414 34004 488199 42000) 0 nil])
([nil nil ((2251 . 2253) (2241 . 2244) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 2241) (2248 . 2249)) nil (25414 34004 488198 640000) 0 nil])
([nil nil ((2253 . 2274)) nil (25414 34004 488198 80000) 0 nil])
([nil nil ((2274 . 2276)) nil (25414 34004 488197 720000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t face font-lock-comment-face)) . 2250) (#("
" 0 1 (fontified t face font-lock-comment-face)) . 2250)) nil (25414 34004 488197 189000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -2272) (undo-tree-id7112 . -1) 2273) nil (25414 34004 488196 747000) 0 nil])
([nil nil ((#("the" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face)) . -2270) (undo-tree-id7111 . -3) 2273) nil (25414 34004 488195 715000) 0 nil])
([nil nil ((2270 . 2291)) nil (25414 34004 488194 820000) 0 nil])
([nil nil ((2291 . 2310)) nil (25414 34004 488194 293000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -2303) (undo-tree-id7110 . -1) 2304) nil (25414 34004 488193 672000) 0 nil])
([nil nil ((2312 . 2332) (2303 . 2306) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 2303) (2309 . 2310)) nil (25414 34004 488192 358000) 0 nil])
([nil nil ((2332 . 2333)) nil (25414 34004 488191 818000) 0 nil])
([nil nil ((2330 . 2351)) nil (25414 34004 488191 530000) 0 nil])
([nil nil ((2373 . 2374) (2366 . 2369) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 2366) (2351 . 2371)) nil (25414 34004 488191 131000) 0 nil])
([nil nil ((2374 . 2391)) nil (25414 34004 488190 392000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -2390) (undo-tree-id7109 . -1) 2391) nil (25414 34004 488190 60000) 0 nil])
([nil nil ((2390 . 2400)) nil (25414 34004 488189 71000) 0 nil])
([nil nil ((2400 . 2421)) nil (25414 34004 488188 541000) 0 nil])
([nil nil ((2429 . 2432) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 2429) (2421 . 2442)) nil (25414 34004 488187 967000) 0 nil])
([nil nil ((2444 . 2454)) nil (25414 34004 488187 476000) 0 nil])
([nil nil ((#("sligh" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face)) . -2449) (undo-tree-id7108 . -5) 2454) nil (25414 34004 488186 877000) 0 nil])
([nil nil ((2449 . 2467)) nil (25414 34004 488185 746000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-comment-face)) . -2456) (undo-tree-id7107 . -1) 2457) nil (25414 34004 488185 130000) 0 nil])
([nil nil ((2466 . 2484)) nil (25414 34004 488183 796000) 0 nil])
([nil nil ((#("to " 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -2481) (undo-tree-id7106 . -3) 2484) nil (25414 34004 488183 353000) 0 nil])
([nil nil ((#("useful " 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-delimiter-face)) . -2474) (undo-tree-id7105 . -7) 2481) nil (25414 34004 488181 981000) 0 nil])
([nil nil ((#("be " 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-delimiter-face)) . -2471) (undo-tree-id7104 . -3) 2474) nil (25414 34004 488180 560000) 0 nil])
([nil nil ((2471 . 2473)) nil (25414 34004 488179 32000) 0 nil])
([nil nil ((2473 . 2494)) nil (25414 34004 488178 448000) 0 nil])
([nil nil ((2497 . 2517) (2491 . 2494) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 2491) (2494 . 2495)) nil (25414 34004 488177 763000) 0 nil])
([nil nil ((2517 . 2530)) nil (25414 34004 488176 895000) 0 nil])
([nil nil ((#("  <!--" 0 2 (fontified t) 2 3 (syntax-table (2097163) fontified t face font-lock-comment-delimiter-face) 3 4 (fontified t face font-lock-comment-delimiter-face) 4 5 (fontified t face font-lock-comment-delimiter-face) 5 6 (fontified t face font-lock-comment-delimiter-face)) . 2589)) nil (25414 34004 488176 337000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 2589)) nil (25414 34004 488175 785000) 0 nil])
([nil nil ((#("  <citation collapse=\"citation-number\">" 0 1 (fontified t face font-lock-comment-delimiter-face) 1 2 (fontified t face font-lock-comment-delimiter-face) 2 3 (fontified t face font-lock-comment-face) 3 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 24 (fontified t face font-lock-comment-face) 24 37 (fontified t face font-lock-comment-face) 37 38 (fontified t face font-lock-comment-face) 38 39 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488174 929000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488174 455000) 0 nil])
([nil nil ((#("    <sort>" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 9 (fontified t face font-lock-comment-face) 9 10 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488174 41000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488173 632000) 0 nil])
([nil nil ((#("      <key variable=\"citation-number\"/>" 0 1 (fontified t face font-lock-comment-face) 1 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face) 11 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 34 (fontified t face font-lock-comment-face) 34 36 (fontified t face font-lock-comment-face) 36 37 (fontified t face font-lock-comment-face) 37 38 (fontified t face font-lock-comment-face) 38 39 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488173 296000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2589) (undo-tree-id7102 . -1) (undo-tree-id7103 . -1)) nil (25414 34004 488172 867000) 0 nil])
([nil nil ((#("    </sort>" 0 1 (fontified t face font-lock-comment-face) 1 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 10 (fontified t face font-lock-comment-face) 10 11 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488170 898000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488170 527000) 0 nil])
([nil nil ((#("    <layout delimiter=\",\" prefix=\"&#160;[\" suffix=\"]\">" 0 1 (fontified t face font-lock-comment-face) 1 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face) 24 25 (fontified t face font-lock-comment-face) 25 26 (fontified t face font-lock-comment-face) 26 32 (fontified t face font-lock-comment-face) 32 33 (fontified t face font-lock-comment-face) 33 34 (fontified t face font-lock-comment-face) 34 36 (fontified t face font-lock-comment-face) 36 39 (fontified t face font-lock-comment-face) 39 40 (fontified t face font-lock-comment-face) 40 41 (fontified t face font-lock-comment-face) 41 42 (fontified t face font-lock-comment-face) 42 43 (fontified t face font-lock-comment-face) 43 49 (fontified t face font-lock-comment-face) 49 50 (fontified t face font-lock-comment-face) 50 51 (fontified t face font-lock-comment-face) 51 52 (fontified t face font-lock-comment-face) 52 53 (fontified t face font-lock-comment-face) 53 54 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488170 41000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488169 543000) 0 nil])
([nil nil ((#("      <text variable=\"citation-number\"/>" 0 1 (fontified t face font-lock-comment-face) 1 6 (fontified t face font-lock-comment-face) 6 7 (fontified t face font-lock-comment-face) 7 11 (fontified t face font-lock-comment-face) 11 12 (fontified t face font-lock-comment-face) 12 20 (fontified t face font-lock-comment-face) 20 21 (fontified t face font-lock-comment-face) 21 22 (fontified t face font-lock-comment-face) 22 37 (fontified t face font-lock-comment-face) 37 38 (fontified t face font-lock-comment-face) 38 39 (fontified t face font-lock-comment-face) 39 40 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488169 142000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488168 466000) 0 nil])
([nil nil ((#("    </layout>" 0 1 (fontified t face font-lock-comment-face) 1 4 (fontified t face font-lock-comment-face) 4 5 (fontified t face font-lock-comment-face) 5 6 (fontified t face font-lock-comment-face) 6 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488168 43000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488167 353000) 0 nil])
([nil nil ((#("  </citation>" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified t face font-lock-comment-face) 2 3 (fontified t face font-lock-comment-face) 3 4 (fontified t face font-lock-comment-face) 4 7 (fontified t face font-lock-comment-face) 7 12 (fontified t face font-lock-comment-face) 12 13 (fontified t face font-lock-comment-face)) . 2589)) nil (25414 34004 488166 841000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face (nxml-text))) . 2589) (undo-tree-id7101 . -1)) nil (25414 34004 488166 411000) 0 nil])
([nil nil ((#("  -->" 0 1 (fontified t face (nxml-text)) 1 2 (fontified t face (nxml-text)) 2 3 (fontified t face (nxml-text)) 3 4 (fontified t face (nxml-text)) 4 5 (fontified t syntax-table (2097164) face (nxml-text))) . 2589)) nil (25414 34004 488165 299000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face (nxml-text))) . 2589) (undo-tree-id7099 . -1) (undo-tree-id7100 . -1)) nil (25414 34004 488164 848000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face (nxml-text))) . 2589)) nil (25414 34004 488163 385000) 0 nil])
([nil nil ((2661 . 2668)) nil (25414 34004 488162 989000) 0 nil])
([nil nil ((2668 . 2679)) nil (25414 34004 488162 516000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -2678) (undo-tree-id7098 . -1) 2679) nil (25414 34004 488161 878000) 0 nil])
([nil nil ((2678 . 2699)) nil (25414 34004 488160 400000) 0 nil])
([nil nil ((2699 . 2704)) nil (25414 34004 488159 743000) 0 nil])
([nil nil ((2701 . 2708)) nil (25414 34004 488159 356000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-comment-face)) . -2706) (undo-tree-id7096 . -1) (#(" " 0 1 (fontified t face font-lock-comment-delimiter-face)) . -2707) (undo-tree-id7097 . -1) 2708) nil (25414 34004 488158 539000) 0 nil])
([nil nil ((2706 . 2727)) nil (25414 34004 488156 733000) 0 nil])
([nil nil ((2727 . 2731)) nil (25414 34004 488156 327000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-comment-face)) . -2726) (undo-tree-id7092 . -1) (undo-tree-id7093 . -1) (undo-tree-id7094 . -1) (undo-tree-id7095 . -1) 2727) nil (25414 34004 488155 726000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-comment-face)) . -2714) (undo-tree-id7087 . -1) (undo-tree-id7088 . -1) (undo-tree-id7089 . -1) (undo-tree-id7090 . -1) (undo-tree-id7091 . -1) 2715) nil (25414 34004 488151 965000) 0 nil])
([nil current ((2713 . 2714)) nil (25414 34004 488141 854000) 0 nil])
nil
