%!PS-Adobe-2.0
%%Creator: dvips(k) 5.85 Copyright 1999 Radical Eye Software
%%Title: final-hacked.dvi
%%Pages: 17
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t a4 -o
%+ /local/dobsons/projects/ions/ecoop00/final-hacked.ps final-hacked.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.03.14:1622
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (final-hacked.dvi)
@start
%DVIPSBitmapFont: Fa ectt0900 9 26
/Fa 26 126 df<EB01C0EB03E0130F131FEB3FC0EB7F80EBFE00485A5B1203485A5B485A
A2485AA248C7FCA3127EA45AAC127EA47EA36C7EA26C7EA26C7E7F6C7E12017F6C7EEB7F
80EB3FC0EB1FE0130F1303EB01C0133A73B327>40 D<127012F812FE7E6C7E6C7EEA0FE0
6C7E12037F6C7E1200137EA27FA2EB1F80A3EB0FC0A4EB07E0ACEB0FC0A4EB1F80A3EB3F
00A2137EA25B1201485A5B1207485AEA3FC0485A48C7FC5A12F81270133A7AB327>I<12
1EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A728927>46 D<120FEA3FC0A2EA7FE0A4EA3F
C0A2EA0F00C7FCAC120FEA3FC013E0EA7FF0A213F8A2123FA2120F120113F01203EA07E0
121FEA7FC0EAFF8013005A12700D2A739F27>59 D<003FB512FCB7FCA4C9FCA8B7FCA400
3F14FC20127D9F27>61 D<EB03F0497EA2497EA4143CEB1F3EA5EB3F3FA3EB3E1FA2017E
7FA4496C7EA548486C7EA390B5FCA24880A3EBF003A248486C7EA4000F803A7FFC0FFF80
00FF15C06D5A497E007F1580222F7EAE27>65 D<007FB5FCB612C08115F87E3907E003FC
EC00FE157E157F81A6157EA25D1403EC0FF890B55A15C015F081819038E000FE157FED3F
80151FA2ED0FC0A6151F1680153FED7F004A5A007FB55AB65A5D15E06C1480222E7FAD27
>I<387FFFFC14FFB612C06C80813907E00FF81407EC01FC6E7EA2157E157F811680151F
A316C0150FABED1F80A3153F1600A25D15FEA24A5A4A5A140F007FB55A5DB65A6C91C7FC
14FC222E7FAD27>68 D<3801FFE0000713F84813FE486D7E81EBC07FEC0FE0380F8007D8
02007FC71203A2EB07FF137F0003B5FC120F5A383FFC03EA7FE0130012FE5AA46C130700
7F130FEBC07F6CB612C06C15E07E000313F83A007FC03FC023207D9F27>97
D<EA7FE0487EA3127F1203A9EC7F809038F1FFE001F713F890B57E81ECC0FF9138007F80
01FCEB1FC049130F16E0491307A216F01503A615076D14E0A2150F6DEB1FC06D133F6DEB
7F809138C1FF00ECFFFE5D01F75B01F313E02601E07FC7FC242E80AD27>I<EB0FFF017F
13C048B512E04814F05A380FF807EA1FE0393FC003E0903880008048C8FC127EA212FE5A
A67E127EA2007F14F0393F8001F813C0381FE003390FF80FF06CB5FC6C14E06C14C06C6C
1300EB0FF81D207B9F27>I<EC1FF84A7EA3141F1400A9EB0FF0EB7FFC48B5FC5A5A380F
F81F381FE007383FC003EB8001EA7F00007E1300A212FE5AA67E007E1301A2007F13037E
EB8007381FE00F380FF03F6CB612E06C15F06C5B38007FF890391FE07FE0242E7EAD27>
I<EB0FF8EB3FFE90B51280000314C04814E0390FFC0FF0391FE003F8EBC001D83F8013FC
48C7FC127E157E12FEB612FEA415FC00FCC8FC7E127E127F6C143C6D137E6C7E01F013FE
390FFC07FC6CB5FC000114F86C14F0013F13C0903807FE001F207D9F27>I<153F90391F
C0FF80D97FF313C048B612E05A4814EF390FF07F873A1FC01FC3C0EDC000EB800F48486C
7EA66C6C485AEBC01FA2390FF07F8090B5C7FC5C485BEB7FF0EB1FC090C9FCA27F6CB5FC
15E015F84814FE4880EB8001007EC7EA3F80007C140F00FC15C0481407A46C140F007C15
80007F143F6C6CEB7F009038F807FF6CB55A000714F86C5CC614C0D90FFCC7FC23337EA0
27>103 D<130F497E497EA46D5A6DC7FC90C8FCA7383FFF80487FA37EEA000FB3A4007F
B512F0B6FC15F815F07E1D2F7BAE27>105 D<387FFF80B57EA37EEA000FB3B2007FB512
F8B612FCA36C14F81E2E7CAD27>108 D<397F07C01F3AFF9FF07FC09039FFF9FFE091B5
7E7E3A0FFC7FF1F89038F03FC001E0138001C01300A3EB803EB03A7FF0FFC3FF486C01E3
138001F913E701F813E36C4801C313002920819F27>I<397FE03FC039FFF1FFF001F77F
90B57E6C80000313E0EC007F497F5B5BA25BB03A7FFF83FFF8B500C713FCA36C018313F8
2620809F27>I<EB1FE0EB7FF83801FFFE487F481480390FF03FC0391FC00FE0393F8007
F0EB00034814F8007E1301A248EB00FCA76C1301007E14F8A2007F1303393F8007F0A239
1FE01FE0390FF03FC06CB512806C14006C5B38007FF8EB1FE01E207C9F27>I<397FE07F
8039FFF1FFE001F713F890B57E6C800003EBC0FF9138007F8001FCEB1FC049130F16E049
1307A216F01503A615076D14E0A2150F6DEB1FC06D133F6DEB7F809138C1FF00ECFFFE5D
01F75B01F313E0D9F07FC7FC91C8FCAC387FFF80B57EA36C5B2431809F27>I<397FFC03
FC39FFFE0FFF023F13804A13C0007F90B5FC39007FFE1F14F89138F00F809138E002004A
C7FC5CA291C8FCA2137EAD007FB57EB67EA36C5C22207E9F27>114
D<9038FFF3800007EBFFC0121F5A5AEB803F38FC000F5AA2EC07806C90C7FCEA7F8013FC
383FFFF06C13FC000713FF00011480D8000F13C09038003FE014070078EB03F000FC1301
A27E14036CEB07E0EBE01F90B512C01580150000FB13FC38707FF01C207B9F27>I<133C
137EA8007FB512F0B612F8A36C14F0D8007EC7FCAE1518157EA415FE6D13FC1483ECFFF8
6D13F06D13E0010313C0010013001F297EA827>I<3A7FFE07FFE000FF15F06D5A497E00
7F15E03A0F80001F00A36D5B0007143EA414F0EBC1F83903E3FC7CA4EBE79EA200011478
A301F713F8A2EBFF0F6C5CA3EBFE0790387C03E024207F9F27>119
D<EC07F8EC3FFC14FF130315F8903807FE00EB0FF05C5CB0131FEB7F80EA3FFFB5C7FC5B
A27F003F7FEA007FEB1FC0130FB08080EB07FE903803FFF815FC1300143FEC07F81E3A7C
B327>123 D<EA7F80EAFFF013FC13FF7E00017F38003FC0131F130FB080EB07F8ECFFF0
6D13FC7FA25B4913F0ECF800EB0FE05CB0131F133F48B45A007F90C7FCB5FC13FC13F0EA
7F801E3A7CB327>125 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb ecbx1000 10 22
/Fb 22 118 df<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B
>46 D<141E143E14FE1307137FB5FCA3138FEA000FB3B3A5007FB61280A4213679B530>
49 D<EB0FFE90387FFFC048B512F0000714FC390FE03FFF261F800F1380263F000313C0
D87F8014E0EBE00100FF6D13F07FA2ED7FF8A46C5A6C5A0006C7FCC8FCEDFFF0A216E05C
16C04A138016004A5A4A5AEC1FF05D4A5A4AC7FC14FE495AD903F01378495A495A495A49
C712F8017C14F05B49130148B6FC5A5A5A5A5A4815E0B7FCA425367BB530>I<EB03FF01
1F13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF86D14F0487EA6
6C4814E06C5A6C485AC714C04A138016004A5A4A5AEC3FF090380FFFC05D15F090380007
FE913801FF806E13C016E0ED7FF016F8ED3FFCA216FEEA1FC0487E487E487EA416FCA249
137F007F15F801C0EBFFF06C5A6C6C4813E0260FFC0713806CB61200000114FC6C6C13F0
010790C7FC27377CB530>I<ED07C0150FA2151F153F157F15FF5CA25C5C5C5C143E143C
5C5C1301495A5C495A495A5B133E5B13785B485A1203485A5B48C7FC121E5A127C5AB812
80A4C70001EBC000AA0103B61280A429367DB530>I<001C15C0D81F80130701F8137F90
B61280A216005D5D15F05D15804AC7FC14F090C9FCA7EB03FE90381FFFE0017F13F89038
FE07FC9038F003FFD9C0011380496C13C090C7FC000E15E0C8127F16F0A216F8A3121FEA
3FC0487E12FF7FA316F05B15FFD87F8014E0007EC713C0003E5B003F4913806C6C481300
390FF01FFE6CB512F8000114E06C6C1380D90FF8C7FC25377BB530>I<ED03E04B7EA24B
7EA34B7EA24B7EA34B7EA292B57EA34A8015F302038015E1A202078015C0020F80ED807F
A2021F80ED003F4A80023E131FA2027E80027C7F02FC814A7FA20101824A7F49B77EA349
8202C0C7FC010F824A147FA2011F8291C8123F4982013E151FA2017E82017C8101FE83B5
00F80107B61280A4413A7DB948>65 D<B87E17F817FF18C028007FF8000713F09338007F
F8EF1FFE717E050313807113C0A27113E0F07FF0A2F03FF8A219FC181FA219FEA419FFAC
19FEA419FC183FA219F8187F19F0F0FFE0A24D13C04D13804D1300EF1FFEEF7FFC933807
FFF0B912C095C7FC17FC178040397DB849>68 D<B500F80403B512F06E5EA26E5ED8007F
F1E000A2D97BFF161EA201796D5DA201786D5DA26E6C5DA36E6C4A5AA26E6C4A5AA26E6C
4A5AA26E6C4A5AA26E6C141EA36E6D5BA26E6D5BA26F6C5BA26F6C485AA36F6C485AA26F
6C485AA26F6C48C7FCA2923803FF1EA36F13BCA26F13F8A2705AA2705AA213FCB500FC6D
4848B612F0A2EE0F80EE070054397DB85B>77 D<EB3FFE0003B512E0000F14F8391FF00F
FE003FEB03FF6D6C7F6E7FA26F7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901
FFF87F00071380380FFE00EA3FF85B485A12FF5BA415FF6D5A127F263FF00713F83B1FFC
1FBFFFC0390FFFFE1F0003EBF80F39003FE0032A257DA42E>97 D<EE7F80ED7FFFA41503
81AF903801FF81010F13F1013F13FD9038FFC07F0003EB001FD807FC1307000F8048487F
5B123FA2485AA312FFAA127FA27F123FA26C6C5B000F5C6C6C5B6C6C4913C02701FF80FD
13FE39007FFFF9011F13E1010113012F3A7DB935>100 D<903803FF80011F13F0017F13
FC3901FF83FE3A03FE007F804848133F484814C0001FEC1FE05B003FEC0FF0A2485A16F8
150712FFA290B6FCA301E0C8FCA4127FA36C7E1678121F6C6C14F86D14F000071403D801
FFEB0FE06C9038C07FC06DB51200010F13FC010113E025257DA42C>I<161FD907FEEBFF
C090387FFFE348B6EAEFE02607FE07138F260FF801131F48486C138F003F15CF4990387F
C7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC3907FE07FE48B512F86D13
E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF8016E06C15F86C816C815A00
1F81393FC0000F48C8138048157F5A163FA36C157F6C16006D5C6C6C495AD81FF0EB07FC
D807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530>103
D<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A7E
4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01F0EA07FC487EA248
7EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B>I<13FF
B5FCA412077EB3B3ACB512FCA4163A7DB91B>108 D<01FEEB7FC000FF903803FFF8020F
13FE91381F03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FCB3A3B5D8FC
3F13FFA430257DA435>110 D<903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE0
48486D7E48486D7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3003F5D
6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113
C029257DA430>I<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF0011380000349
6C13C00280EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E
137F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F13E0020390C7FC91C9
FCACB512FCA42F357EA435>I<90383FF0383903FFFEF8000F13FF381FC00F383F000300
7E1301007C130012FC15787E7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F8
1203C614FC131F9038007FFE140700F0130114007E157E7E157C6C14FC6C14F8EB800190
38F007F090B512C000F8140038E01FF81F257DA426>115 D<130FA55BA45BA25B5BA25A
1207001FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80F014816CEBC3E090383FFFC0
6D1380903803FE001D357EB425>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25D
A26C5C6E4813E06CD9C03E13FF90387FFFFC011F13F00103138030257DA435>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc ectt1000 10 31
/Fc 31 126 df<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B708A2C>46
D<14FE497EA4497FA214EFA2130781A214C7A2010F7FA314C390381F83F0A590383F01F8
A490387E00FCA549137E90B512FEA34880A29038F8003FA34848EB1F80A4000715C04913
0FD87FFEEBFFFC6D5AB514FE6C15FC497E27347EB32C>65 D<007FB512E015F8B612FE6C
8016C03903F0003FED0FE0ED07F01503A2ED01F8A6ED03F0A21507ED0FE0ED1FC0EDFF80
90B612005D5D15FF16C09039F0001FE0ED07F0ED03F81501ED00FCA216FE167EA616FE16
FC1501ED03F8150FED3FF0007FB612E016C0B712806CECFE0015F027337FB22C>I<02FF
13700107EBE0F84913F9013F13FD4913FFEBFF813901FE007F4848131FD807F0130F1507
485A491303485A150148C7FCA25A007EEC00F01600A212FE5AAB7E127EA3007F15F06CEC
01F8A26C7EA26C6C13036D14F06C6C130716E0D803FC131F6C6CEB3FC03A00FF81FF806D
B512006D5B010F5B6D13F00100138025357DB32C>I<007FB5FCB612C015F0816C803907
E003FEEC00FFED7F80153FED1FC0ED0FE0A2150716F0150316F81501A4ED00FCACED01F8
A3150316F0A2150716E0150FED1FC0153FED7F80EDFF00EC03FE007FB55AB65A5D15C06C
91C7FC26337EB22C>I<007FB612F0B712F8A37E3903F00001A7ED00F01600A4EC01E04A
7EA490B5FCA5EBF003A46E5A91C8FCA5163C167EA8007FB612FEB7FCA36C15FC27337EB2
2C>I<90381FF80790B5EA0F804814CF000714FF5A381FF01F383FC003497E48C7FC007E
147F00FE143F5A151FA46CEC0F00007E91C7FC127F7FEA3FE0EA1FFCEBFFC06C13FC0003
EBFFC06C14F06C6C7F01077F9038007FFEEC07FF02001380153FED1FC0A2ED0FE0A20078
140712FCA56CEC0FC0A26CEC1F806D133F01E0EB7F009038FE01FF90B55A5D00F914F0D8
F83F13C0D8700790C7FC23357CB32C>83 D<3801FFF0000713FE001F6D7E15E048809038
C01FF81407EC01FC381F80000006C77EC8127EA3ECFFFE131F90B5FC1203120F48EB807E
383FF800EA7FC090C7FC12FE5AA47E007F14FEEB8003383FE01F6CB612FC6C15FE6C14BF
0001EBFE1F3A003FF007FC27247CA32C>97 D<EA7FF0487EA3127F1201AAEC1FE0ECFFF8
01FB13FE90B6FC16809138F07FC09138801FE091380007F049EB03F85BED01FC491300A2
16FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07FC091B512
80160001FB5B01F813F83900F03FC027337FB22C>I<903803FFE0011F13F8017F13FE48
B5FC48804848C6FCEA0FF0485A49137E4848131890C9FC5A127EA25AA8127EA2127F6C14
0F6DEB1F806C7E6D133F6C6CEB7F003907FE03FF6CB55A6C5C6C6C5B011F13E0010390C7
FC21247AA32C>I<EC0FFE4A7EA380EC003FAAEB07F8EB3FFE90B512BF4814FF5A3807FC
0F380FF00348487E497E48487F90C7FC007E80A212FE5AA87E007E5CA2007F5C6C7E5C6C
6C5A380FF0073807FC1F6CB612FC6CECBFFE6C143FEB3FFC90390FF01FFC27337DB22C>
I<EB03FE90381FFFC0017F13F048B57E48803907FE03FE390FF800FFD81FE0EB3F805B48
48EB1FC090C7120F5A007E15E015075AB7FCA416C000FCC9FC7E127EA2127F6CEC03C06D
EB07E06C7ED80FF0130F6C6CEB3FC001FF13FF000190B512806C1500013F13FC010F13F0
0101138023247CA32C>I<EC0FF8EC3FFE91B5FC4914805B903807FC7F14F090390FE03F
0014C092C7FCA6007FB512FEB7FCA36C5C26000FC0C7FCB3A8003FB512F04880A36C5C21
337DB22C>I<ED03F8903907F80FFC90391FFE3FFE017FB6FC48B7FC48ECFE7F9038FC0F
F82607F003133E3A0FE001FC1CD9C0001300001F8049137EA66D13FE000F5CEBE0016C6C
485A3903FC0FF048B5FC5D481480D99FFEC7FCEB87F80180C8FCA37F6C7E90B512F06C14
FE48ECFF804815E04815F03A3FC0001FF848C7EA03FC007E1400007C157C00FC157E4815
3EA46C157E007E15FCD87F801303D83FE0EB0FF8D81FFCEB7FF06CB612E0000315806C15
00D8003F13F8010713C028387EA42C>I<1307EB1FC0A2497EA36D5AA20107C7FC90C8FC
A7387FFFC080B5FC7EA2EA0007B3A8007FB512FCB612FEA36C14FC1F3479B32C>105
D<140EEC3F80A2EC7FC0A3EC3F80A2EC0E0091C7FCA748B512804814C0A37EC7120FB3B3
A2141F003C1480007E133FB414005CEB01FEEBFFFC6C5B5C001F5B000790C7FC1A467CB3
2C>I<387FFFE0B57EA37EEA0003B3B3A5007FB61280B712C0A36C158022337BB22C>108
D<3A7F83F007E09039CFFC1FF83AFFDFFE3FFCD87FFF13FF91B57E3A07FE1FFC3E01FCEB
F83F496C487E01F013E001E013C0A301C01380B33B7FFC3FF87FF0027F13FFD8FFFE6D13
F8D87FFC4913F0023F137F2D2481A32C>I<397FF01FE039FFF87FFC9038F9FFFE01FB7F
6CB6FC00019038F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A3
6C01E0140029247FA32C>I<EB07FCEB1FFF017F13C048B512F048803907FC07FC390FF0
01FE48486C7E0180133F003F158090C7121F007EEC0FC0A348EC07E0A76C140F007E15C0
A2007F141F6C15806D133F6C6CEB7F006D5B6C6C485A3907FC07FC6CB55A6C5C6C6C13C0
011F90C7FCEB07FC23247CA32C>I<397FF01FE039FFF8FFF801FB13FE90B6FC6C158000
019038F07FC09138801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D
14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F8
13F8EC3FC091C8FCAD387FFFE0B57EA36C5B27367FA32C>I<D87FFEEB3FC0B53801FFF0
020713F8021F13FC6C5B39003F7FE1ECFF019138FC00F84A13704A13005CA25C5CA391C8
FCAF007FB512E0B67EA36C5C26247EA32C>114 D<90387FF8700003B512F8120F5A5A38
7FC00F387E00034813015AA36CEB00F0007F140013F0383FFFC06C13FE6CEBFF80000314
E0C66C13F8010113FCEB0007EC00FE0078147F00FC143F151F7EA26C143F6D133E6D13FE
9038F007FC90B5FC15F815E000F8148039701FFC0020247AA32C>I<131E133FA9007FB6
FCB71280A36C1500D8003FC8FCB1ED03C0ED07E0A5EC800F011FEB1FC0ECE07F6DB51280
160001035B6D13F89038003FE0232E7EAD2C>I<3A7FF003FF80486C487FA3007F7F0001
EB000FB3A3151FA2153F6D137F3900FE03FF90B7FC6D15807F6D13CF902603FE07130029
247FA32C>I<3A7FFF01FFFCB514FE148314016C15FC3A03E0000F80A26D131F00011500
A26D5B0000143EA26D137E017C137CA2017E13FC013E5BA2EB3F01011F5BA21483010F5B
A214C701075BA214EF01035BA214FF6D90C7FCA26D5A147C27247EA32C>I<3A3FFF03FF
F048018713F8A36C010313F03A00FC007E005D90387E01F8013F5BEB1F83EC87E090380F
CFC0903807EF80EB03FF6D90C7FC5C6D5A147C14FE130180903803EF80903807CFC0EB0F
C7EC83E090381F01F0013F7FEB7E00017C137C49137E0001803A7FFF01FFFC1483B514FE
6C15FC140127247EA32C>120 D<3A7FFF01FFFCB5008113FE148314816C010113FC3A03
E0000F806C7E151F6D140012005D6D133E137C017E137E013E137CA2013F13FC6D5BA2EB
0F815DA2EB07C1ECC3E0A2EB03E3ECE7C0130114F75DEB00FFA292C7FC80A2143EA2147E
147CA214FC5CA2EA0C01003F5BEA7F83EB87E0EA7E0F495A387FFF806C90C8FC6C5A6C5A
EA07E027367EA32C>I<003FB612E04815F0A4007EC7EA1FE0ED3FC0ED7F80EDFF004A5A
003C495AC7485A4A5A4A5A4A5A4A5A4AC7FCEB01FC495AEB0FF0495A495A495A49C8FC48
48EB01E04848EB03F0485A485A485A485A485AB7FCA46C15E024247DA32C>I<15FF0207
1380141F147F91B512004913C04AC7FCEB03F85CB31307EB1FE013FF007F5BB55A49C8FC
6D7E6C7FC67F131FEB07F01303B380EB01FEECFFC06D13FF6E1380141F14070200130021
417BB92C>I<EA7FC0EAFFF813FE6D7E6C7FC67F131FEB07F01303B380EB01FEECFFC06D
13FF6E1380141F147F91B512004913C04AC7FCEB03F85CB31307EB1FE013FF007F5BB55A
49C8FC13F8EA7FC021417BB92C>125 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmex9 9 6
/Fd 6 56 df<B612C0A600FCC8FCB3B3B3B3B3B3B31A85688133>50
D<B612C0A6C7120FB3B3B3B3B3B3B31A85808133>I<12FCB3B3B3B3B3B3B3B612C0A61A
85688233>I<EC0FC0B3B3B3B3B3B3B3B6FCA61A85808233>I<12FCB3B3AB062F688033>
I<12FCB3B3AB062F6C8033>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi5 5 7
/Fe 7 108 df<EC0380A21407140F81141F1437A21467ECC7E0A2EB0183EB0303A21306
010C7FA2EB1801EB3FFF5BEB600101C07F000113005B48C7FC5A5A3AFFC00FFFC0168022
1D7C9C2B>65 D<0003B512F815FE3A003E001F80ED07C0ED03E0150149EB00F0A216F8A2
5BA4484814F01501A216E04848130316C0ED0780ED0F004848131E5D15F8EC07E0B61280
02FCC7FC251C7C9B2E>68 D<3801FFFC14F838001F00A4133EA45BA45BA4485AA4485AA4
EA7FFE12FF161C7D9B1A>73 D<9039FFF80FFEA290390FC003E0D907E0130015066D6C5A
5D6D6C5A15E0903800FDC0ECFF806EC7FC80A281147FECEFC0EB01CF90380307E0130649
6C7E1318496C7E136048486C7E0007803A7FF007FFE012FF271C7D9B2E>88
D<137013F8A213F013E01300A6EA0F80EA1FC0EA31E01261A2EAC3C01203EA0780A3EA0F
001308EA1E18A213301370EA0FE0EA07800D1D7D9C16>105 D<EB0180EB03C01307A2EB
038090C7FCA6137CEA01FEEA038FEA070F1206120C1200A2131EA45BA45BA4EA70F012F8
EAF9E0485AB45A007EC7FC12257E9C18>I<EA1FE0A212035BA4485AA4380F00F8EB01FC
EB070CEB0C1C381E383CEB607CEA1FC0EBE038383FF800EA3C7C131E14040078130CA214
18130F00F013F0386003E0161D7C9C1F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff ecrm0600 6 3
/Ff 3 52 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0381C00F014F800
3E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00
F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFF
C00001130018227DA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmsy7 7 5
/Fg 5 104 df<49B512FE130F133F01FFC8FCEA01F8EA03E0EA078048C9FC121E121C12
3C123812781270A212F05AA77E1270A212781238123C121C121E7E6C7EEA03E0EA01F86C
B4FC013FB512FE130F130190C9FCAB003FB612FE5A7E27357AA734>18
D<13E0EA01F0EA03F8A3EA07F0A313E0A2120F13C0A3EA1F80A21300A25A123EA35AA312
7812F8A25A12100D1E7D9F13>48 D<49B5FC130F133F01FFC7FCEA01F8EA03E0EA078048
C8FC121E121C123C123812781270A212F05AA2B7FCA300E0C8FCA27E1270A21278123812
3C121C121E7E6C7EEA03E0EA01F86CB4FC013FB5FC130F130120277AA12D>50
D<147EEB03FEEB0FE0EB1F00133E5BB35BA2485AEA07E0EAFF8000FCC7FCB47EEA07E0EA
01F06C7EA2137CB37F7FEB0FE0EB03FEEB007E173B7BAB22>102
D<12FCB47EEA0FE0EA01F06C7E137CB37FA27FEB0FC0EB03FEEB007EEB03FEEB0FC0EB1F
00133EA25BB35B485AEA0FE0EAFF8000FCC7FC173B7BAB22>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh ecrm0700 7 3
/Fh 3 52 df<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>49
D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15
005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003
0012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C00
30137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC3800
01E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01
F03807FFC0C690C7FC19277DA521>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmsy5 5 1
/Fi 1 49 df<EA0380EA07C0A3EA0F80A313005A121EA2123E123CA212381278A21270A2
5AA20A157D9612>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmsy10 10 5
/Fj 5 104 df<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F8CCFC
AE007FB812F8B912FCA26C17F836287BA841>17 D<181EA4181F84A285180785727EA272
7E727E85197E85F11F80F10FC0F107F0007FBA12FCBCFCA26C19FCCCEA07F0F10FC0F11F
80F13F00197E61614E5A4E5AA24E5A61180F96C7FCA260181EA4482C7BAA53>33
D<173CA2173E171E171F8384717E170384717E717E187C007FB812FEBAFC856C84CBEA03
F0727EF000FEF13F80F11FE0F107F8F101FFA2F107F8F11FE0F13F80F1FE00F001F84E5A
007FB912C0BA5A96C7FC6C5FCB127C604D5A4D5A6017074D5A95C8FC5F171E173E173CA2
48307BAC53>41 D<EC01F8140FEC3F80ECFC00495A495A495AA2130F5CB3A7131F5C133F
49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE137F6D7E131F80130FB3A78013
07A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>102 D<12FCEAFFC0EA07F0EA01FC
EA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC1FF0EC07F8EC1FF0EC7E0049
5A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA07F0EAFFC000FCC8FC1D537A
BD2A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr10 10 8
/Fk 8 94 df<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA212075B
120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203A2
6C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>40
D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7F
A21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A2
5BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007FB812
F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43 D<EB01C013031307131F13FF
B5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>49 D<121C127FEAFF80A5EA7F
00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>58 D<007FB812F8B912FCA2
6C17F8CCFCAE007FB812F8B912FCA26C17F836167B9F41>61 D<EAFFF8A4EAF000B3B3B3
B3A3EAFFF8A40D5378BD17>91 D<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>
93 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmsy9 9 8
/Fl 8 104 df<187018F0A2841878A2187C183C183E84A2727E727E85727E727E727E19
7F007FBA12C0BB12F0A26C19C0CCEA7F0019FC4E5A4E5A4E5A614E5A4EC7FCA2183E183C
187C1878A218F860A2187044287CA64D>33 D<02E015706E15F0A20101824A1578A20103
167C4A153C0107163E494881A249C96C7E013E707E017E8349707E4848707E4848707ED8
0FE0177F003FBA12C0BB12F0A2003F19C0D80FE0CAEA7F00D803F017FC6C6C4C5A6C6C4C
5A017E4C5A013E5F6D4C5A6D6C4BC7FCA26D6C153E0103163C6E157C01011678A26E15F8
01005EA24A157044287CA64D>36 D<15F0A214014A5A5D14074A5AA24ACBFC143E5C91B9
12E04918F05B010F18E0D91F80CBFC017FCCFC13FCEA07F8EA1FE0EAFF80A2EA1FE0EA07
F8C67E137FEB1F806DB912E0010318F07F6D18E0027CCBFC80806E7EA26E7E1403816E7E
1400A2442A7CA74D>40 D<91383FFFF849B512FC1307011F14F8D93FE0C7FC01FFC8FCEA
01FCEA03F0485A485A5B48C9FC5A123E5AA21278A212F8A25AB712F816FCA216F800F0C9
FC7EA21278A2127CA27E123F7E6C7E7F6C7E6C7EEA01FC6CB4FCEB3FE06DB512F8010714
FC1301D9003F13F8262E7AA933>50 D<0060ED018000F0ED03C06C1507A200781680007C
150FA2003C1600003E5DA26C153EA26C153C6D147CA26C6C5CA200035D90B6FCA26C5DA2
9038F000036C6C495AA201785C017C130FA2013C91C7FC013E5BA26D133EA26D133CEC80
7CA201071378ECC0F8A2903803E1F0A201015B14F3A26DB45AA26E5AA36EC8FCA3141E14
0C2A3680B32B>56 D<126012F0B3A5B712F816FCA216F800F0C9FCB3A5126026347CB32F
>96 D<EC07E0143FECFE00EB03F8495A495A5C131F5CB3A5133F91C7FC137E5BEA03F8EA
7FE048C8FCEA7FE0EA03F8C67E137E7F80131FB3A580130F806D7E6D7EEB00FEEC3FE014
071B4B7BB726>102 D<12FCEAFFC0EA07F0EA01FC6C7E137F7F80131FB3A580130F6D7E
6D7EEB01FC9038007FC0EC1FE0EC7FC0903801FC00EB03F0495A495A131F5CB3A5133F91
C7FC5B13FE485AEA07F0EAFFC000FCC8FC1B4B7BB726>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmsy6 6 4
/Fm 4 92 df<B712C0A322037A8D30>0 D<EA01E0EA03F0A4EA07E0A213C0120FA21380
A2EA1F00A2121EA2123E123CA25AA3127012F05A12600C1A7E9B12>48
D<903807FFF0133F5BD801FCC7FCEA03E0485A48C8FC121E121C123C5A1270A212F05AA2
B612F0A300E0C8FCA27E1270A212787E121C121E7E6C7EEA03E0EA01FC6CB512F0133F13
071C237A9D2A>50 D<0060140300E01407B3A46C140F0070140E0078141E6C143C001F14
F8390FF00FF06CB512E00001148039001FF80020207C9E2A>91 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmmi6 6 12
/Fn 12 111 df<127812FCA4127806067A8513>58 D<ED01C01507151FED7F00EC01FCEC
07F0EC1FC0027FC7FC14FCEB03F0EB0FC0EB3F8001FEC8FCEA03F8EA0FE0EA3F8000FEC9
FC12F812FEEA3F80EA0FE0EA03F8EA00FEEB3F80EB0FC0EB03F0EB00FC147FEC1FC0EC07
F0EC01FCEC007FED1FC01507150122237A9D30>60 D<151815381578157C15FC1401A2EC
037C14071406EC0C7EEC1C3E14181430A21460ECC03FA249487EEB0300A213065B010FB5
12805B903838000F13305B13E05B484814C00003140790C7FCD80F80130FD8FFE0EBFFFE
16FC27247DA32E>65 D<90B6FC16E0903907C003F8ED00FC4948133E161E161FEE0F8049
C7FCA317C0133EA4491580161FA21700495CA2163E5E485A5E4B5A4B5A4848495A4B5A03
3EC7FC0007EB01F8B612E092C8FC2A227CA132>68 D<EBFFFEA2EB07C0A2EB0F80A4EB1F
00A4133EA45BA45BA4485AA4485AA31207EAFFFEA217227DA11B>73
D<90B57E92C7FCEB07C0A2495AA449C8FCA4133EA45BA45BED0180A2ED0300485A1506A2
150E48485B153C15F800071303B6FC5D21227CA12A>76 D<1338137CA2137813701300A7
EA0780EA1FC0EA38E01230EA60F0EAC1E0A3EA03C0A3EA0780A2EA0F0013041306EA1E0C
A21318121CEA1E70EA0FE0EA07800F237DA116>105 D<1418143C147CA214381400A7EB
0780EB1FE01338EB60F013C0A2EA0180A2380001E0A4EB03C0A4EB0780A4EB0F00A4131E
A21238EA783CEAF8381378EA70F0EA7FC0001FC7FC162D81A119>I<13F8EA0FF0A21200
A2485AA4485AA43807801E147FEB81C3EB8387380F060F495A1318EB700E4848C7FCA213
FCEA1E7EEA3C0F80EB0781158039780F0300A21402EB070600F0138CEB03F8386000F019
247CA221>I<EA01F0EA1FE0A21201A2EA03C0A4EA0780A4EA0F00A4121EA45AA45AA213
401360EAF0C0A3EAF1801271EA3F00121E0C247DA214>I<000F017E13FC3A1F81FF83FF
3B31C383C707803A61EE03CC039026EC01F813C0D8C1F813F013F001E013E00003903903
C0078013C0A2EE0F003907800780A2EE1E041706270F000F00130C163C1718A2001E011E
EB1C70EE1FE0000C010CEB07802F177D9536>I<000F13FC381FC3FF3931C707803861EC
0301F813C0EAC1F0A213E03903C00780A3EC0F00EA0780A2EC1E041506D80F00130C143C
15181538001EEB1C70EC1FE0000CEB07801F177D9526>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmr9 9 7
/Fo 7 94 df<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F90C7
FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F1203A2
6C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>40
D<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E13
1FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A48
5AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<13075B5B137FEA07FFB5FC13BF
EAF83F1200B3B3A2497E007FB51280A319327AB126>49 D<123C127E12FFA4127E123C12
00B0123C127E12FFA4127E123C08207A9F15>58 D<007FB812C0B912E0A26C17C0CCFCAC
007FB812C0B912E0A26C17C033147C9C3C>61 D<EAFFF0A4EAF000B3B3B3ADEAFFF0A40C
4B79B715>91 D<EAFFF0A41200B3B3B3AD12FFA40C4B7FB715>93
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmmi9 9 33
/Fp 33 123 df<010FB712F0A218E0903A003FC0001F170317015D1700147F18C092C8FC
A25CA25CA20101150118804A91C7FCA21303A25CA21307A25CA2130FA25CA2131FA25CA2
133FA25CA2137FA291CAFCA25BA25B487EB6FCA334337DB22F>0
D<137CEB7F80EB1FE0130F6D7EA26D7EA36D7EA36D7EA28080A26E7EA36E7EA281140FA2
6E7EA381140F141FEC3DFC1479ECF8FEEB01F0EB03E0903807C07FEB0F80EB1F00013EEB
3F80137E4914C04848131F485A4848EB0FE0EA1FC0123F4848EB07F048C7FC4815F84814
0348EC01FC48140026357CB32D>21 D<01F014E0D803FCEB01F0D8071EEB03F8EA0E1F12
1C0038EB800100301400013F1478007090C7FC006015385BD8E07E14301240EA00FE4914
70000115605BA216E0000315C04913011680150316005D150E150C151C00015C6D5B6C6C
5B90387E03C0D91FFFC7FCEB03FC25227EA02A>29 D<ECFFC0010713F090381F00F80178
133048481300EA03C0485A48C8FC121EA25A127C1278A312F8A27EA27E127F7FEA3FE013
F8EA1FFE6C6C7E00037F6C13F06C6C7EEB1FFCEB07FE13011300147E143E143CA25CEB30
F0EB3FE0EB0F801D297EA01C>38 D<126012F812FE7E13C013F0EAF3FCEAF1FE38F07F80
EB1FE0EB07F0EB03FCEB00FFEC3FC06E7EEC07F8EC01FEEC007FED3F80A2ED7F00EC01FE
EC07F8EC1FE04A5A02FFC7FCEB03FCEB07F0EB1FE0EB7F80D8F1FEC8FCEAF3FCEAFFF013
C090C9FC5A12F8126021267EA526>46 D<123C127E12FFA4127E123C08087A8715>58
D<123C127EB4FCA21380A2127F123D1201A412031300A25A1206120E120C121C5A5A1260
09177A8715>I<171C177EEE01FEEE07FCEE1FF0EE7FC0923801FF00ED07FCED1FF0ED7F
C04A48C7FCEC07FCEC1FF0EC7FC04948C8FCEB07FCEB1FF0EB7FC04848C9FCEA07FCEA1F
F0EA7FC048CAFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF903800
7FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FC
EE01FEEE007E171C2F2E7AA93C>I<16035E5EA24C7EA2163F167FA216FFA2ED01BFED03
3F831506161F150C1518A215301570156015C083EC01800203130F15001406A25C141C14
184A80A2027FB5FC91B6FCA2903901800007A249C7FC1306835B16035B5B1370136013E0
1201D807F04A7EB549B512F0A25B34367DB53A>65 D<010FB612F017FEEFFF80903B003F
C0003FE0EF0FF017074B14F81703027F15FCA292C7FCA25C18F84A140718F00101150F18
E04AEC1FC0EF3F800103ED7F00EE01FE4AEB07F891B612E04915809139F8001FF04AEB03
FCEE00FE010F157FA24AEC3F80A2011F16C0A25CA2133F18804A147FA2017FEDFF005F91
C712014C5A494A5A4C5A49EC3FE00001913801FF80B748C7FC16F816C036337DB23A>I<
DB0FF81318DB7FFF13380203B5EAC078913A0FFC03E0F091393FC000F102FFC7123BD901
FC141FD907F815E04948140F49481407EB3F80017F16C049C81203485A5B00031780485A
485AA248481600A2485A94C7FC127F5BA312FF90CBFCA45AA21738A21730A21770176017
E0007F4B5A5F16036C6C4AC7FC160E6C6C5C6C6C5C6C6C5C6C6C495A6C6CEB07C02700FF
803FC8FC90383FFFFC010F13F00101138035377CB437>I<010FB612F817FF18C0903B00
3FC0003FE0EF0FF0EF03F84B6D7E717E027F157F8492C81380A24A151F19C05CA21301A2
5CA21303183F5CA2130719804A157FA2130F19004A5D60011F1501605C4D5A013F5E1707
4A4A5A60017F4B5A4DC7FC91C8127E4C5A494A5AEE0FF049EC3FC000014AB4C8FCB712FC
16F093C9FC3A337DB23F>I<0107B512E05BA29039001FF0005DA25DA2143FA25DA2147F
A292C7FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133F
A25CA2137FA291C8FC5B007F13FEB5FCA223337EB222>73 D<010FB500C090B5FCA39026
003FE0C7EA1FE04B1500183E4B143818F0027FEC01C04D5A92C7000EC7FC5F4A5C17E04A
495A4C5A0101020EC8FC5E4A5B16F0010313011503ECF80F4B7E0107133FEDF3FCECF1C3
9138F381FE90380FF7019138FC00FF5C5C49486D7EA24A6D7EA2013F6E7EA24A6D7EA213
7F707E91C7FC707E5B707E5B00014B7EB500FC013F13F85EA240337DB241>75
D<010FB512F0A39026003FE0C7FC5DA25DA2147FA292C8FCA25CA25CA21301A25CA21303
A25CA21307A25CA2130FA25C170C011F151C17185C1738013F153017705C17E0137F1601
91C7EA03C0160749EC0F80161F49147F0001913803FF00B8FCA25E2E337DB234>I<ED07
FC92387FFFC0913901F807F091390FE001F891391F80007E027EC77E4AEC1F80EB03F049
48EC0FC04948EC07E0495A013F16F049C8FC01FE15034916F81201485AA2485AA2120F5B
001F16075B123FA34848ED0FF0A3EF1FE0A290C9FC48EE3FC0A21880177F6C17005F5F4C
5A4C5A6C7E4C5A001F4B5A6D4A5A000F4B5A6D027EC7FC00075D6C6C495A6C6CEB07E0D8
00FEEB1F8090263F80FEC8FC90380FFFF80101138035377DB43A>79
D<0003B812F05A18E0903AF0007F000FD80F8049130390C71401000E5C48EE00C0140112
1800384A1301A2003001031580127000605CA20207140300E01700C74990C7FCA2140FA2
5DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25C497E001F
B512FEA334337FB22D>84 D<0103B539C007FFFC5BA29026000FFCC713804BECFC000207
15F0606E6C495A4D5A02014AC7FC6F130E5F6E6C5B5F92387F80605F92383F818004C3C8
FC16C6ED1FEC16F86F5AA2150782A282150FED1DFE153915704B7E4A5A4A486C7E150002
066D7E5C4A131F4A805C4A6D7E495A49C76C7E1306010E1403013C81137CD803FE4A7EB5
00C090387FFFFCA2603E337EB23F>88 D<EB01F8EB07FE90381F071C90387C03FEEBF801
EA01F00003130048485B5B120F381F80015DEA3F00A21403485C127EA2140700FE5C5A16
40020F1360EDC0E016C0127CEC1FC1023F1380003CEB7F81003EEBEF833A1E01C7C30039
0F0787C73907FE03FE3900F800F823227EA029>97 D<133FEA1FFFA25B1200A35BA21201
A25BA21203A25BA21207A2EBE0F8EBE3FF390FEF07809038FC03C001F813E0EBF001D81F
E013F013C0138015F8123FA21300A248130315F0127EA2140700FE14E05AA2EC0FC0A2EC
1F80007C14005C147E003C137C003E5B381E01F0380F07C06CB4C7FCEA00FC1D357EB321
>I<147F903803FFC090380FC0F090383F0038137C4913F83801F0013803E0031207EA0F
C090388001F0001F90C7FC123F90C8FCA25A127EA45AA3127C150C151C15386C147015E0
6CEB03C0390F800F003807C07E3801FFF038007F801E227EA021>I<ED01F815FFA216F0
1507A316E0A2150FA216C0A2151FA21680A2153FA2D901F81300EB07FE90381F077F9038
7C03FF496C5AEA01F000031300485A495B120F381F8001A2D83F005BA214035A007E5CA2
140712FE485C1640020F136016E0EDC0C0127CEC1FC1023F1380003CEB7F81003EEBEF83
3A1E01C7C300390F0787C73907FE03FE3900F800F825357EB328>I<14FE903807FF8090
381F03C090387C01E03801F800485A485A485A485A1401D83F0013C01403007EEB0F80EC
FE00387FFFF8B5128000FCC8FCA45AA415186C1438007C147015E0003CEB01C0003EEB07
806CEB1E00380F80FC3803FFE0C690C7FC1D227DA024>I<ED0F80ED3FE0ED7870913801
F0F815E31403A2020713F0A291380FC1C0EDC000A4141F5DA4143F92C7FC011FB512805B
1600D9007FC7FC147EA414FE5CA513015CA413035CA413075CA4130F5CA45C131FA291C8
FC121CEA7F1E133EA2EAFE3C5B1278EA70F0EA3FC0EA0F8025457CB425>I<EB01C0EB07
E014F0130F14E01307EB038090C7FCAA13F0EA03FCEA071EEA0E1F121C123800301380EB
3F00127012605BEAE07EEA40FE12005B12015BA212035B12071420EBE070000F136013C0
14E014C0EA1F80EA0F81EB8380EB8700EA078EEA03FCEA00F014337EB11A>105
D<EB1F80EA07FF5A1400C67EA3137EA213FEA25BA21201A25BA21203A25BA21207A25BA2
120FA25BA2121FA25BA2123FA290C7FCA25AA2127E1304EAFE0E130C12FCA2131C131812
F81338EA7C701360EA3FE0EA0F8011357DB317>108 D<D801E013FE3A07F803FF803A0E
3E0F07E0001C90383C03F039181F7001003813E026303FC07F12700060138014001503D8
E07F5CEA407E1200150701FE5C5B150F5E120149131FEE8080EE81C00003023F13804914
011603037F13000007147E495CED3E0E5E000FEC1E3849EB0FF0D80380EB03C02A227EA0
2E>110 D<147F903803FFC090380FC1F090383F00F8017C137C497F485A48487F120748
5A5B001F1580123F90C7FCED3F005A127EA25D157E5A15FE5D007C5C14014A5A5D6C495A
4A5A6C49C7FC380F807E3807C1F83801FFE06C6CC8FC21227EA025>I<011F131F90397F
C07FE09039E3E1E0F09039C3E380783A01C1F7007CD981FE133CD983FC133E00035BEB03
F0163FEA0707120600025B1200010F147F167E5CA2011F14FE16FC5CA2013FEB01F8A291
380003F016E0491307ED0FC002801380ED1F009038FFC03E9038FEE0F89038FC7FE0EC1F
80000190C8FCA25BA21203A25BA21207A25BB57EA3283083A027>I<EB01FCEB0FFF9038
3E03C090387800E04913603901E001E014030003130713C013E0EC03806DC7FC13FF14F0
14FC6C7F6C7F6D1380130F9038007FC0141F140F007E130700FE1480A3EC0F005A00C013
1E6C5B00705B383C01F0380FFFC0D803FEC7FC1B227CA024>115
D<01F01507D803FC903903800F80D8071E903907C01FC0D80E1F130F121C00380180140F
0030021F1307013FEC8003007013000060160149133FD8E07E168000401500EA00FE4949
13030001170049137EA203FE5B00031606495B170E170CA24B131C4915186D15384A6C5B
17600001010314E03B00F8077E01C0903A7C0E3F078090273FFC0FFEC7FC903907F001F8
32227EA037>119 D<90391F801F8090397FE07FE09039E0F0E0703A01C0F9C0F8390380
7D833807007F000E1403000C15F0001C137E0018EC01C002FEC7FC00385B1210C7FC1301
5CA31303A25C1640010714E016C0001C5B007E1401010F148000FE1403011FEB0700011B
130E39F839F01C397070F878393FE07FE0390F801F8025227EA02C>I<90380780039038
1FE00790383FF00690387FF80E9038FFFC1C48EBFE789038E03FF03803800190C712E0EC
01C0C7EA0380EC0700140E143C14705C495A495A49C7FC130E133C0170130C49131C4848
13184848133848C71278D80EC013F0380FFE03391F3FFFE0D8381F13C0486C1380D86007
130038E003FE38C000F020227DA024>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmmi7 7 12
/Fq 12 111 df<1238127C12FEA3127C123807077A8614>58 D<160E163E16FEED03F8ED
0FE0ED3F80EDFE00EC03F8EC0FE0EC3F8002FEC7FCEB03F8EB0FE0EB3F8001FEC8FCEA03
F8EA0FE0EA3F8000FEC9FC12F812FEEA3F80EA0FE0EA03F8EA00FEEB3F80EB0FE0EB03F8
EB00FEEC3F80EC0FE0EC03F8EC00FEED3F80ED0FE0ED03F8ED00FE163E160E27277AA134
>60 D<4B7E1503150782150F151FA2153FA2156F15CF82EC0187140315071406140E140C
02187FA2EC30031460A214C013011480D903007F91B5FC5B90380C0001A25B1338013080
5B01E013005B12011203000F4A7ED8FFF890381FFFE0A22B2A7DA932>65
D<013FB512FC16FF903A01FC001FC04AEB03E0EE01F801031400177C4A80A2010781A25C
A2130F18805CA2011F1600A24A5CA2133F173E91C8127E177C4915FC5F017E14015F01FE
4A5AA2494A5A4C5A00014BC7FC167C495CED03E00003EC1FC0B600FEC8FC15F031287DA7
36>68 D<90383FFFF0A2903801FC005CA21303A25CA21307A25CA2130FA25CA2131FA25C
A2133FA291C7FCA25BA2137EA213FEA25BA21201A25BA21203B512C0A21C287DA71D>73
D<91387FFFE0A2913800FE005DA214015DA314035DA314075DA3140F5DA3141F5DA3143F
92C7FCA35C001E137E127FA214FE00FE5B387E01F8387803F0387007E0383C1FC0D81FFF
C8FCEA03F823297CA725>I<90383FFFF8A2D901FCC7FC5CA21303A25CA21307A25CA213
0FA25CA2131FA25CA2133FA291C8FCA249141C1618137E163801FE1430167049146016E0
00011401ED03C0491307ED0F800003147FB7FC160026287DA72E>76
D<130E131F5BA2133E131C90C7FCA7EA03E0487EEA0C78EA187C1230A212605B12C0A2EA
01F0A3485AA2485AA2EBC180EA0F81A2381F0300A213066C5A131CEA07F06C5A11287DA6
17>105 D<1407EC0F80141FA21500140E91C7FCA7EB03E0EB07F8EB0C3C1318EB303E13
6013C0A248485AA2C7FCA25CA4495AA4495AA4495AA4495AA21238D87C1FC7FC12FC133E
485AEA70F8EA7FE0EA1F80193380A61B>I<137CEA0FFCA2EA00F8A21201A213F0A21203
A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA2127EA2EA7C18A3EAF8
30A21320EA786013C0EA3F80EA0F000E297EA715>108 D<3B07801FC007E03B0FE07FF0
1FF83B18F0E0F8783C3B30F1807CE03E903AFB007D801ED860FEEB3F005B49133E00C14A
133E5B1201A24848495BA35F4848485A1830EE01F0A23C0F8003E003E060A218C0933801
E180271F0007C013E3933800FF00000E6D48137C341B7D993B>I<3907801FC0390FE07F
F03918F0E0F83930F1807CEBFB00D860FE133C5B5B00C1147C5B1201A248485BA34A5AEA
07C01660EC03E0A23A0F8007C0C0A2EDC180913803C300D81F0013C7EC01FE000EEB00F8
231B7D9929>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmmi10 10 37
/Fr 37 123 df<133F14C0EB07F06D7E801301A26D7EA3147FA36E7EA36E7EA36E7EA36E
7EA36E7EA36E7EA26E7EA214014A7E5C4A7E91381E3F80143C14784A6C7E1301EB03E049
486C7EEB0F80EB1F00496D7E137E5B48486D7E485A485A000F6E7E485A485A48C87E12FE
167F4816800070151F293B7CB930>21 D<01F8141CD803FE143FD8070F5C000E6D148012
1C12180038153F0030151FD8701F140F12601607D8E03F150000C090C7FC5BEA007E1606
13FE5B160E0001150C5B161C1618000315384914301670166016E04B5A5E15036C6C49C7
FC150E6C6C5B017E137890383F01E090380FFFC0D901FEC8FC29267EA42D>29
D<EC3FF0903803FFFE90380FC03F90383E000601781300EA01E0485A485A48C8FC121E5A
A25AA312F85A7EA37EA27E127F13C0EA3FF07FEA1FFE6C6C7E000313E0C67FEB3FFC6D7E
EB07FF13016D7E8080A4141E143EEB183CEB1FF0EB07C0202E7EA41E>38
D<126012F812FE6C7E7F13F0EAF3FCEAF0FEEB7F80EB1FE0EB07F86D7EEB00FFEC3FC0EC
0FE0EC07F8EC01FE9138007F80ED3FC0ED0FE0A2ED3FC0ED7F80913801FE00EC07F8EC0F
E0EC3FC002FFC7FCEB03FC495AEB1FE0EB7F8001FEC8FCEAF3FCEAFFF013C05B48C9FC12
F8126023287DA82A>46 D<121C127FEAFF80A5EA7F00121C0909798817>58
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<EF0380EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03
FEC7FCED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3F
E0EBFF80D803FECAFCEA0FF8EA3FE0EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA03FEC6
6C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8
ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0170FEF0380323279AD41>
I<1760177017F01601A21603A21607160FA24C7EA216331673166316C3A2ED0183A2ED03
03150683150C160115181530A21560A215C014011580DA03007FA202061300140E140C5C
021FB5FC5CA20260C7FC5C83495A8349C8FC1306A25BA25B13385B01F01680487E000716
FFB56C013F13FF5EA2383C7DBB3E>65 D<0103B77E4916F018FC903B0007F80003FE4BEB
00FFF07F80020FED3FC0181F4B15E0A2141FA25DA2143F19C04B143F1980027F157F1900
92C812FE4D5A4A4A5AEF0FF04AEC1FC005FFC7FC49B612FC5F02FCC7B4FCEF3FC00103ED
0FE0717E5C717E1307844A1401A2130F17035CA2131F4D5A5C4D5A133F4D5A4A4A5A4D5A
017F4BC7FC4C5A91C7EA07FC49EC3FF0B812C094C8FC16F83B397DB83F>I<9339FF8001
C0030F13E0037F9038F80380913A01FF807E07913A07F8000F0FDA1FE0EB079FDA3F8090
3803BF0002FFC76CB4FCD901FC80495A4948157E495A495A4948153E017F163C49C9FC5B
1201484816385B1207485A1830121F4993C7FCA2485AA3127F5BA312FF90CCFCA41703A2
5F1706A26C160E170C171C5F6C7E5F001F5E6D4A5A6C6C4A5A16076C6C020EC8FC6C6C14
3C6C6C5C6CB4495A90393FE00FC0010FB5C9FC010313FC9038007FC03A3D7CBA3B>I<01
03B7FC4916E018F8903B0007F80007FE4BEB00FFF03F80020FED1FC0180F4B15E0F007F0
021F1503A24B15F81801143F19FC5DA2147FA292C8FCA25C18035CA2130119F84A1507A2
130319F04A150FA2010717E0181F4A16C0A2010FEE3F80A24AED7F00187E011F16FE4D5A
4A5D4D5A013F4B5A4D5A4A4A5A057FC7FC017F15FEEE03FC91C7EA0FF049EC7FC0B8C8FC
16FC16C03E397DB845>I<0103B812F05BA290260007F8C7123F4B1407F003E0020F1501
18005DA2141FA25D19C0143FA24B1330A2027F1470190092C7126017E05C16014A495A16
0F49B6FCA25F9138FC000F01031407A24A6DC8FCA201075C18034A130660010F160693C7
FC4A150E180C011F161C18184A1538A2013F5E18F04A4A5AA2017F15074D5A91C8123F49
913803FF80B9FCA295C7FC3C397DB83D>I<0107B512FCA216F890390007F8005DA2140F
A25DA2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307
A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA326397DB824>73
D<0103B6FC5B5E90260007FCC8FC5D5D140FA25DA2141FA25DA2143FA25DA2147FA292C9
FCA25CA25CA21301A25CA21303A25CA2130718404A15C0A2010F150118804A1403A2011F
16005F4A1406170E013F151E171C4A143C177C017F5D160391C7120F49EC7FF0B8FCA25F
32397DB839>76 D<4BB4FC031F13F09238FE01FC913903F0007EDA07C0EB1F80DA1F80EB
0FC0023EC7EA07E002FCEC03F0495A4948EC01F8495A4948EC00FC495A49C912FE49167E
13FE49167F1201485AA2485AA2120F5B001F17FFA2485AA34848ED01FEA400FFEE03FC90
C9FCA2EF07F8A2EF0FF0A218E0171F18C0EF3F806C167F180017FE4C5A6C6C5D1603001F
4B5A6D4A5A000FED1F806C6C4AC7FC6D147E0003EC01F8D801FC495AD8007EEB0FC09026
3F807FC8FC903807FFF801001380383D7CBA3F>79 D<003FB56C48B51280485DA226007F
80C7381FF00091C8EA07C0604993C7FCA2491506A20001160E170C5BA20003161C17185B
A20007163817305BA2000F167017605BA2001F16E05F5BA2003F15015F5BA2007F150394
C8FC90C8FCA25E4815065A160E160C161C161816385E127E5E4B5A6C4A5A4BC9FC6C6C13
1E6C6C5B6C6C13F83903F807E06CB55A6C6C48CAFCEB0FF0393B7BB839>85
D<49B500F890387FFFF095B5FC1AE0D90003018090380FFC004BC713E00201ED07804EC7
FC6E6C140E606F5C705B606F6C485A4D5A031F91C8FCEEE0065F6F6C5A5F03075B705A16
F96FB45A94C9FC6F5AA36F7EA34B7FED037F9238063FC0150E4B6C7E1538ED700F03E07F
15C04A486C7EEC0300020613034A805C4A6D7E14704A1300494880495A49C86C7E130E01
1E153F017E4B7ED803FF4B7E007F01E0011FEBFFC0B5FC6144397EB845>88
D<147E903803FF8090390FC1C38090391F00EFC0017E137F49133F485A4848EB1F801207
5B000F143F48481400A2485A5D007F147E90C7FCA215FE485C5AA214015D48150CA21403
EDF01C16181407007C1538007E010F1330003E131F027B13706C01E113E03A0F83C0F9C0
3A03FF007F80D800FCEB1F0026267DA42C>97 D<133FEA1FFFA3C67E137EA313FE5BA312
015BA312035BA31207EBE0FCEBE3FF9038E707C0390FFE03E09038F801F001F013F8EBE0
00485A15FC5BA2123F90C7FCA214015A127EA2140312FE4814F8A2140715F05AEC0FE0A2
15C0EC1F80143F00781400007C137E5C383C01F86C485A380F07C06CB4C7FCEA01FC1E3B
7CB924>I<EC3FC0903801FFF0903807E03C90380F800E90383F0007017E131F49137F48
4813FF485A485A120F4913FE001F143848481300A2127F90C8FCA35A5AA45AA315031507
007E1406150E003E143C003F14706C14E0390F8007C03907C03F003801FFF838003FC020
267DA424>I<163FED1FFFA3ED007F167EA216FEA216FCA21501A216F8A21503A216F0A2
1507A2027E13E0903803FF8790380FC1CF90381F00EF017EEB7FC049133F485A4848131F
000715805B000F143F485A1600485A5D127F90C7127EA215FE5A485CA21401A248ECF80C
A21403161CEDF0181407007C1538007E010F1330003E131F027B13706C01E113E03A0F83
C0F9C03A03FF007F80D800FCEB1F00283B7DB92B>I<EC3FC0903801FFF0903807E07890
381F801C90387E001E49130E485A485A1207485A49131E001F141C153C484813F8EC03E0
007FEB3FC09038FFFE0014E090C8FC5A5AA7007E140315071506003E140E153C6C14706C
6C13E0EC07C03903E03F003801FFF838003FC020267DA427>I<16F8ED03FEED0F879238
1F0F80ED3E3F167F157CA215FC1700161C4A48C7FCA414035DA414075DA20107B512F0A3
9026000FE0C7FC5DA4141F5DA4143F92C8FCA45C147EA514FE5CA413015CA4495AA45C13
07A25C121E123F387F8F80A200FF90C9FC131E12FEEA7C3CEA7878EA1FF0EA07C0294C7C
BA29>I<EC07E0EC1FF891387C1C38903901F80EFC903803F007903807E003EB0FC09038
1F8001D93F0013F85B017E130313FE16F0485A150712034914E0A2150F12074914C0A215
1FA2491480A2153FA2160000035C6D5B00015B4A5A3900F8077E90387C1EFEEB1FF89038
07E0FC90C7FC1401A25DA21403001E5C123F387F80075D00FF495A49485A4849C7FC007C
137E383C01F8381FFFE0000390C8FC26367FA428>I<14E0EB03F8A21307A314F0EB01C0
90C7FCAB13F8EA03FEEA070F000E1380121C121812381230EA701F1260133F00E0130012
C05BEA007EA213FE5B1201A25B12035BA20007131813E01438000F133013C01470EB8060
14E014C01381EB838038078700EA03FEEA00F815397EB71D>105
D<EB0FC0EA03FF5AA2EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA2
1203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E03A2EAFE07
130612FCA2130E130C131C1318EA7C38EA3C70EA1FE0EA0780123B7DB919>108
D<D803E0017F14FE3D07F801FFE003FFC03D0E3C0781F00F03E03D1C3E1E00F83C01F026
383F38D9FC707F00304914E04A90387DC000007049EB7F8000604991C7FCA200E090C700
FE1301485A017E5CA200000201140301FE5F495CA203031407000160495C180F03075D12
03494A011F13601980030F023F13E00007F000C0495C1901031F023E1380000F1803494A
150061033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03E043267EA449>I<D803E0
137F3A07F801FFE03A0E3C0781F03A1C3E1E00F826383F387F00305B4A137C00705B0060
5BA200E090C712FC485A137EA20000140101FE5C5BA2150300015D5B15075E120349010F
133016C0031F13700007ED80605B17E0EE00C0000F15014915801603EE0700001FEC0F0E
49EB07FC0007C7EA01F02C267EA432>I<EC1FC0ECFFF8903807E07E90380F801F90393F
000F80017E14C0491307484814E0485A4848EB03F0120F5B121F48481307A2127F90C7FC
A2150F5A4815E0A2151F16C0A248EC3F8016005D157E007E5C4A5A003E495A003F495A6C
495A6C6C48C7FC3807E07E3801FFF038003F8024267DA428>I<90390F8003F090391FE0
0FFC903939F03C1F903A70F8700F80903AE0FDE007C09038C0FF80030013E00001491303
018015F05CEA038113015CA2D800031407A25CA20107140FA24A14E0A2010F141F17C05C
EE3F80131FEE7F004A137E16FE013F5C6E485A4B5A6E485A90397F700F80DA383FC7FC90
387E1FFCEC07E001FEC9FCA25BA21201A25BA21203A25B1207B512C0A32C3583A42A>I<
3903E001F83907F807FE390E3C1E07391C3E381F3A183F703F800038EBE07F0030EBC0FF
00705B00601500EC007E153CD8E07F90C7FCEAC07EA2120013FE5BA312015BA312035BA3
12075BA3120F5BA3121F5B0007C9FC21267EA425>114 D<14FF010313C090380F80F090
383E00380178131C153C4913FC0001130113E0A33903F000F06D13007F3801FFE014FC14
FF6C14806D13C0011F13E013039038003FF014071403001E1301127FA24814E0A348EB03
C012F800E0EB07800070EB0F006C133E001E13F83807FFE0000190C7FC1E267CA427>I<
EB01C0497E1307A4130F5CA3131F5CA3133F91C7FC007FB51280A2B6FCD8007EC7FCA313
FE5BA312015BA312035BA312075BA3120FEBC006A2140E001F130CEB801C141814385C14
6014E0380F81C038078780D803FEC7FCEA00F819357EB31E>I<13F8D803FE1438D8070F
147C000E6D13FC121C1218003814011230D8701F5C12601503EAE03F00C001005B5BD800
7E1307A201FE5C5B150F1201495CA2151F120349EC80C0A2153F1681EE0180A2ED7F0303
FF130012014A5B3A00F8079F0E90397C0E0F1C90393FFC07F8903907F001F02A267EA430
>I<01F8EB03C0D803FEEB07E0D8070F130F000E018013F0121C12180038140700301403
D8701F130112601500D8E03F14E000C090C7FC5BEA007E16C013FE5B1501000115805B15
0316001203495B1506150E150C151C151815385D00015C6D485A6C6C485AD97E0FC7FCEB
1FFEEB07F024267EA428>I<01F816F0D803FE9138E001F8D8070F903801F003000ED980
0314FC121C12180038020713010030EDE000D8701F167C1260030F143CD8E03F163800C0
01005B5BD8007E131F183001FE5C5B033F1470000117604991C7FCA218E000034A14C049
137E17011880170318005F03FE1306170E000101015C01F801BF5B3B00FC039F8070903A
7E0F0FC0E0903A1FFC03FFC0902703F0007FC7FC36267EA43B>I<D901E01360D90FF813
E0496C13C090383FFE0190397FFF038090B5EA07009038F81FFF3901E003FE9038C0001C
495B5DC85A4A5A4A5A4AC7FC140E5C5C14F0495AEB038049C8FC130E5B4913035B495B48
4813064848130E48C75AD80FFC137C391FFF81F8381E0FFFD838075B486C5B00605CD8E0
0190C7FC38C0007C23267DA427>122 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs ecti1000 10 26
/Fs 26 122 df<04FFEB03F003039038E00FFC923A0FC0F01F1E923A3F00783E0F923A7E
01F87C3FDB7C03EBFC7F03FC14F8DA01F813F905F1137EDC01E1133C913B03F00003F000
A314074B130760A3140F4B130F60A3010FB812C0A3903C001F80001F8000A3023F143F92
C790C7FCA44A5C027E147EA402FE14FE4A5CA413014A13015FA313034A13035FA313074A
495AA44948495AA44948495AA3001CD9038090C8FC007E90380FC03F013E143E00FE011F
5B133C017C5C3AF8780F01E0D878F0EB07C0273FE003FFC9FC390F8000FC404C82BA33>
27 D<EA03C0EA07F0120F121F13F8A313F0EA07B0EA003013701360A213E013C01201EA
038013005A120E5A5A5A5A5A0D197A8819>44 D<387FFFF8A2B5FCA214F0150579941E>
I<120EEA3F80127F12FFA31300127E123C0909778819>I<14F8EB07FE90381F871C9038
3E03FE137CEBF801120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300A2
1407485C5AA2140F5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C485B
9038038F8E391F0F079E3907FE03FC3901F000F0222677A42A>97
D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE9038EF0F
80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A127EA214
0F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03E0383E07
C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E090381F00
70017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC485AA2127F
90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00
380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA3150316F0A21507A216E0A2
150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF017C5BEB
F80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA214075A485CA2
140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B9038038F8E
391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380FC1E09038
3F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81
FF00EBFFF8148090C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C06C
EB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1FF0ED3E38ED
7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D010FB512C0
5B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA413075CA4130F5C
A3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C82
BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F80011F1307
D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F1207491400A25DA249
137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF390380FC3F0EB00
031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07E0381FFF80
D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8
FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16C05B49EB1F
8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F8163C003F01
031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E38048903800FF0000
38143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03FC
EA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203A25B12075B
A2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E014
3879B619>I<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA212
01A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E0E
A212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>108
D<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F261C1F
78D9F3C013803C383FF001F7800F02E01400007801C013FE007018C002805B4A4848EB1F
80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C0001177E495C18FE031F5C
120349DA8001131C18F8033F153C00070403133849020013F0A24B1570000F17E049017E
15F019E003FEECE1C0001FEE01E34949903800FF000007C70038143C3E2679A444>I<D8
01E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E00078
13C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F5E12
034990383F8380160316070007027F130049137EA2160E000F147C49141E161C5E001FEC
3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC090380FC1F090381F00F8
017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A
4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E
6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C090391FE03FF09039
3CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113C15C
A2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F495A
6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25BA212
03A25B1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F381C7C703A
3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2120012
015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>114
D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313F0A2
15E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F14
0F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC
1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC
3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078
147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13F8D8
03FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F131F
00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC0EA2
0201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78E090
393FF03FC090390FC00F00272679A42D>I<01F0130ED803FC133FD8071EEB7F80EA0E1F
121C123C0038143F49131F0070140FA25BD8F07E140000E08013FEC6485B150E12015B15
1E0003141C5BA2153C000714385B5DA35DA24A5A140300035C6D48C7FC0001130E3800F8
3CEB7FF8EB0FC0212679A426>I<01F01507D803FC903903801F80D8071E903907C03FC0
D80E1F130F121C123C0038021F131F49EC800F00701607A249133FD8F07E168000E0ED00
0313FEC64849130718000001147E5B03FE5B0003160E495BA2171E00070101141C01E05B
173C1738A217781770020314F05F0003010713016D486C485A000190391E7C07802800FC
3C3E0FC7FC90393FF81FFE90390FE003F0322679A437>I<903907E007C090391FF81FF8
9039787C383C9038F03E703A01E01EE0FE3803C01F018013C0D8070014FC481480000E15
70023F1300001E91C7FC121CA2C75AA2147EA214FEA25CA21301A24A1370A2010314F016
E0001C5B007E1401010714C000FEEC0380010F1307010EEB0F0039781CF81E9038387C3C
393FF03FF03907C00FC027267CA427>I<13F0D803FCEB01C0D8071EEB03E0D80E1F1307
121C123C0038140F4914C01270A249131FD8F07E148012E013FEC648133F160012015B5D
0003147E5BA215FE00075C5BA214015DA314035D14070003130FEBF01F3901F87FE03800
7FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8EB03E0
6C485A383C1F80D80FFEC8FCEA03F0233679A428>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft ecbx1200 12 35
/Ft 35 122 df<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA5
264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE0
007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A
6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC
4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC
017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713
FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16
C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC
15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0
EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80F
FEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E
5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8
EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A
12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F01FF
EB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C7
14C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8
FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C012
3E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01
FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F8090
390FFC001FD93FF014C04948137F4948EBFFE048495A5A1400485A120FA248486D13C0EE
7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F89039F9
F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4127F
A5123FA217F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C9038
E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D427BC038>I<121E121F13FC
90B712FEA45A17FC17F817F017E017C0A2481680007EC8EA3F00007C157E5E00785D1501
4B5A00F84A5A484A5A5E151FC848C7FC157E5DA24A5A14035D14074A5AA2141F5D143FA2
147F5D14FFA25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F447AC238>I<EC7FF00103B5
FC010F14C0013F14F090397F801FFC3A01FC0003FE48486D7E497F4848EC7F80163F4848
15C0A2001F151FA27FA27F7F01FE143F6D158002C0137F02F014006C01FC5B6E485A6C90
38FF83FCEDE7F86CECFFE06C5D6C92C7FC6D14C06D80010F14F882013F8090B7FC48013F
14802607FC0F14C0260FF80314E04848C6FC496D13F0003F141F48481307496D13F81500
00FF157F90C8123F161F160FA21607A36D15F0127F160F6D15E06C6C141F6DEC3FC06C6C
EC7F80D80FFE903801FF003A07FFC00FFE6C90B55AC615F0013F14C0010F91C7FC010013
F02D427BC038>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F169F031F
80161F82033F80ED3E07037E80157C8203FC804B7E02018115F0820203814B137F020781
5D173F020F814B7F021F8292C77EA24A82023E80027E82027FB7FCA291B87EA2498302F0
C8FCA20103834A157F0107834A153FA249488284011F8491C97E4984133E017E82B6020F
B612F0A54C457CC455>65 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FED
FE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E494881494881
4948167F4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994
C7FC12FFAE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F
806C6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D90
3AFFF001FF80023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451
>67 D<B712E0A5D8001F90C7FCB3B3B3A4B712E0A523447DC32A>73
D<0107B7FCA590C7001F1300B3B3A9EA1FE0487E487EA2487EA44B5AA26C48495A495C6C
4813FF6C48485B260FFC0713C06CB65A6C4AC7FCC66C13F8010F138030457DC33A>I<B6
4BB512FE8181A281D8003F6D91C7EA780081013D7F81133C6E7E6E7F6E7F6E7F6E7F8280
6E7F6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F707F707F8482707F707F
717E7113807113C019E0837113F07113F87113FC7113FE19FF847213F884848484A28484
197F193F191FA2190F1907B61603190119001A78A24F447CC358>78
D<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA286
84A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818E0
18F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141E
B700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7E
A26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC0100
0313E0481380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013EEB
FFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF000F
FE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2177F18
F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512F0D9
F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F14FC90
397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED
00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F00
6C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32
>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF8
07FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC
127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01F
EF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E
010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001F
ED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F
17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE
011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0027F13
F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFFE0ED03
F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>I<137C48B4FC
4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512
037EB3AFB6FCA518467CC520>105 D<EC03E0EC0FF8EC1FFCEC3FFEA2EC7FFFA5EC3FFE
A2EC1FFCEC0FF8EC03E091C7FCAAEC01FF0103B5FCA5EB000F80B3B3A7EA1F80EA3FC0EA
7FE0EAFFF0EC0FFEA215FC141F01E013F8007FEB3FF0393FC0FFE06CB512806C14000003
13FCC613C0205A86C522>I<EB7FC0B5FCA512037EB293387FFFE0A593380FE0004C5A4C
C7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FEECC1FCECC3FE14C7ECDFFF91B57E82
A202F97F02E17F02C07FEC807F6F7E826F7E816F7F836F7F816F7F83707E163FB60003B5
12F8A535457DC43B>I<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>I<90277F
8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E002816E4880913D87F01FFC
0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C019E6D013C130F02BC5D
02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E>I<90397F
8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F801F000390399F000FFE
6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1FFC49B512
C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE00007824848
6E7E49140F001F82A2003F82491407007F82A400FF1780AA007F1700A46C6C4A5AA2001F
5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A010F14
F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590B57E02C314E002CF14
F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15C04A6D13E05C7013F0
A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913806E4913006E49
5A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FCADB67EA536407DAC3E
>I<90387F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14
F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114
D<90391FFC038090B51287000314FF120F381FF003383FC00049133F48C7121F127E00FE
140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15
806C7E010F14C0EB003F020313E0140000F0143FA26C141F150FA27EA26C15C06C141FA2
6DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C
>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C6
01E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D
13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81
B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E76DB512C7010F1407010313FE
9026007FF0EBFC00372E7CAC3E>I<B6903803FFFCA5000101E09038003E006C163C8001
7F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6D
EBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90
C8FCA26E5AA26E5AA21578362C7EAB3B>I<B5D8FE1FB539801FFFF0A500019027C0003F
E0C7EA7C007114786E17F86C6F6C5C6E1601017F6E6C5CA26E011F1403013F6F5C6E013F
1407011F6F5CA26E0179140F010F048090C7FC6E01F95C6D02F0EBC01E15806D902681E0
7F5B18E003C3157C6D9139C03FF07815E76DDA801F5B18F803FF14F96E9039000FFDE018
FF6E486D5BA36E486D5BA26E486D90C8FCA24B7F02075DA26E48147C4B143C4C2C7EAB51
>I<B6903803FFFCA5000101E09038003E006C163C80017F5D8017F8013F5D6E1301011F
5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F
1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578A215
F85D14015D001F1303D83F805B387FC007D8FFE05B140F92C9FC5C143E495A387FC1F8EB
07F06CB45A6C5B000790CAFCEA01FC36407EAB3B>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu ecti0900 9 44
/Fu 44 122 df<EA0380EA0FE0121FA5EA0760120013E013C0A2120113801203EA070012
06120E5A5A5A5A5A0B176FB318>39 D<B51280A46C1300110579911B>45
D<121C127F12FFA412FE12380808778718>I<171817381730177017E017C01601178016
0317005E160E160C161C161816385E166016E05E15015E15034BC7FC1506150E150C151C
151815385D156015E05D14014A5A92C8FC5C1406140E140C141C5C14301470146014E05C
1301495A91C9FC5B1306130E5B1318133813301370136013E0485A5B120390CAFC5A1206
120E5A12181238123012705A5A2D4B7FB727>I<EC1FC0EC7FF0903801E0F8903807C03C
EB0F00011E131E133E013C131F5B13F85B1201A2485AA20007143F5BA2120F153E49137E
121FA348C712FCA4007EEB01F8A4007CEB03F012FCA2EC07E0A24814C0A2EC0F80A2EC1F
00A2141E5C0078137C5C387C01F0383C03E0381F0F80D80FFEC7FCEA03F8203477B127>
I<EC0FE0EC3FF8ECF03E903803C01F903907800F80EB0F00011EEB07C0131C5BD978C013
E0EB70E0EBF06013E0120113C0ECE00F000301C013C013801381EC801F01831480903887
003F018E1400D801FC137ED800F05B90380001F84A5A4A5A4A5A4AC7FC147E14F8EB03E0
EB0FC049C8FC133E13784848EB0380485A4913074848140048C75A121E001C141E003F14
3E01F85B397DFF80F838781FFF486C5BD8E0035B6D1380D9007EC7FC23347AB127>50
D<EC01F8EC0FFEEC3FFFECFE0F903901F80780903803E00F903807C01F90380F803FD91F
001300133E49130E01FC90C7FC5B1201485AA2485AA2380FC1F8EBC7FF9038DE0780391F
B803C001F07FEBE001003F8013C01380A2D87F007FA2127E4A5AA25AA214075DA25A4A5A
A25D141F4AC7FC0078133E007C5B5C6C485A381F07E0EBFFC0000790C8FCEA01F8213477
B127>54 D<EC07E0EC3FFC4A7E903801F81F903903E00F809038078007D90F0013C04913
03131E5BA21507017C1480A2150F1600017E131E017F133E6E5A6D6C5AECE1E090381FFB
C06DB4C7FC6D5A6D7E497F011E7F90387C7FE09038F01FF048486C7E3807C007EB800338
0F0001001E1300123E003C1478127C1278A215F800F85C5A6C495A007813035D007C495A
003C011FC7FC003E133E381F81FC380FFFF0000313C0C648C8FC223479B127>56
D<EC0FC0EC7FF0ECFFFC903803F07E903807C03E49487EEB1F00013E7F017E14805BA248
5AA2485A151FA212075BA2ED3F00A2485A5DA2000714FEA21401140300035CEBE0070001
130E3900F03DF8EB7FF1EB0FC190380003F0A24A5AA25D4A5A141F003891C7FC007E133E
00FE137E5C48485A48485A48485A38781F80D87FFFC8FCEA1FFCEA07E0213478B127>I<
161C163CA2167C16FCA21501821503A2ED077E150F150E151CA21538A2157015F015E0EC
01C0A2913803807F82EC0700A2140E141E141C5CA25CA25C49B6FCA25B913880003F49C7
EA1F80A2130E131E131C133C13385B13F05B12011203D80FF0EC3FC0D8FFFE903807FFFE
A32F367BB539>65 D<0107B612C04915F017FC903A003F8000FE177FEF3F8092C7121FA2
4A15C0A2147EA214FE18804A143FA20101ED7F00177E4A5C16010103EC03F04C5A4AEB1F
C091B6C7FC495C9139F0007F804AEB0FC0707E010F6E7E834A1301A2011F81A25CA2133F
5F91C71203A2494A5AA2017E4A5A4C5A01FE4A5A4CC7FC49EB01FE0001EC07FC007FB612
F0B712C04BC8FC32337BB236>I<DB1FF013C09238FFFC010203EBFF03913A0FF00F8780
91393F8003CF9139FE0001EF4948EB00FFD903F01500D90FE080495A49488091C8123E13
7E13FE485A4848153CA2485AA248481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2
EE03C0A25F127E160794C7FC5E160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07
C06C6C49C8FC6C6C133E6CB413FC90387FFFF0011F13C0D903FEC9FC323775B437>I<01
07B712E05B18C0903A003F80003F170F170792C7FC17035C1880147EA214FEA24A131CA2
0101EC3C07043813004A91C7FC167813035EECF00391B5FC5B5EECE0031501130F5E14C0
170E011F0103131EEE801C0280143C92C71238133F177891C8127017F0495D1601017E14
034C5A13FEEE1F8049143F0001DA03FFC7FC007FB7FCB8FC5E33337BB234>69
D<0107B712E05B18C0903A003F80003F170F170792C7FC17035C1880147EA214FEA25C16
1C0101EC3C07043813004A91C7FCA20103147816704A13F0150349B5FCA25EECE003130F
6F5A14C0A2011F13035E1480A2013F90C9FCA291CAFCA25BA2137EA213FEA25B1201387F
FFFCB5FCA233337CB232>I<92391FE001809238FFF8030207EBFE07913A1FF01F0F0091
393F80079F9139FE0003DFD901F86DB4FCD907F05C49481300495A4948147E49C8127C13
7E13FE485A48481578A2485AA248481570A2485A94C7FC123F5BA3127F90CBFCA400FE91
383FFFFCA25F9238003F8094C7FCA2007E5D167EA3007F15FE6C5DA26C6C1301A26C6C49
5A6D13076C6CEB0F786C6C133E3A00FF01FC3090387FFFF0011F01C0C8FCD903FEC9FC31
3775B43B>I<010FB51280A216009038003FC05DA292C7FCA25CA2147EA214FEA25CA213
01A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C8FCA25BA2137EA2
13FEA25B1201B512F8A25C21337BB21E>73 D<0107B512C05BA29026003FC0C7FC5DA292
C8FCA25CA2147EA214FEA25CA21301A25CA21303A25CA21307A25CA2130FA25C17E0011F
140117C05C1603013F1580160791C7FCEE0F005B5E017E143EA201FE5CED01FC49130300
01EC1FF8007FB6FCB7FC5E2B337CB230>76 D<902607FFC0ED7FFC4917FF81D9003F4B13
00611803023BED077CA2027BED0EFC610273151C1838DAF1F01439F071F014E118E10101
ED01C36102C1EC0383EF070301031607050E5BEC80F8171C0107ED380F6102001470A249
EDE01FDC01C090C7FC130EEE0380011E017C5C933807003E011C140EA2013C4A137E187C
01385C5E017816FC6F485B1370ED3FC001F0EC80016000011500D807F81503277FFF803E
90B512C0B5EB3C01151C46337BB245>I<ED1FE0913801FFFC913807E03F91391F800FC0
91393E0003E002F8EB01F0495A4948EB00F8494814FC4948147C49C8127E133E017E153E
49153F485AA2485A12075B120F5B121F177F5B123FA348C912FEA4EE01FC12FEEE03F8A2
17F0160717E0160F007E16C0EE1F80A2EE3F006C157E5E5E6C6C495A000F4A5A6D495A00
07EC1F806C6C013EC7FCD801F813FC39007E07F090383FFF80D907FCC8FC303775B43B>
79 D<0107B67E4915F083903A003F8003FCEE007E8392C71380171F5C18C0147EA214FE
EF3F805CA2010116005F4A147E5F010314015F4AEB07F0EE0FC00107EC7F8091B500FEC7
FC16F002E0C9FC130FA25CA2131FA25CA2133FA291CAFCA25BA2137EA213FEA25B120138
7FFFF0B5FCA232337BB234>I<913901FC018091380FFF03023F13C791387E07EF903A01
F801FF0049487E4A7F495A4948133E131F91C7FC5B013E143CA3137E1638A293C7FC137F
A26D7E14E014FE90381FFFC06D13F86D7F01017F6D6C7E020F7F1400153F6F7E150FA412
0EA2001E5D121CA2151F003C92C7FCA2003E143E5D127E007F5C6D485A9038C007E039F3
F80FC000F0B5C8FC38E03FFC38C00FF029377AB42B>83 D<0003B812C05A1880903AF800
FC003F260FC001141F0180150F01005B001EEE07001403121C003C4A5BA200380107140E
127800705CA2020F141E00F0161CC74990C7FCA2141FA25DA2143FA292C9FCA25CA2147E
A214FEA25CA21301A25CA21303A25CA21307A25C497E001FB512F05AA2323374B237>I<
EB03F0EB0FF890383E1C6090387C0FF0EBF807EA01F0EA03E00007EB03E0EA0FC0A2381F
800715C0EA3F00A2140F481480127EA2141F00FE14005A1506EC3F07EC3E0F150E147E00
7C141EECFE1CEB01FCD83C03133C393E07BE38391F0E1E783907FC0FF03901F003C02022
78A027>97 D<137EEA0FFE121F5B1200A35BA21201A25BA21203A25BA21207A2EBC3E0EB
CFF8380FDC3EEBF81F497E01E01380EA1FC0138015C013005AA2123EA2007E131F158012
7CA2143F00FC14005AA2147EA25CA2387801F85C495A6C485A495A6C48C7FCEA0FFCEA03
F01A3578B323>I<14FCEB07FF90381F078090383E03C0EBFC013801F8033803F0073807
E00F13C0120F391F80070091C7FC48C8FCA35A127EA312FE5AA4007C14C0EC01E0A2EC03
C06CEB0F80EC1F006C137C380F81F03803FFC0C648C7FC1B2278A023>I<ED0FC0EC03FF
A21680EC001FA31600A25DA2153EA2157EA2157CA215FCA2903803F0F8EB0FF8EB3E1DEB
7C0F496C5AEA01F0EA03E000071303D80FC05BA2381F8007A2D83F005BA2140F5A007E5C
A2141F12FE4891C7FC1506EC3F075DEC3E0E147E007C141EECFE1CEB01FCD83C03133C39
3E07BE38391F0E1E783907FC0FF03901F003C0223578B327>I<EB03F8EB0FFEEB3E0F90
38F807803801F003EA03E0EA07C0120FEA1F801407D83F0013005C007E133EEB03F8387F
FFE04848C7FC00FCC8FCA45AA4EC0180EC03C0A2007CEB0780EC1F00003C133E6C13F838
1F03E03807FF80D801FCC7FC1A2277A023>I<151FED7FC0EDF0E0020113F0EC03E3A2EC
07C316E0EDC1C091380FC0005DA4141F92C7FCA45C143E90381FFFFEA3D9007EC7FC147C
A414FC5CA513015CA413035CA413075CA3130FA25CA3131F91C8FCA35B133E1238EA7E3C
A2EAFE7812FC485AEA78E0EA3FC0000FC9FC244582B418>I<143FECFF80903803E1E690
3807C0FF90380F807FEB1F00133E017E133F49133EA24848137EA24848137CA215FC1207
4913F8A21401A2D80FC013F0A21403120715E01407140F141F3903E03FC00001137FEBF0
FF38007FCF90381F0F801300141FA21500A25C143E1238007E137E5C00FE5B48485A3878
03E0387C0F80D81FFFC7FCEA07F820317CA023>I<EB0FC0EA03FFA25CEA001FA391C8FC
A25BA2133EA2137EA2137CA213FCA29038F83F80ECFFE03901FBE0F09038FF80F8EC0078
49137C485A5B5BA2484813FC5D5BA2000F13015D1380A2001F13035DEB0007EDC0C048EC
C1E0020F13C0003E1481A2007E1483ED0380007C1407160000FC140E151E48EB07F80070
EB01F023357BB327>I<EB0180EB07E0A2130FEB07C0EB038090C7FCABEA01F0EA03FCEA
0F1E120E121C123C1238EA783E1270A2137EEAF07CEA60FCC65AA212015BA212035BA200
0713C0EBC1E0000F13C01381A21383EB038013071400130E131EEA07F8EA01F013337AB1
18>I<1538157C15FCA315701500AB143EECFF80903801E3C090380383E0EB0701130FEB
0E03131C133C133814071378013013C01300140FA21580A2141FA21500A25CA2143EA214
7EA2147CA214FCA25CA21301A25CA213035C1238387E07C0A238FE0F804848C7FCEAF83E
EA787CEA3FF0EA0F801E4283B118>I<133FEA07FF5A13FEEA007EA3137CA213FCA213F8
A21201A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA2
127EA2127C1318EAFC1C133CEAF838A21378137012F013F0EAF8E01279EA3FC0EA0F0010
3579B314>108 D<2703C003F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F
8F01F03B3C3DE0079E0026383FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC0
0100E05FD860F8148012000001021F130360491400A200034A13076049013E130FF08180
0007027EEC83C0051F138049017C1403A2000F02FC1407053E130049495CEF1E0E001F01
015D183C010049EB0FF0000E6D48EB03E03A227AA03F>I<3903C007F0390FF01FFC391E
787C1E391C7CF01F393C3DE00F26383FC01380EB7F8000781300EA707EA2D8F0FC131F00
E01500EA60F8120000015C153E5BA20003147E157C4913FCEDF8180007153C0201133801
C013F0A2000F1578EDE070018014F016E0001FECE1C015E390C7EAFF00000E143E26227A
A02B>I<14FCEB07FF90381F07C090383E03E09038FC01F0EA01F83903F000F8485A5B12
0F484813FCA248C7FCA214014814F8127EA2140300FE14F05AA2EC07E0A2007CEB0FC015
80141FEC3F006C137E5C381F01F0380F83E03803FF80D800FCC7FC1E2278A027>I<011E
137C90387F81FF9039F3C387C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0
018314F814E0EA07871307000313C01200010F130316F01480A2011F130716E01400A249
EB0FC0A2013EEB1F80A2017EEB3F00017F133E5D5D9038FF81F09038FDC3E09038F8FF80
027EC7FC000190C8FCA25BA21203A25BA21207A25BB5FCA325307FA027>I<3903C00FC0
390FF03FF0391E78F078391C7DE03C393C3FC0FC00381380EB7F00007814F8D8707E1370
1500EAF0FC12E0EA60F812001201A25BA21203A25BA21207A25BA2120FA25BA2121FA290
C8FC120E1E227AA020>114 D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F000313
1F13C0A2EBE00414007FEBFF8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800
FC133CA3147C00F013784813F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F
>I<1303EB0F80A3131FA21400A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A2
1201A25BA21203A25BA21207A25BA2120FA25B1460001F13F014E01300130114C0130300
1E1380EB07005BEA0F1EEA07F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B00
0E5C121C123C00385CD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C
5BA2140100035C13E0166002031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1
EC1FC3000190383FE3809038F071E73A007FE0FF0090381F803C24227AA029>I<01F013
38D803FC13FCEA0F1E120E121C123C0038147CEA783E0070143CA2137ED8F07C1338EA60
FCC65A1578000114705BA215F0000314E05BA2EC01C0A2EBC003158014071500EBE00EA2
6C6C5A3800F878EB7FE0EB1F801E227AA023>I<D801F01538D803FC010E13FCD80F1E13
1E000E143E121C123C0038027E137CD8783E137C0070163CA2017E13FCD8F07C491338EA
60FCC65A0201147800014A137013F0A2020314F0000316E001E05BA2160117C001C013C0
0207EB0380A29039E00FE0071700021F130E3A01F03DF01E3A00F878F83C90393FF03FF0
90390FC00FC02E227AA033>I<13F0D803FC1307D80F1E130F000E141F121C123C003814
3FD8783E133E1270A2017E137ED8F07C137CEA60FCC65A15FC000114F85BA21401000314
F013E0A2140315E0EA07C0A20003130715C0EBE00F141F0001133F9038F07F8038007FEF
EB1F8FEB001F1500A25C003E133E007E137E147C5C007C5BEA7001495A38380780D83C1F
C7FCEA0FFCEA07F020317AA025>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv ecbx0900 9 21
/Fv 21 117 df<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C7A8B19>46
D<EB03FE90383FFFE090B512F848EB07FC3903FC01FE48486C7E4848EB7F8049133F001F
15C0A2003F15E049131F007F15F0A500FF15F8B1007F15F0A4003F15E06D133FA2001F15
C0A26C6CEB7F806C6CEBFF006C6C485A3901FF07FC6CEBFFF8013F13E0D903FEC7FC2532
7DB02C>48 D<147814F81303131FEA03FFB5FCA3EAFC1F1200B3B2007FB512FEA41F317A
B02C>I<EB1FFC90B57E000314E0000F14F8391FE03FFC393F800FFF48487E6D6C1380D8
FFC014C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C16004A5A4A5A5D4A5AEC3F
C04A5A02FEC7FC495A495A903907E001E0EB0FC0EB1F8090383E00034914C05B48481307
48B6FC5A5A5A5A5AB71280A423317CB02C>I<EB0FFC90387FFF8048B512F03903F01FF8
3907C00FFE380F8007486C6C7E01F01480123F13F8A5D81FF014006C485AD803805BC7FC
4A5A4A5A4A5AECFFC0013F90C7FC14FCECFFC09038001FF0EC0FFC6E7E6E7E16806E13C0
A2000F15E0EA3FC0EA7FE0EAFFF0A416C0A2495AD87FC0148049481300003F5B391FF01F
FE6CB512F8000314E0C61480D91FFCC7FC23327CB02C>I<151F5D5DA25D5C5C5C5CA25C
143D147D14F9EB01F114E1EB03C1EB0781130FEB1F01133E133C137813F01201EA03E0EA
07C01380EA0F00121E123E5A5AB712FEA4C700031300A80103B512FEA427317EB02C>I<
000C140ED80FE013FE90B5FC5D5D5D5D5D92C7FC14FC14F091C8FC1380A6EB87FE9038BF
FFC090B512F09038FC0FF89038E003FE01C07F497E01001480000E6D13C0C8FCA216E0A3
121FEA7F807F487EA316C05B5CD87F801480D87C0014006C5B393F8007FE391FE01FFC00
07B512F06C14C0C691C7FCEB1FF823327CB02C>I<EC7FC0903803FFF0010F13FC90383F
E07E90387F801F4848485A4848EBFF8048485A13F8120FEA1FF0A2123F6E13004848133C
92C7FCA2142039FFE1FF8001E713E001EF13F89038FE03FC496C7E01F87F6E13805B16C0
A24914E0A5127FA5123F16C0121F6D1480000F5B01F814006C6C485A6C6C485A6CB55A6C
6C5B011F13C0D907FEC7FC23327CB02C>I<123C123F90B612F8A44815F016E016C01680
16005D007CC7127E00785C4A5A00F8495A48495A4A5A4A5AC7FC4AC7FC147E14FE5C1301
5C1303A2495AA2130FA2131FA25C133FA4137FA96D5AA2010FC8FC25337BB12C>I<EB07
FE90383FFFC090B512F03903F807FC3907C000FE4848137F8148C71380151F5A7FA27F7F
01F8133F01FE14006D6C5A6CEBE0FEECF1FC6CEBFFF815E06C5C6C14F06C806C6C7F48B5
7E4880D80FF31480D81FE014C0383FC03FEB800F48486C13E0140148EB007F48143F151F
A2150FA216C07E6C141F6D14806C6C133F6DEB7F00391FF803FE0007B512F86C5CC66C13
C0D90FFCC7FC23327CB02C>I<EB07FC90383FFF8090B512E03903FE0FF03907F807F848
486C7E001F6D7E003F80497E007F1580A212FF16C0A416E0A6007F5BA2123F5CEA1FF000
0F5B6C6C5A3803FFFEC65BD93FF013C0EB00805CA2EA0780261FE0011380EA3FF01600A2
4A5AA24A5A49485A391F801FF09038C07FE06CB512806C91C7FC000113FC38003FC02332
7CB02C>I<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587021F
801503023F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A131FA2
49B67EA24981A290271F8000077F91C77EA24982013E80017E82017C80A201FC8249157F
B500F0013FB512F0A43C347DB343>65 D<B812FCA4C69038E0001FEE03FE16011600177E
173EA2171EA3923803C01F170FA403071300A2150F153F91B5FCA4ECE03F150F1507A215
03A592C8FCABB612F8A430337DB238>70 D<EB7FFE0003B512E04814F8390FF00FFC391F
F803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F00
0F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F00
03EBFC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC0FF8EC7FFF01FD
B512C09039FFF01FF09138800FF84A6C7E496D7E496D7EA2178081A217C0A91780A25D17
00A26D495A6D495A6E485A9039F7E03FF001E1B512C0D9C07F90C7FC9038801FF02A347D
B331>I<903807FF80013F13F090B512FC3903FE01FE4848487EEA0FF8EA1FF0EA3FE0A2
007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C130F000FEC1F00D807
FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>I<16F890390FFC07FE
90387FFF9F48B6127F3907FC0FFC380FF003001F14FED9E001133E003FECFF1C1600A600
1F5CEBF003000F5C3907FC0FF890B512E0486C1380D90FFCC7FC48C9FCA37F7F90B512F0
15FE6CECFF8016E06C15F06C15F84815FC121F393F80001F48C7EA03FE481401481400A4
6C14016C6CEB03FC6C6CEB07F86C6CEB0FF0D80FFCEB7FE00003B61280C6ECFE00010F13
E028327EA12C>103 D<EA03F0487E487E487EA66C5A6C5A6C5AC8FCA8EA01FC12FFA412
0F1207B3A5B512C0A412357DB418>105 D<3901F81F8000FFEB7FF0ECFFF89038F9E3FC
9038FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC0060491300B1B512F0A41F217EA0
24>114 D<9038FFE1C0000713FF5A383F803F387E000F14075A14037EA26C6CC7FC13FC
EBFFE06C13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F00F0130714037E
A26C14E06C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C217DA023>I<13
3CA5137CA313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0EC03C0A79038FE
078012033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw ecrm0900 9 73
/Fw 73 253 df<B712F8A22502809426>21 D<91393FE00FE0903A01FFF83FF8903A07E0
1EF83C903A1F800FF07E903A3F001FE0FE017E133F4914C0485A1738484890381F8000AC
B812C0A33B03F0001F8000B3A7486C497EB50083B5FCA32F357FB42D>27
D<EC1FE0ECFFFC903803F01E90390FC00780EB1F8090393F000FC0017E131F5BA2485AED
0F8092C7FCA9ED0FC0B7FCA33901F8001F150FB3A6486CEB1FE0267FFFC1B5FCA328357F
B42B>I<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F90C7FC5A
A2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F1203A26C7E
6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>40 D<12C07E1270123C121C
7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E131FA37F1480A5EB07C0B0
EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A485AA2485A48C7FC120E5A
123C12705A5A124A7CB71E>I<123C127EB4FCA21380A2127F123D1201A412031300A25A
1206120E120C121C5A5A126009177A8715>44 D<B512F0A514057F921A>I<123C127E12
FFA4127E123C08087A8715>I<1518A215381530A21570156015E015C0A214011580A214
0315005C1406A2140E140CA2141C141814381430A214701460A214E05CA213015C130391
C7FCA25B1306A2130E130C131C1318A213381330A213701360A213E05B12015BA2120390
C8FCA25A1206120E120CA2121C1218A21238123012701260A212E05AA21D4B7CB726>I<
EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E0391F0001F0A24814F8A2
003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0A2390F8003E03907C0
07C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>I<13075B5B137FEA07FFB5
FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126>I<EB3FC0EBFFF0000313FC
380F80FF391E007F80001CEB3FC048EB1FE048130F15F00060130712FC6C14F87E1403A3
007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C495A5C495A495A495A
49C7FC133E133C4913185B485A48481330485A48C7FC001C1470001FB512F05A5AB612E0
A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0001EEB0FE0001CEB07
F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0FE015C0141FEC3F80EC7E00
EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315FC140115FEA3127EB4FCA4
15FC48130312780070EB07F86C14F0003C130F001FEB1FE0390FE03F800003B51200C613
FCEB1FE01F347DB126>I<EC01C0A214031407A2140F141FA2143F147F146F14CF1301EB
038F140F1307130E130C131C13381330137013E013C0EA0180120313001206120E120C5A
123812305A12E0B71280A3C7380FC000A94A7E0107B51280A321337EB226>I<000C14C0
380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9EB0FC0EB7FF8EBF07C380F
C03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215F8A41218127E12FEA315F0
140712F8006014E01270EC0FC06C131F003C14806CEB7F00380F80FE3807FFF8000113E0
38003F801D347CB126>I<14FE903807FF80011F13E090383F00F0017C13703901F801F8
EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB07F0EB1FFC38FE381F
9038700F809038E007C039FFC003E0018013F0EC01F8130015FC1400A24814FEA5127EA4
127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E03903E00FC03901F81F806C
B51200EB3FFCEB0FE01F347DB126>I<1230123C003FB6FCA34814FEA215FC0070C71238
00601430157015E04814C01401EC0380C7EA07001406140E5C141814385CA25CA2495A13
03A3495AA2130FA3131F91C7FCA25BA55BA9131C20347CB126>I<EB0FE0EB7FFC90B5FC
3903F01F803907C007C0390F0003E0000EEB01F0001E1300001C14F8003C1478A3123EA2
003F14F86D13F0EBC001D81FF013E09038F803C0390FFE07803907FF0F006C13DE6C13F8
7EEB3FFE8001F713C0D803E313E0D8078013F0390F007FF8001E131F003EEB07FC003C13
03481301EC007E12F848143EA2151EA37E153C1278007C14787E6C14F0390F8003E03907
F01FC00001B5120038007FFCEB1FE01F347DB126>I<EB0FE0EB7FF8EBFFFE3803F83F39
07E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F8127EA200FE14FC1400A415FE
A5007E1301A2127F7E1403EA1F80000F13073807C00E3803E01C3801F03838007FF09038
1FC0FC90C7FC1401A215F8A215F01403001F14E0383F800715C0140FEC1F809038003F00
001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126>I<123C127E12FFA4127E
123C1200B0123C127E12FFA4127E123C08207A9F15>I<B912E0A2CCFCAEB912E0A23312
7C9B3C>61 D<EBFFC0000313F8380F00FE001C133F48EB1F804814C0140F00FC14E07EA4
127CC7EA1FC0A2EC3F80EC7F0014FE14F8495A495A5C495AA249C7FC130EA2130C131CA2
1318A890C8FCA7133C137E13FFA4137E133C1B357CB424>63 D<EC07FC91387FFFC09039
01F803F090390780003C011EC7120F0138EC0380496E7E496E7E48481570484881270700
03F87F000ED91FFE7F000C90397E078006001C9039F801C0073B1801F000E003D8380302
701380263007E0EB3F014A1481D8700F021F13C026601F801480A200E017E0D8C03F1660
91C7FCA880EAE01F1260A226700FC015E0D83007023F13C080263803F0137FD81801ECFF
813C1C00F801CFC180000C90397E0787C3000E903A1FFE03FF006C903903F800FC6C6CCA
FC6C7E6C7E0170ED03E06D150F011EED7F80D90780903803FC00D901F8EB7FE09027007F
FFFEC7FC0207138033367CB43C>I<15E0A34A7EA24A7EA34A7EA3EC0DFE140CA2EC187F
A34A6C7EA202707FEC601FA202E07FECC00FA2D901807F1507A249486C7EA301066D7EA2
010E80010FB5FCA249800118C77EA24981163FA2496E7EA3496E7EA20001821607487ED8
1FF04A7ED8FFFE49B512E0A333367DB53A>I<B7FC16E016F83A03FC0003FE0001EC00FF
EE7F80EE3FC0161F17E0160F17F0A617E0161F17C0EE3F80EE7F0016FEED03FC90B612F0
5E9039FC0007FCED00FEEE3F80EE1FC0EE0FE017F0160717F8160317FCA617F81607A2EE
0FF0EE1FE0163FEE7FC00003913803FF00B75A16F816C02E337DB236>I<DA03FE130C91
393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FE
C7120348481401000315005B4848157C485A173C485A171C123F5B007F160CA390C9FC48
1600AB7E6D150CA3123F7F001F161C17186C7E17386C6C15306C6C15706D15E012016C6C
EC01C0D97F80EB0380D91FC0EB0F00D90FF0131ED903FE13FC0100B512F0023F13C0DA03
FEC7FC2E377CB437>I<B77E16F016FE3A01FE0001FF00009138003FC0EE0FE0707E707E
707E707E177E177FEF3F80A2EF1FC0A3EF0FE0A418F0AA18E0A3171F18C0A21880173F18
005F17FE5F4C5AEE07F04C5AEE3FC000014AB45AB748C7FC16F8168034337EB23B>I<B8
12C0A3D803FCC7127F0001150FEE03E01601A21600A21760A403061330A41700150EA215
1E157E90B512FEA39038FC007E151E150EA21506170CA3171892C7FCA41738A21770A217
F01601160316070003157FB812E0A32E337DB234>I<B81280A3D803FCC7FC0001151FEE
07C01603A21601A21600A41760150CA31700A2151CA2153C15FC90B5FCA3EBFC00153C15
1CA2150CA592C8FCAB487EB512FEA32B337DB232>I<DA03FE130C91393FFF801C91B512
E0903A03FE01F83C903A0FF0003C7CD91FC0EB0EFCD97F80130701FEC712034848140100
0315005B4848157C485A173C485A171C123F5B007F160CA390C9FC4893C7FCAA0303B512
E07E7F92390003FE00705A123F7F121FA26C7E7F12076C7E7F6C6C14036C7E6D6C1307D9
1FC0EB0E7CD90FF0EB1C3CD903FEEBF81C0100B5EAF00C023F01C0C7FCDA03FEC8FC3337
7CB43C>I<B5D8FE03B512F8A3000190C73807FC006C486E5AB390B7FCA349C71203B3A3
486C4A7EB5D8FE03B512F8A335337EB23A>I<B512FEA3000113006C5AB3B3A7487EB512
FEA317337EB21C>I<017FB5FCA39038003FE0EC1FC0B3B1127EB4FCA4EC3F805A006014
0000705B6C13FE6C485A380F03F03803FFC0C690C7FC20357DB227>I<B500FE903807FF
F8A3000190C7000113006C48EC00FC17F04C5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8
FC150E5D5D15F84A7E14034A7EEC0EFF5C4A6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E
5B6F7E6F7EA26F7E707EA2707E707E160F83707E707EA283486C913807FF80B500FE013F
13FCA336337EB23C>I<B512FEA3D803FEC9FC6C5AB3A9EE0180A416031700A45EA25E5E
5E5E16FE00031407B7FCA329337DB230>I<D8FFFC923801FFF86D5DA20003EFFE00D801
BFED06FCA3D99F80140CA2D98FC01418A3D987E01430A2D983F01460A3D981F814C0A3D9
80FCEB0180A2027EEB0300A36E1306A26E6C5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3
913800FD80A2037FC7FCA3486C133ED80FF04B7EB5011C90387FFFF8A33D337CB246>I<
D8FFFE91381FFFF87F80C6030013006E143CD9DFE01418EBCFF0A2EBC7F8EBC3FCA2EBC1
FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7EA26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED0F
F0ED07F8A2ED03FCED01FEED00FFA2EE7F98EE3FD8A2EE1FF8160F1607A216031601A248
6C1400D807F81578B500C01438A2171835337EB23A>I<EC07FC91387FFFC0903901FC07
F0903907E000FCD90F80133E013FC76C7E017E6E7E496E7E48486E7E48486E7EA248486E
7E000F8249157E001F167FA24848ED3F80A2007F17C0A290C9121FA24817E0AB6C17C06D
153FA3003F17806D157FA2001F17006D5D000F5E6C6C4A5AA26C6C4A5A00015E6C6C4A5A
017E4A5A6D4A5AD91FC0017FC7FCD907E013FC903901FC07F09039007FFFC0DA07FCC8FC
33377CB43C>I<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F80EE1FC017E0
160FA217F0A617E0A2EE1FC0A2EE3F80EE7F0016FEED07F890B65A168001FCC9FCB3A248
7EB512F8A32C337DB234>I<B612FCEDFF8016F03A01FE0007FC0000EC01FEED007F707E
707E83160F83A65FA24C5AA24C5A047EC7FC4B5AED0FF090B612C093C8FC9039FE001FC0
ED07F06F7E6F7E150082167E167FA583A5180C17C0A2043F131C486C1618B500FEEB1FE0
040F1338933807F070C93801FFE09338003F8036357EB239>82 D<90381FE00390387FFC
0748B5FC3907F01FCF390F8003FF48C7FC003E80814880A200788000F880A46C80A27E92
C7FC127F13C0EA3FF013FF6C13F06C13FF6C14C06C14F0C680013F7F01037F9038003FFF
140302001380157F153FED1FC0150F12C0A21507A37EA26CEC0F80A26C15006C5C6C143E
6C147E01C05B39F1FC03F800E0B512E0011F138026C003FEC7FC22377CB42B>I<007FB7
12FEA390398007F001D87C00EC003E0078161E0070160EA20060160600E01607A3481603
A6C71500B3AB4A7E011FB512FCA330337DB237>I<B500FE90381FFFF8A3000190C81300
6C48153C1718B3AF1738017F1530A217706D6C1460011F15E06E495A010F14036D6C495A
6D6C49C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190C8FC35357EB23A>I<B5
00F0903803FFF8A3D807FEC8EA7FC06C48ED1F000001161E6D151C00001618A26D15386D
1530A26D6C5CA26E14E0011F5DA26D6C495AA28001074AC7FCA26D6C1306A28001015CA2
6E131C01001418806E5BA2ED8070023F1360A26E6C5AA215E1020F5BA2DA07F3C8FCA215
FBEC03FEA36E5AA26E5AA31570A235357EB23A>I<B5D8F007B539800FFFF0A3000390C7
273FF000011300D801FC6E48EB007C1A386D140F00001930836D020715706D1860A26E49
6C14E0013F60A26ED919FC1301011F60A26ED930FE1303010F95C7FCA26ED9607F5B0107
1706A26E9039C03F800E0103170CA2913BFC01801FC01C01011718A2913BFE03000FE038
01001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5EA203D8EB01FC021FEDFD80A203
F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA24B141C020115184C357FB2
4F>I<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00C7FCA4
EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA26C131F
6C133B3A3F8071F180391FC1E1FF2607FFC013003900FE003C22237DA126>97
D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049
EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001
CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C039
01F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA12
7FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00
EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF39
07E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C
4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEB
F83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA212FE
A2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901F003
C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB
7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A
357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F8380
9039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380E
FFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F000100
3EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6
B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0
FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B
>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0
B5FCA310337EB215>I<EB03C0EB07E0EB0FF0A4EB07E0EB03C090C7FCAAEB03F013FFA3
13071303B3B01238127C00FE13E0130714C0130F007C138038381F00EA1FFCEA07F01443
84B217>I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E05D4A5A020F
C7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114076E7E8114
016E7E81486CEBFF80B500C313F0A324347EB329>I<EA07E012FFA3120F1207B3B3A7EA
0FF0B5FCA310347EB315>I<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0
903BF3803E1C01F02807F7003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C
487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3
807C3907F7007EEA03FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB
07F0EB3FFE9038FC1F803901F007C03903C001E000078048486C7E48C7127CA248147E00
3E143E007E143FA300FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C39
03F007E03900FC1F80D93FFEC7FCEB07F021237EA126>I<3903F03F8000FFEBFFE09038
F3C0F89038F7007ED807FE7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716
F0A216E0150F16C06D131F6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC
91C8FCAA487EB512C0A325307EA02B>I<903807F00390383FFC07EBFC0F3901F8038F38
07E001000F14DF48486CB4FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F
5B3907E003BF3903F0073F3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA32630
7DA029>I<3803E07C38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049
C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF06000713CE381F00FE003C133E48131E
140E5A1406A27EA200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300
EC3F8000C0131F140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019
237EA11E>I<1330A51370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403
A814073801F806A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB
0FFFA30007EB007F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFE
D907F8130026227EA02B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D13
1C00011418A26C6C5BA26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2
EB07E6A214FE6D5AA26D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801
FC003F8001F049EB1E0000030100141C816C6C017C1318A26D017E1338000002FE1330A2
90267E01FF5B159F168090263F030F5BA216C0903A1F8607C180A202C613E390260FCC03
90C7FCA2D907FC13F6ECF80116FE6D486C5AA36D481378A36D48133034217F9F37>I<B5
3801FFF8A32603FE0013806C48EB7C0000001478017E1370017F5B90383F81C090381F83
80D90FC3C7FCEB07E614FE6D5A6D5A6D7E80805B9038039F809038071FC09038060FE0EB
0C0790381C03F0496C7E01707FEBF000000180000FECFF8026FFFC0313FCA326207F9F29
>I<3A7FFF807FF8A33A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E
1318A26D5BA2EC8070011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB
01FEA26D5AA31478A21430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA
7838EA1FF0EA0FC025307F9F29>I<003FB512F0A2EB000F003C14E00038EB1FC00030EB
3F800070137F1500006013FE495A13035CC6485A495AA2495A495A49C7FC153013FE485A
12035B48481370485A001F14604913E0485A387F000348130F90B5FCA21C207E9F22>I<
130E131FEB3F80137FEBFF005B485AEA03F0EA07C0485A000EC7FC1208C8FCA3EA07E012
FFA3120F1207B3A6487EB5FCA311307EAF15>237 D<013813709038FE01FCA2EBFF03A2
EBFE01A2903838007090C9FCA8D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D
12016D4813800000903803BFFC90387E073FEB1FFED907F8130026327EB02B>252
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx cmr6 6 5
/Fx 5 59 df<1438B2B712FEA3C70038C7FCB227277C9F2F>43 D<13FF000313C0380781
E0380F00F0001E137848133CA248131EA400F8131FAD0078131EA2007C133E003C133CA2
6C13786C13F0380781E03803FFC0C6130018227DA01E>48 D<13E01201120712FF12F912
01B3A7487EB512C0A212217AA01E>I<EA01FC3807FF80381C0FC0383003E0386001F0EB
00F812F86C13FCA2147C1278003013FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F0013
1E13385B5B3801C00CEA0380380600185A5A383FFFF85AB512F0A216217CA01E>I<1278
12FCA412781200A9127812FCA4127806157A9412>58 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fy cmr7 7 5
/Fy 5 59 df<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333>43
D<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2003C1307007C14C0A4
00FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86CB45A38003F80
1B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521
>I<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC
15005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA0180390300
030012065A001FB5FC5A485BB5FCA219267DA521>I<1238127C12FEA3127C12381200AB
1238127C12FEA3127C123807197B9813>58 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fz ecrm1000 10 76
/Fz 76 122 df<486C1360000314E039070001C0000EEB038048EB070000181306003813
0E0030130C0070131C00601318A200E01338481330A400CEEB338039FF803FE001C013F0
A3007F131FA2393F800FE0390E0003801C1981B91C>16 D<001C1307007FEB1FC039FF80
3FE0A201C013F0A3007F131F001CEB073000001300A400011470491360A2000314E090C7
12C048130100061480000E130348EB070048130E485B006013181C1980B91C>I<B81280
A2290280962A>21 D<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F90
3B1F8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8
A32801F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>27
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<EC0FFC91387FFF70903901F803F0903807E00790381F800FEB3F
00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267FFFE0B512C0A32A3B
7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C
1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203
C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500
C1B51280A3413B7FBA45>I<121C127FEAFF80A8EA7F00AB123EAB121CABC7FCA8121C12
7FEAFF80A5EA7F00121C093C79BB17>33 D<121C127FEAFF80A213C0A3127F121C1200A4
12011380A2120313005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB03
80EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA6
5AB2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB03
80EB01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA2
1378A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A314
00A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A1352
7CBD20>I<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A120612
0E5A5A5A12600A19798817>44 D<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00
121C0909798817>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007
147C48487FA248C77EA2481580A3007EEC0FC0A500FE15E0B3007E15C0A4007F141F6C15
80A36C1500A26C6C133EA26C6C5B6C6C5BEBF0013900F803E090387E0FC0D91FFFC7FCEB
03F823397DB62A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A7497E007FB5
12F0A31C3779B62A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0001E6D7E001C6D
7E486D7E5A6E7E126012FE6CEC7F807FA56CC7FC121CC8FCEDFF00A25D14015D14035D4A
5A4A5A5D4A5A4AC7FC147E5C495A14E0495A495A49C8FC011EEB01805B5B491303484814
00485A485A90C75A48B6FC5A5A485CB6FCA321377CB62A>I<EB07F8EB3FFF90B512C039
01F80FF03903C007F848486C7E390E0001FEEA0F80391FE000FF7FA56C5A6C5AC7485AA2
5D14035D4A5A5DEC0F80027FC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80
A216C0A2153F16E0A2121EEA7F80A2487EA316C0157F491480007EC7FC0070ECFF006C49
5A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF823397DB62A>I<1538A2
157815F8A2140114031407A2140F141F141B14331473146314C313011483EB0303130713
06130C131C131813301370136013C01201EA038013005A120E120C5A123812305A12E0B7
12F8A3C73803F800AA4A7E0103B512F8A325387EB72A>I<0006140CD80780133C9038F0
03F890B5FC5D5D158092C7FC14FC38067FE090C9FCAAEB07F8EB1FFE9038780F809038E0
07E03907C003F0496C7E130000066D7E81C8FC8181A21680A4121C127F5A7FA390C71300
5D12FC00605C12704A5A6C5C6C1303001E495A6C6C485A3907E03F800001B5C7FC38007F
FCEB1FE021397CB62A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E
001F49EB3F804848137F485A12075B000FEC3F0049131E001F91C7FC5B123FA3127F90C9
FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497F16805BED1F
C0A390C713E0A57EA47F123F16C0A2001FEC3F807F000F15006D5B000714FE6C6C5B6C6C
485A3900FE07F090387FFFC0011F90C7FCEB03FC23397DB62A>I<12301238123E003FB6
12E0A316C05A168016000070C712060060140E5D5D00E014304814705D5DC712014A5A4A
C7FC1406140E5CA25C1478147014F05C1301A213035C1307A2130FA3131F5CA2133FA513
7FA96DC8FC131E233A7BB72A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F83903
C0007C4848133C90C7123E48141E000E141F001E80A3121FA26D5B6D131E7FD80FF85B6D
137C01FF13786C6D5A6CEBE3E0ECF780C601FFC7FC6D5A6D6C7E010F13E0013F7F01F97F
3901E07FFE48486C7E380F800F48486C1380001E010113C0487F007C143F0078EC1FE015
0F00F81407481403A21501A36C15C0A200781403007C15806C14076CEC0F006C6C131ED8
07E0137C3903F803F0C6B55A013F1380D907FCC7FC23397DB62A>I<EB03F8EB1FFF017F
13C03901FC07E048486C7E3907E001F8000F6D7E4848137E5B003F80A248C71380A25AED
1FC0A516E0A56C143FA36C7E157F121F6C6C13FF6C6C13DF000313013901F0039F3900FC
0F1FD93FFC13C0EB07F090C7FCA2153F1680A216005D120F486C137E486C5BA24A5A4A5A
49485A381F000F001CEB1F80260F807FC7FC3807FFFE000113F838003FC023397DB62A>
I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>
I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A213C0A3127F121C1200A412
011380A2120313005A1206120E5A5A5A12600A3479A317>I<EB3FE03801FFFE3907C03F
80390E000FC0003CEB07F000301303007014F8007C130100FE14FC7EA4127E003CEB03F8
C7FCEC07F0A2EC0FE0EC1F80EC3F00147E147C5C495A5C495A5CA249C7FCA31306AA90C8
FCA8130EEB3F80497EA56D5A010EC7FC1E3B7CBA27>63 D<1538A3157CA315FEA34A7EA3
4A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC
6003A202C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7121F
A2496E7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3
373C7DBB3E>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2
707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE
07F0707E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB
7FF0B812C094C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01
FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F
12014848151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD12
7F6DED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15
386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13
F002011380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0
EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0F
F0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC
16F816C036397DB83F>I<B812FEA3000190388000076C90C8FC173F838383A383A31880
170116C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E0
93C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397EB838
>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2
ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0
B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC00
0787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A2
48481503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0
A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03
C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41>
I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D49
7EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397E
B81E>I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A1380D8
7F005B0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F80233B7DB82B>I<B6
49B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4CC8FC
160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A6C7E
14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707EA2707E
707F8484486D497FB6011FEBFF80A339397DB841>I<B612E0A3000101C0C8FC6C90C9FC
B3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D397DB8
34>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563
A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318A2
6E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F8C
A2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED01804539
7DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7
FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016
E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0F
FEA216071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2170637397D
B83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB
07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2001F17
E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17F0A26C
6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D6C
495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390C8FC36
3D7BBA41>I<B712C016FC16FF0001D9800013C06C90C7EA1FE0707EEE03F883707EA270
7EA21880A71800A24C5AA24C5A5FEE0FF04C5AEEFF8091B548C7FC16F091CAFCB3A5487F
B6FCA331397EB838>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E70
7E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E913800
0FF0ED03F8ED00FE82707E707EA2161F83A583A6F00180A217F8160F1803486D01071400
B66D6C5A04011306933800FE0ECAEA3FFCEF07F0393B7DB83D>82
D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F4848133F48C712
1F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C
13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC007FED3F
F0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15C06C140F
6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>
I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770A3006017
30A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C>I<B69038
07FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E6D150C80171C133F
17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F807E91381F
FFF8020713E09138007F80373B7DB83E>I<B500FC91387FFF80A30003018091380FFC00
6C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F1506A26E140E011F150C80010F
5DA28001075DA26E147001031560A26D6C5CA2806D4A5AA2ED8003027F91C8FCA291383F
C006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC02035BA2EDFEE002015BA26E6C
5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5D8FC07B5D8F001B5FCA3000790278000
1FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E5F017F6E
6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D
5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA203805D
913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0F
FCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B80503B7E
B855>I<EAFFFCA2EAFC00B3B3B3B3A7EAFFFCA20E5379BD17>91
D<EAFFFCA21200B3B3B3B3A712FFA20E537FBD17>93 D<EB1FE0EBFFFC3803E03F390700
0F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00
EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E
18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97
D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001
FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16FEA216FC15016D14
F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E903800FFF8C7EA1FC028
3B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F83907E001FC380FC0
03A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127FA26C14067F001F14
0E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381FFF00EB07F81F277D
A525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0
007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C
131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813
C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380F
C0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14
037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E03E090381FFF80
903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213
FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<
ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E0
10000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38
060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048
C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB
0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3
120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF70013FE496D7EA25B
A35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380
C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<EB01C0EB07F0EB0F
F8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C127E00FF13F01303A2
14E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F012FFA3120F1203B1
913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EB
F3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F811680ED1FC0486C
EB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3AD487EB512C0A312
3A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F8380
3F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A348
6C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F90
39F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280
A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F
4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14
076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090
381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F
803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016FEA3167FAA16FEA3
ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F009038F1E07E9038F0FF
F8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C090381FFE0190387E0781
9038FC01C33903F000E3000714774848133749133F001F141F485A150F48C7FCA312FEAA
127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39007E078F90381FFE
0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00FFEB7FC09038E1E3
E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487EB512
F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F00707F12F0A2807E
A27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB
0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A27
7DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215
C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E0
00FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F0000EC77F86D9038E7
FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538803FFEA33A0FF800
0FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E017E130CA26D5BA2
EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7FCA214FF6D5AA214
7CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E0
18C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C717
1CD93F01EBE01815830281EBF038D91F831430150102C3EBF87090260FC6001360A2D907
E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E4A130E026013
0C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC017E131C6D13
186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF9038
01C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F496D7E486C8000
0FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C0
0003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A2
6D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A214701460A25C
A2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: FA ecbx1440 14.4 10
/FA 10 122 df<B81280A5D8000701F0C7FCB3B3B3B2B81280A529527DD130>73
D<003FBB12FCA59126C0007FEB000301FCC7ED003FD87FF0F00FFE491807491803491801
90C81600A2007E1A7EA3007C1A3EA500FC1A3F481A1FA6C91700B3B3AC49B912C0A55051
7BD05B>84 D<913803FFE0023F13FE91B67E010315E0010F9038003FF8D93FFCEB07FC49
48497E4948131F4849497E485B485BA24890C7FC5A5B003F6F5A705A705A007F92C8FC5B
A312FFAD127F7FA3123F7F6CEE0F80A26C6D141F18006C6D5C6C6D143E6C6D147E6C6D5C
6D6C495A6DB4EB07F0010F9038C01FE06D90B5128001014AC7FCD9003F13F80203138031
387CB63A>99 D<913807FF80027F13F849B512FE01076E7E011F010313E0903A3FFC007F
F0D97FF06D7E49486D7E4849130F48496D7E48824890C77E1880485A82003F17C0A3485A
18E082A212FFA290B8FCA401FCCAFCA6127FA37F123FA2EF03E06C7E17076C17C06C6D14
0F18806C6D141F6C6DEC3F006C6D147ED97FFC495AD91FFFEB07F86D9038E03FF0010390
B512C001005D023F01FCC7FC020113E033387CB63C>101 D<133FEBFFC0487F487FA248
7FA66C5BA26C5B6C5B013FC7FC90C8FCAEEB1FF8B5FCA512017EB3B3A6B612F0A51C547C
D324>105 D<D93FF0EB1FFCB591B57E030314E0030F14F892391FC07FFC92397E003FFE
000302F86D7EC6EBF1F04B6D7FECF3C0ECF78092C76C7F14FF5CA25CA45CB3ACB6D8F807
B612C0A542367CB549>110 D<913801FFC0023F13FE91B67E010315E0010F018013F890
3A3FFC001FFED97FF0EB07FF49486D7F48496D7F48496D7F91C8127F4883488349153F00
1F83A2003F8349151FA2007F83A400FF1880AC007F1800A3003F5F6D153FA2001F5FA26C
6C4B5AA26C6D4A5A6C5F6C6D495B6C6D495B6D6C4990C7FCD93FFCEB1FFE6DB46CB45A01
0790B512F0010115C0D9003F49C8FC020313E039387CB642>I<D93FF8EB7FF0B50107B5
FC031F14C0037F14F09126F9FF0013FCDAFFF8EB3FFF000302E0010F7FC602806D7F92C7
6C7F4A824A804A6E7F85187F85A2183F85A4721380AD4E1300A44E5AA26118FF616E5C61
6E4A5B6E4A5B6F495B03E04990C7FC6FEB7FFE913AF9FE01FFF802F8B65A033F14C00307
49C8FC030013E093CAFCB1B612F8A5414D7DB549>I<903903FFC00E011FEBFC1E90B612
7E000315FE3907FE003FD80FF0130F4848130348481301491300127F90C8127EA248153E
A27FA27F01F091C7FC13FCEBFF806C13FEECFFF06C14FE6F7E6C15E06C816C15FC6C81C6
81133F010F15801301D9000F14C0EC003F030713E0150100F880167F6C153FA2161F7EA2
17C07E6D143F17807F6DEC7F0001F85C6DEB03FE9039FF801FFC486CB512F0D8F81F14C0
D8F00791C7FC39E0007FF02B387CB634>115 D<B600E090381FFFFCA5000101F8C70001
13006CEE007C6E15FC017F5E6E1401013F5E8017036D6D5C17076D5E6F130F6D5E6F131F
6D93C7FC815F6D6D133E177E6D157C6F13FC027F5C811601DA3FFF5B16036E5C16876E5C
16CF6E5C16EF16FF6E91C8FCA26E5BA26E5BA26F5AA36F5AA26F5AA26F5AA35E151F93C9
FC5D153E157ED81FC0137C487E486C13FC486C5B14015D4A5A14074A5A6C48485A4948CA
FC495A383F81FC6CB45A6C5B000313C0C648CBFC3E4D7DB445>121
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 1628 448 a FA(Ionic)45 b(T)l(yp)t(es)1276 737
y Fz(Simon)28 b(Dobson)1802 707 y Fy(1)1866 737 y Fz(and)f(Brian)g
(Matthews)2615 707 y Fy(2)902 879 y Fx(1)975 911 y Fw(Departmen)n(t)d
(of)i(Computer)f(Science,)h(T)-6 b(rinit)n(y)25 b(College,)j(Dublin)d
(IE)1573 1002 y(simon.dobson@cs.tcd.ie)609 1062 y Fx(2)682
1094 y Fw(Information)h(T)-6 b(ec)n(hnology)26 b(Departmen)n(t,)e(CLR)n
(C)i(Rutherford)f(Appleton)g(Lab)r(oratory)-6 b(,)1696
1185 y(Oxfordshire)26 b(UK)1572 1276 y(b.m.matthews@rl.ac.uk)759
1573 y Fv(Abstract.)42 b Fw(W)-6 b(e)23 b(are)h(in)n(terested)f(in)g
(the)g(class)i(of)e(systems)g(for)h(whic)n(h)f(the)g(satis-)759
1664 y(faction)h(of)f(co)r(de)g(dep)r(endencies)f(is)h(a)g(dynamic)e
(pro)r(cess)j(rather)e(than)g(one)h(whic)n(h)759 1756
y(is)d(determined)f(purely)g(at)h(load-time.)f(Examples)g(include)h
(dynamic)e(delegation,)759 1847 y(mobile)30 b(co)r(de)g(and)g(agen)n(t)
g(systems.)g(Suc)n(h)e(systems)i(exhibit)f(prop)r(erties)i(whic)n(h)759
1938 y(are)23 b(not)g(w)n(ell-captured)g(b)n(y)e(curren)n(t)h(t)n
(yping)g(mo)r(dels.)h(W)-6 b(e)22 b(describ)r(e)h(a)g(system)f(of)759
2030 y Fu(ionic)j Fw(ob)t(ject)d(t)n(yp)r(es)e(whic)n(h)h(capture)g
(these)g(e\033ects)g(and)g(allo)n(w)i(them)c(to)i(b)r(e)g(anal-)759
2121 y(ysed)h(within)h(a)f(standard)g(ob)t(ject)h(t)n(yp)r(e)f(framew)n
(ork)p Fu(.)g Fw(W)-6 b(e)22 b(sho)n(w)h(ho)n(w)f(ionic)h(t)n(yp)r(es)
759 2212 y(impro)n(v)n(e)35 b(the)h(mo)r(deling)h(of)g(v)l(arious)f
(forms)h(of)g(dynamic)e(ob)t(ject)i(completion)759 2303
y(including)f(certain)g(asp)r(ects)g(of)g(securit)n(y)g(c)n(hec)n
(king,)f(delegation)i(and)e(metho)r(d)759 2395 y(up)r(date,)23
b(con)n(trast)g(them)f(with)h(other)g(approac)n(hes)h(to)f(the)g(same)f
(problems,)h(and)759 2486 y(sk)n(etc)n(h)i(a)h(p)r(ossible)h(ionic)f
(extension)g(to)g(Ja)n(v)l(a.)523 2748 y Ft(1)112 b(In)m(tro)s(duction)
523 2932 y Fz(Programming)25 b(languages)h(exhibit)h(a)g(constan)n(t)f
(tension)h(b)r(et)n(w)n(een)g(static)g(and)g(dynamic)523
3031 y(c)n(hec)n(king.)h(The)i(former)e(attempts)i(to)f(catc)n(h)g
(problems)g(at)g(compile-time,)g(but)h(inhibits)523 3131
y(man)n(y)g(useful)g(dynamic)g(decisions;)g(the)h(latter)e(pro)n(vides)
g(more)h(run-time)g(\035exibilit)n(y)g(at)523 3231 y(a)e(cost)g(of)h
(run-time)f(t)n(yp)r(e)h(errors.)e(This)h(tension)h(is)f(exhibited)h(b)
n(y)f(man)n(y)g(programming)523 3330 y(approac)n(hes)c(of)h(curren)n(t)
g(in)n(terest)h(including)f(dynamic)h(adaptation,)f(co)r(de)h(mobilit)n
(y)f(and)523 3430 y(comp)r(onen)n(t-based)31 b(systems.)h(Designers)f
(m)n(ust)h(balance)f(the)i(need)f(for)g(dynamic)f(\035exi-)523
3530 y(bilit)n(y)d(against)e(a)h(desire)g(for)g(static)h(correctness)d
(c)n(hec)n(ks.)648 3629 y(Suc)n(h)36 b(systems)g(are)f(represen)n
(tativ)n(e)f(of)j(a)f(broad)f(class)g(in)i(whic)n(h)f(the)h
(satisfaction)523 3729 y(of)g(co)r(de)g(dep)r(endencies)h(is)f(a)g
(dynamic)g(pro)r(cess)f(rather)h(than)g(one)g(\034xed)g(at)h(compile-)
523 3828 y(or)28 b(load-time.)h(This)g(dynamism)g(manifests)g(itself)g
(in)g(v)-5 b(arious)28 b(guises.)g(In)i(a)e(delegation-)523
3928 y(based)33 b(system)f(the)i(ob)5 b(ject)33 b(whic)n(h)g(actually)f
(satis\034es)g(a)h(metho)r(d)g(ma)n(y)g(b)r(e)g(re-assigned)523
4028 y(as)24 b(computation)h(progreesses.)d(F)-7 b(or)25
b(a)f(mobile)h(co)r(de)g(system,)g(it)g(o)r(ccurs)f(when)h(a)g(piece)g
(of)523 4127 y(co)r(de)31 b(migrates)e(in)n(to)h(a)h(foreign)e(en)n
(vironmen)n(t)h(and)g(is)h(tacitly)g(re-link)n(ed)e(with)i(that)g(en-)
523 4227 y(vironmen)n(t's)c(functions)h(for)f(displa)n(y)-7
b(,)27 b(\034le)h(access)f Fs(etc)p Fz(.)g(Under)h(certain)f(securit)n
(y)g(regimes)523 4327 y(the)g(en)n(vironmen)n(t)e(ma)n(y)h(refuse)g(to)
g(pro)n(vide)f(some)h(exp)r(ected)h(functions,)f(causing)g(execu-)523
4426 y(tion)g(to)g(fail)g(at)g(run-time.)g(The)g(imp)r(ortan)n(t)g(p)r
(oin)n(t)g(is)g(that)g(the)h(application)e(dep)r(ends)h(on)523
4526 y(the)g(a)n(v)-5 b(ailabilit)n(y)24 b(of)h(the)h(functions)f(and)g
(could)g Fs(never)35 b Fz(execute)25 b(successfully)g(under)g(that)523
4625 y(securit)n(y)i(regime,)g(so)h(man)n(y)f(of)h(the)h(dynamic)f
(securit)n(y)f(c)n(hec)n(ks)g(\025)g(although)h(required)f(in)523
4725 y(other,)g(more)h(complex)f(cases)g(\025)g(migh)n(t)h(b)r(etter)h
(b)r(e)f(p)r(erformed)f(statically)-7 b(.)28 b(In)n(tuitiv)n(ely)g(it)
523 4825 y(seems)34 b(preferable)g(for)g(co)r(de)h(whose)f(requiremen)n
(ts)g(can)g(nev)n(er)g(b)r(e)h(accommo)r(dated)f(to)523
4924 y(fail)28 b(b)r(efore)f(execution.)p eop
%%Page: 2 2
2 1 bop 648 448 a Fz(The)24 b(unifying)h(theme)g(is)g(that)g(an)g(ob)5
b(ject's)24 b(resp)r(onse)f(to)i(a)f(metho)r(d)i(can)e(b)r(e)h(c)n
(hanged)523 548 y(as)c(computation)h(progresses.)d(These)j(c)n(hanges)e
(are)h(not)h(generally)e(arbitrary)-7 b(,)20 b(but)j(ha)n(v)n(e)d(a)523
648 y(w)n(ell-de\034ned)k(structure)h(and)f(require)g(that)h(some)f
(dep)r(endencies)h(are)f(main)n(tained.)g(If)h(w)n(e)523
747 y(capture)f(these)g(structures)g(and)g(dep)r(endencies)h(uniformly)
f(within)h(the)f(t)n(yp)r(e)h(framew)n(ork)523 847 y(w)n(e)g(can)h(mo)r
(del)f(their)h(b)r(eha)n(viours)e(more)h(accurately)f(and)i(obtain)f(b)
r(etter)h(predictions)f(of)523 946 y(an)i(application's)g(long-term)f
(b)r(eha)n(viour.)648 1049 y(W)-7 b(e)37 b(ha)n(v)n(e)f(b)r(een)i
(exploring)e(the)i(notion)f(of)g Fs(ionic)j(typ)l(es)45
b Fz(whic)n(h)37 b(allo)n(w)f(functional-)523 1149 y(it)n(y)i(to)f(b)r
(e)h(delib)r(erately)f(extracted)g(from)h(an)f(ob)5 b(ject)37
b(while)h(retaining)f(the)h(necessary)523 1248 y(dep)r(endencies.)e
(The)g(resulting)f Fs(ion)43 b Fz(ma)n(y)35 b(then)h(b)r(e)g(resolv)n
(ed)e(against)h(another)f(ob)5 b(ject)523 1348 y(implemen)n(ting)24
b(the)g(extracted)g(functions.)g(Ionic)f(t)n(yp)r(es)h(pro)n(vide)f(a)g
(direct)h(and)g(t)n(yp)r(e-safe)523 1447 y(mo)r(del)e(for)g(examining)f
(the)i(dynamic)e(satisfaction)h(of)g(co)r(de)f(dep)r(endencies)i(in)f
(its)g(v)-5 b(arious)523 1547 y(guises,)28 b(pro)n(viding)f(new)h(p)r
(ersp)r(ectiv)n(es)g(on)g(phenomena)g(including)g(inheritance,)g
(mobile)523 1647 y(agen)n(ts,)e(delegation)h(and)g(metho)r(d)h(up)r
(date.)648 1749 y(In)23 b(this)g(preliminary)f(study)i(w)n(e)e(presen)n
(t)h(a)g(system)f(of)i(ionic)e(t)n(yp)r(es)h(expressed)f(within)523
1849 y(the)33 b(ob)5 b(ject)32 b(calculus)g(of)h(Abadi)f(and)h
(Cardelli[2].)e(W)-7 b(e)33 b(in)n(tro)r(duce)f(ions)g(as)g(v)-5
b(arian)n(ts)31 b(on)523 1948 y(standard)d(ob)5 b(jects)28
b(b)n(y)h(pro)n(viding)e(t)n(yp)r(es)i(and)f(op)r(erations)g(for)g
(remo)n(ving)f(and)i(resolving)523 2048 y(functionalit)n(y)-7
b(,)37 b(and)g(sho)n(w)f(ho)n(w)h(the)g(ideas)g(apply)g(to)g(b)r(oth)g
(ob)5 b(jects)37 b(and)g(classes.)f(W)-7 b(e)523 2148
y(discuss)32 b(some)g(of)h(the)f(issues)g(in)h(static)g
Fs(versus)39 b Fz(dynamic)32 b(c)n(hec)n(king)g(of)g(ions,)g(and)h
(then)523 2247 y(describ)r(e)38 b(the)g(use)g(of)g(ions)f(in)i(a)e(n)n
(um)n(b)r(er)h(of)g(scenarios)e(in)n(v)n(olving)h(dynamic)g(c)n(hanges)
523 2347 y(in)h(b)r(eha)n(viour.)f(W)-7 b(e)39 b(con)n(trast)e(our)g(w)
n(ork)g(with)h(that)h(of)f(others)f(and)h(brie\035y)g(sk)n(etc)n(h)f(a)
523 2447 y(p)r(ossible)24 b(em)n(b)r(edding)g(of)g(ions)g(in)n(to)g(Ja)
n(v)-5 b(a,)23 b(b)r(efore)h(concluding)g(with)g(some)g(directions)g
(for)523 2546 y(the)k(future.)523 2826 y Ft(2)112 b(Necessary)38
b(formalism)523 3040 y Fz(W)-7 b(e)36 b(presen)n(t)g(ions)f(using)h
(the)g(system)g Fr(O)r(b)1913 3052 y Fy(1)p Fq(<)p Fy(:)2021
3040 y Fz(,)g(one)g(of)g(the)g(simplest)g(mem)n(b)r(ers)g(of)g(the)523
3139 y(family)26 b(of)f(ob)5 b(ject)26 b(calculi)f(dev)n(elop)r(ed)g(b)
n(y)h(Abadi)g(and)f(Cardelli)g(\025)h(readers)e(familiar)h(with)523
3239 y(the)k(system)g(ma)n(y)f(w)n(an)n(t)g(to)g(skip)h(this)g
(section.)f(It)h(should)g(b)r(e)g(noted)g(that)g(ions)f(ha)n(v)n(e)f
(no)523 3339 y(essen)n(tial)c(dep)r(endence)h(on)f(the)h(features)f(of)
g(this)h(system)f(and)h(can)f(easily)g(b)r(e)h(generalised)523
3438 y(to)j(other)g(calculi.)959 3743 y Fp(A)p Fw(,)p
Fp(B)i Fw(::=)117 b(t)n(yp)r(es)1059 3834 y Fp(X)222
b Fw(t)n(yp)r(e)25 b(v)l(ariable)1058 3925 y Fp(K)221
b Fw(ground)26 b(t)n(yp)r(e)1028 4017 y Fp(T)11 b(op)184
b Fw(the)26 b(biggest)g(t)n(yp)r(e)865 4109 y Fo([)p
Fp(l)909 4117 y Fn(i)936 4109 y Fp(\035)978 4117 y Fn(i)1025
4109 y Fo(:)c Fp(A)1126 4077 y Fn(i)p Fm(2)p Fx(1)p Fn(::n)1126
4127 y(i)1300 4109 y Fo(])h Fw(ob)t(ject)k(t)n(yp)r(e)974
4200 y Fp(A)21 b Fl(!)g Fp(B)135 b Fw(function)26 b(t)n(yp)r(e)2252
3697 y Fp(a)p Fw(,)p Fp(b)g Fw(::=)287 b(terms)2342 3788
y Fp(x)376 b Fw(v)l(ariable)1988 3880 y Fo([)p Fp(l)2032
3888 y Fn(i)2080 3880 y Fo(=)21 b Fp(&)6 b Fo(\()p Fu(self)37
b Fo(:)22 b Fp(A)p Fo(\))p Fp(a)2544 3849 y Fn(i)p Fm(2)p
Fx(1)p Fn(::n)2544 3899 y(i)2717 3880 y Fo(])i Fw(ob)t(ject)i(literal)
2320 3972 y Fp(a:l)357 b Fw(mem)n(b)r(er)24 b(access)2115
4063 y Fp(a:l)e Fl(\()g Fp(&)6 b Fo(\()p Fp(x)20 b Fo(:)i
Fp(A)p Fo(\))p Fp(b)149 b Fw(mem)n(b)r(er)24 b(up)r(date)2212
4154 y Fp(\025)p Fo(\()p Fp(x)d Fo(:)g Fp(A)p Fo(\))p
Fp(b)247 b Fw(function)26 b(literal)2297 4246 y Fp(b)p
Fo(\()p Fp(a)p Fo(\))331 b Fw(function)26 b(application)1354
4416 y Fv(Fig.)15 b(1.)25 b Fw(Syn)n(tax)f(of)j(the)e
Fp(O)r(b)2183 4424 y Fx(1)p Fn(<)p Fx(:)2309 4416 y Fw(calculus)648
4725 y Fz(The)32 b(ob)5 b(ject)32 b(calculus)f(is)h(formed)g(using)g
(the)g(t)n(yp)r(es)g(and)g(terms)g(from)f(\034gure)h(1.)g(An)523
4825 y(ob)5 b(ject)25 b(t)n(yp)r(e)g(is)g(represen)n(ted)f(b)n(y)h(a)g
(sequence)f(of)i(lab)r(elled)f(mem)n(b)r(ers,)g(all)f(lab)r(els)h
(distinct.)523 4924 y(An)g(ob)5 b(ject)23 b(literal)h(maps)g(lab)r(els)
g(to)g(v)-5 b(alues,)23 b(where)h(a)g(v)-5 b(alue)24
b(ma)n(y)f(include)h(a)g(reference)f(to)p eop
%%Page: 3 3
3 2 bop 523 448 a Fz(the)23 b(ob)5 b(ject)22 b(itself.)h(These)f
(self-referring)e(mem)n(b)r(ers)i(are)f(the)i Fs(metho)l(ds)30
b Fz(in)22 b(the)h(ob)5 b(ject,)22 b(and)523 548 y(are)27
b(constructed)g(using)g(the)h Fr(&)35 b Fz(\(sigma\))27
b(binder.)g(A)h(metho)r(d)h(term)e(suc)n(h)g(as)g Fr(&)7
b Fk(\()p Fs(self)42 b Fk(:)23 b Fr(O)r Fk(\))p Fr(b)523
648 y Fz(binds)30 b Fs(self)48 b Fz(within)30 b Fr(b)f
Fz(to)h(the)g(ob)5 b(ject)29 b(on)g(whic)n(h)g(the)h(metho)r(d)g(is)g
(called.)f(More)g(complex)523 747 y(metho)r(ds)35 b(ma)n(y)f(b)r(e)h
(built)g(using)g(a)f Fr(\025)p Fz(-term)h(for)f(the)h(b)r(o)r(dy)g(of)g
(the)g(metho)r(d.)g(The)g(\020dot\021)523 847 y(op)r(erator)e(is)i
(used)g(to)g(access)f(the)i(mem)n(b)r(ers)f(of)g(an)g(ob)5
b(ject,)34 b(and)h(will)h(implicitly)g(bind)523 946 y
Fs(self)47 b Fz(in)30 b(an)n(y)e(metho)r(ds)h(accessed.)e(F)-7
b(or)29 b(example)f(the)h(ob)5 b(ject)29 b(t)n(yp)r(e)g
Fr(O)f Fj(\021)d Fk([)p Fr(v)s(al)h Fk(:)g Fr(I)7 b(nt;)14
b(g)s(et)24 b Fk(:)523 1046 y Fr(U)9 b(nit)35 b Fj(!)h
Fr(I)7 b(nt)p Fk(])35 b Fz(de\034nes)h(the)f(t)n(yp)r(e)h(of)f(an)g(ob)
5 b(ject)35 b(with)h(t)n(w)n(o)e(mem)n(b)r(ers,)h(an)g(in)n(teger)f
Fr(v)s(al)523 1146 y Fz(and)29 b(a)f(function)h Fr(g)s(et)f
Fz(taking)g(no)g(argumen)n(ts)g(and)g(returning)g(an)g(in)n(teger.)g
(One)g(p)r(ossible)523 1245 y(ob)5 b(ject)33 b(with)h(this)g(t)n(yp)r
(e)g(is)f Fr(o)h Fj(\021)e Fk([)p Fr(v)s(al)j Fk(=)d(1)p
Fr(;)14 b(g)s(et)32 b Fk(=)h Fr(&)7 b Fk(\()p Fs(self)51
b Fk(:)33 b Fr(O)r Fk(\))p Fr(\025)p Fk(\(\))p Fs(self)20
b Fr(:v)s(al)k Fk(+)e(1])p Fz(,)34 b(where)523 1345 y(the)29
b Fr(g)s(et)f Fz(mem)n(b)r(er)h(is)g(a)f(metho)r(d)i(with)f(self)g
(reference)f Fs(self)47 b Fz(and)29 b(a)g(b)r(o)r(dy)g(consisting)f(of)
g(a)523 1445 y(function)g(returning)f(the)h(v)-5 b(alue)27
b(of)h Fr(v)s(al)h Fz(plus)f(one.)648 1550 y(Note)22
b(that)i(the)f(use)g(of)f(metho)r(ds)h(do)r(es)g(not)g(a\033ect)g(the)g
(t)n(yp)r(e)g(signatures)f(of)g(mem)n(b)r(ers,)523 1649
y(since)29 b Fr(&)7 b Fz(-binding)29 b(is)f(p)r(erformed)h(implicitly)h
(b)n(y)e(the)i(dot)f(op)r(erator.)e(This)i(has)g(a)f(n)n(um)n(b)r(er)
523 1749 y(of)40 b(implications,)f(most)h(notably)f(that,)i(using)e
(the)h(example)g(ab)r(o)n(v)n(e,)e Fr(o:g)s(et)i Fz(\(with)g(no)523
1849 y(application\))24 b(generates)e(an)i(ordinary)e(function)i(whose)
g(free)f Fs(self)43 b Fz(references)23 b(are)g(b)r(ound)523
1948 y(to)h(the)g(ob)5 b(ject)23 b(from)h(whic)n(h)f(it)i(w)n(as)d
(accessed.)h(Note)h(also)f(that)h(the)g(usual)f(in)n(terpretation)523
2048 y(of)32 b(the)g(calculus)f(is)h(purely)f(functional,)h(so)f
(assigning)f(to)i(a)f(mem)n(b)r(er)h(generates)e(a)h(new)523
2148 y(ob)5 b(ject)27 b(rather)g(than)g(an)h(up)r(date-in-place.)535
2428 y Fw(\(Sub)c(Ob)t(ject\))842 2519 y Fp(\000)32 b
Fl(`)21 b Fp(\035)1031 2527 y Fn(i)1057 2519 y Fp(B)1115
2527 y Fn(i)1163 2519 y Fp(<)p Fo(:)g Fp(\035)1310 2487
y Fm(0)1307 2533 y Fn(i)1333 2519 y Fp(B)1395 2487 y
Fm(0)1391 2533 y Fn(i)p 535 2550 1191 4 v 546 2625 a
Fo([)p Fp(l)590 2633 y Fn(i)617 2625 y Fp(\035)659 2633
y Fn(i)706 2625 y Fo(:)h Fp(B)811 2593 y Fn(i)p Fm(2)p
Fx(1)p Fn(::n)p Fx(+)p Fn(m)807 2645 y(i)1086 2625 y
Fo(])g Fp(<)p Fo(:)f([)p Fp(l)1275 2633 y Fn(i)1302 2625
y Fp(\035)1347 2594 y Fm(0)1344 2639 y Fn(i)1391 2625
y Fo(:)h Fp(B)1496 2573 y Fi(0)1518 2594 y Fn(i)p Fm(2)p
Fx(1)p Fn(::n)1492 2644 y(i)1692 2625 y Fo(])1749 2573
y Fl(8)p Fp(i)f Fl(2)g(f)p Fo(1)p Fp(::n)p Fl(g)p Fw(,)29
b Fp(\035)2205 2581 y Fn(i)2252 2573 y Fl(2)21 b(f)2362
2541 y Fx(0)2397 2573 y Fp(;)2418 2541 y Fx(+)2482 2573
y Fl(g)535 2825 y Fw(\(Sub)j(in)n(v)l(arian)n(t\))674
2916 y Fp(\000)32 b Fl(`)21 b Fp(B)p 535 2947 487 4 v
547 3011 a(\000)31 b Fl(`)693 2979 y Fx(0)728 3011 y
Fp(B)25 b(<)p Fo(:)914 2979 y Fx(0)948 3011 y Fp(B)1742
2825 y Fw(\(Sub)g(co)n(v)l(arian)n(t\))1754 2916 y Fp(\000)32
b Fl(`)21 b Fp(B)k(<)p Fo(:)d Fp(B)2149 2884 y Fm(0)p
1742 2947 441 4 v 1780 3011 a Fp(\035)s(B)i(<)p Fo(:)2010
2979 y Fx(+)2060 3011 y Fp(B)2122 2979 y Fm(0)2284 2964
y Fp(\035)f Fl(2)f(f)2460 2932 y Fx(0)2495 2964 y Fp(;)2516
2932 y Fx(+)2580 2964 y Fl(g)1432 3181 y Fv(Fig.)15 b(2.)25
b Fp(O)r(b)1783 3189 y Fx(1)p Fn(<)p Fx(:)1909 3181 y
Fw(ob)t(ject)i(sub-t)n(yping)648 3479 y Fz(Ob)5 b(ject)32
b(sub-t)n(yping)g(is)h(generally)e(in)n(v)-5 b(arian)n(t:)32
b(an)g(ob)5 b(ject)32 b(t)n(yp)r(e)h Fr(A)h Fz(is)e(a)h(sub-t)n(yp)r(e)
f(of)523 3579 y(another)27 b(ob)5 b(ject)27 b(t)n(yp)r(e)h
Fr(B)k Fz(i\033)c Fr(A)g Fz(has)f(at)h(least)f(the)h(mem)n(b)r(ers)f
(of)h Fr(B)k Fz(with)c(the)g(same)f(t)n(yp)r(e-)523 3679
y(s.)39 b(Ho)n(w)n(ev)n(er,)f(metho)r(ds)i(ma)n(y)e(b)r(e)i(decorated)e
(with)2242 3648 y Fy(+)2337 3679 y Fz(to)h(mark)g(them)h(as)f(co)n(v)-5
b(arian)n(t)3347 3648 y Fh(1)3382 3679 y Fz(.)523 3778
y(The)32 b(ordinary)f(form)h(of)g(metho)r(d)h(declaration,)e(with)i(no)
f(annotation,)g(is)g(considered)f(a)523 3878 y(short-hand)38
b(for)i(an)f(in)n(v)-5 b(ariance)38 b(decoration)2044
3848 y Fy(0)2082 3878 y Fz(.)h(\(Figure)h(2,)f(where)g(the)h
Fr(\035)3007 3890 y Fq(i)3074 3878 y Fz(represen)n(t)523
3978 y(decorations.\))26 b(F)-7 b(or)27 b(our)g(w)n(ork)f(w)n(e)h(use)h
(co)n(v)-5 b(ariance)25 b(solely)i(for)g(enco)r(ding)g(classes.)648
4083 y(Classes)18 b(are)g(not)i(regarded)d(as)i(primitiv)n(e)g(but)h
(are)f(enco)r(ded)g(as)g(ob)5 b(jects:)19 b(a)g(class)f(for)h(an)523
4182 y(ob)5 b(ject)22 b(t)n(yp)r(e)h(is)g(simply)f(an)h(ob)5
b(ject)22 b(whic)n(h)g(builds)h(instances)f(of)h(that)g(t)n(yp)r(e)g
(with)g(common)523 4282 y(de\034nitions)i(for)f(the)i(mem)n(b)r(ers,)e
(and)h(there)f(ma)n(y)g(b)r(e)i(sev)n(eral)d(classes)g(generating)h(ob)
5 b(jects)523 4382 y(of)32 b(a)f(giv)n(en)g(ob)5 b(ject)31
b(t)n(yp)r(e.)h(F)-7 b(or)31 b(an)h(ob)5 b(ject)31 b(t)n(yp)r(e)h
Fr(A)e Fj(\021)g Fk([)p Fr(l)2339 4394 y Fq(i)2396 4382
y Fk(:)g Fr(A)2511 4349 y Fq(i)p Fg(2)p Fy(1)p Fq(::n)2511
4405 y(i)2697 4382 y Fk(])i Fz(the)g(corresp)r(onding)523
4481 y(class)40 b(t)n(yp)r(e)i Fr(C)6 b(l)r(ass)p Fk(\()p
Fr(A)p Fk(\))47 b Fj(\021)e Fk([)p Fr(new)1602 4451 y
Fy(+)1704 4481 y Fk(:)h Fr(A;)14 b(l)1899 4446 y Fy(+)1897
4504 y Fq(i)2000 4481 y Fk(:)46 b Fr(A)h Fj(!)f Fr(A)2369
4448 y Fq(i)p Fg(2)p Fy(1)p Fq(::n)2369 4504 y(i)2555
4481 y Fk(])c Fz(consists)e(of)i(a)f(metho)r(d)523 4581
y Fr(new)28 b Fz(and)d(enco)r(dings)g(for)g(the)h(metho)r(ds)g(as)f
Fs(pr)l(e-metho)l(ds)33 b Fz(\025)25 b(functions)h(from)f(a)g
(receiving)p 523 4656 473 4 v 546 4710 a Ff(1)606 4742
y Fw(A)i(v)l(ariation)g(of)h Fp(O)r(b)1196 4750 y Fx(1)p
Fn(<)p Fx(:)1323 4742 y Fw(pro)n(vides)f(con)n(tra)n(v)l(arian)n(t)g
(metho)r(ds)f(as)h(w)n(ell.)i(These)e(are)h(not)f(needed)606
4833 y(for)f(our)g(purp)r(oses,)g(and)f(w)n(e)h(do)g(not)f(explicitly)h
(address)f(them:)g(ho)n(w)n(ev)n(er,)h(there)f(seems)g(no)h
Fu(a)606 4924 y(priori)33 b Fw(reason)27 b(wh)n(y)e(they)f(cannot)i(b)r
(e)g(accomo)r(dated.)p eop
%%Page: 4 4
4 3 bop 535 429 a Fw(\(T)n(yp)r(e)25 b(Class\))601 521
y Fp(\000)32 b Fl(`)21 b Fp(A)p 535 551 338 4 v 547 615
a(C)5 b(l)q(ass)p Fo(\()p Fp(A)p Fo(\))992 568 y Fw(ob)t(ject)26
b(t)n(yp)r(e)f Fp(A)2112 429 y Fw(\(Sub)f(Class\))2124
521 y Fp(\000)31 b Fl(`)22 b Fp(C)5 b(l)q(ass)p Fo(\()p
Fp(A)p Fo(\))110 b Fp(C)5 b(l)q(ass)p Fo(\()p Fp(B)t
Fo(\))110 b Fp(A)21 b(<)p Fo(:)g Fp(B)p 2112 551 1268
4 v 2368 615 a(C)5 b(l)q(ass)p Fo(\()p Fp(A)p Fo(\))20
b Fp(<)p Fo(:)i Fp(C)5 b(l)q(ass)p Fo(\()p Fp(B)t Fo(\))1261
786 y Fv(Fig.)15 b(3.)25 b Fp(O)r(b)1612 794 y Fx(1)p
Fn(<)p Fx(:)1738 786 y Fw(classes)j(and)d(class)i(sub-t)n(yping)523
1056 y Fz(ob)5 b(ject)38 b(t)n(yp)r(e)h Fr(A)g Fz(to)f(the)h(metho)r(d)
g(b)r(o)r(dy)-7 b(.)39 b(The)g(co)n(v)-5 b(ariance)36
b(decorations)h(ensure)h Fr(A)j(<)p Fk(:)523 1155 y Fr(B)50
b Fj(\))c Fr(C)6 b(l)r(ass)p Fk(\()p Fr(A)p Fk(\))46
b Fr(<)p Fk(:)g Fr(C)6 b(l)r(ass)p Fk(\()p Fr(B)t Fk(\))41
b Fz(\(\034gure)g(3\).)g(Eac)n(h)g(mem)n(b)r(er)g(of)g
Fr(C)6 b(l)r(ass)p Fk(\()p Fr(A)p Fk(\))42 b Fz(has)f(the)523
1255 y(form)32 b Fk([)p Fr(new)i Fk(=)d Fr(&)7 b Fk(\()p
Fr(z)34 b Fk(:)e Fr(C)6 b(l)r(ass)p Fk(\()p Fr(A)p Fk(\)\)[)p
Fr(l)1642 1267 y Fq(i)1701 1255 y Fk(=)31 b Fr(&)7 b
Fk(\()p Fs(self)49 b Fk(:)32 b Fr(A)p Fk(\))p Fr(z)t(:l)2273
1267 y Fq(i)2300 1255 y Fk(\()p Fr(s)p Fk(\))2403 1225
y Fq(i)p Fg(2)p Fy(1)p Fq(::n)2590 1255 y Fk(])p Fr(;)14
b(l)2675 1267 y Fq(i)2733 1255 y Fk(=)31 b Fr(\025)p
Fk(\()p Fr(s)h Fk(:)f Fr(A)p Fk(\))p Fr(a)3172 1222 y
Fq(i)p Fg(2)p Fy(1)p Fq(::n)3172 1278 y(i)3359 1255 y
Fk(])p Fz(,)523 1355 y(where)37 b Fr(new)j Fz(constructs)d(an)h(ob)5
b(ject)38 b(where)f(eac)n(h)g(mem)n(b)r(er)h(in)n(v)n(ok)n(es)e(the)i
(appropriate)523 1454 y(pre-metho)r(d)f(on)g(the)g(class.)f(The)i
Fr(new)h Fz(metho)r(d)f(mo)r(dels)f(the)g(mec)n(hanical)f(pro)r(cess)g
(of)523 1554 y(constructing)i(an)g(ob)5 b(ject)38 b(from)g(a)g(class)f
(rather)h(than)g(b)r(eing)h(a)f(\020constructor\021)43
b(in)c(the)523 1654 y(usual)27 b(sense)g(of)h(ob)5 b(ject-orien)n(ted)
26 b(languages.)523 1903 y Ft(3)112 b(Ionic)36 b(ob)6
b(jects)523 2085 y Fz(In)28 b(this)g(section)f(w)n(e)g(dev)n(elop)g(a)g
(minimal)h(t)n(yp)r(e)f(mo)r(del)h(for)f(ions.)648 2185
y(First)e(w)n(e)g(need)g(to)g(formalise)f(some)h(in)n(tuitions)g(ab)r
(out)g(the)h(construction)e(of)h(ob)5 b(jects.)523 2285
y(In)32 b(man)n(y)f(cases)g(an)h(ob)5 b(ject)32 b(is)f(comp)r(osed)h
(of)f(sets)h(of)g(metho)r(ds,)g(eac)n(h)f(implemen)n(ting)h(a)523
2384 y(particular)d(asp)r(ect)g(or)h(feature)f(of)h(the)h(ob)5
b(ject's)29 b(o)n(v)n(erall)f(functionalit)n(y)-7 b(.)30
b(These)g(features)523 2484 y(are)20 b(often)h(largely)f(indep)r(enden)
n(t)h(but)h(w)n(eakly)e(in)n(teracting.)g(In)h(some)f(cases)g(it)h(is)g
(desirable)523 2584 y(to)32 b(adapt)g(the)g(ob)5 b(ject)32
b(b)n(y)f(replacing)g(one)h(feature)f(without)i(disturbing)e(the)i
(others,)e(or)523 2683 y(extracting)24 b(one)h(or)g(more)f(features)h
(for)f(use)i(elsewhere.)e(It)i(is)f(these)g(manipulations)g(that)523
2783 y(ionic)i(t)n(yp)r(es)h(seek)f(to)g(mo)r(del.)648
2882 y(Let)i Fr(A)d Fj(\021)f Fk([)p Fr(l)1024 2894 y
Fq(i)1077 2882 y Fk(:)h Fr(A)1188 2849 y Fq(i)p Fg(2)p
Fy(1)p Fq(::n)1188 2906 y(i)1374 2882 y Fk(])k Fz(b)r(e)f(an)g(ob)5
b(ject)29 b(t)n(yp)r(e)g(ha)n(ving)f(mem)n(b)r(ers)h(lab)r(eled)g(from)
g Fr(L)3261 2894 y Fq(A)3340 2882 y Fj(\021)523 2982
y(f)p Fr(l)592 2949 y Fq(i)p Fg(2)p Fy(1)p Fq(::n)590
3005 y(i)777 2982 y Fj(g)p Fz(.)19 b(W)-7 b(e)20 b(ma)n(y)f(partition)g
(this)h(lab)r(el)f(set)h(in)n(to)f Fj(f)p Fr(L)2233 2994
y Fq(J)2278 2982 y Fj(g)2320 2997 y Fq(J)5 b Fg(\022f)p
Fy(1)p Fq(::n)p Fg(g)2600 2982 y Fz(,)19 b(eac)n(h)g(of)h(whic)n(h)f
(induces)523 3099 y(an)g(ob)5 b(ject)19 b(t)n(yp)r(e)h
Fr(O)1115 3111 y Fq(J)1184 3099 y Fj(\021)j Fk([)p Fr(l)1320
3111 y Fq(j)1378 3099 y Fk(:)g Fr(A)1486 3060 y Fq(j)s
Fg(2)p Fq(J)1486 3123 y(j)1608 3099 y Fk(])p Fz(.)d(Eac)n(h)f
Fr(O)1935 3111 y Fq(J)2001 3099 y Fz(de\034nes)g(a)g(feature)g(whic)n
(h)g(com)n(bine)g(to)g(form)523 3199 y(the)27 b(\034nal)g(de\034nition)
g(of)g Fr(O)r Fz(.)h(Generally)e(w)n(e)g(sa)n(y)g(that)h(the)h
Fr(O)2452 3211 y Fq(J)2525 3199 y Fs(c)l(over)37 b Fr(A)27
b Fz(\(or)f(equiv)-5 b(alen)n(tly)523 3299 y(that)22
b(the)g Fr(L)891 3311 y Fq(J)959 3299 y Fz(co)n(v)n(er)d
Fr(L)1224 3311 y Fq(A)1278 3299 y Fz(\),)j(since)f Fr(A)j(<)p
Fk(:)e Fr(O)1811 3311 y Fq(J)1880 3299 y Fz(for)f(all)g(the)h
Fr(O)2310 3311 y Fq(J)2379 3299 y Fz(with)g(no)f(extra)g(metho)r(ds)h
(b)r(eing)523 3398 y(in)n(tro)r(duced.)35 b(W)-7 b(e)35
b(also)e(in)n(tro)r(duce)i(a)f(t)n(yp)r(e)h(extension)f(op)r(erator.)f
(If)i Fr(A)g Fj(\021)g Fk([)p Fr(l)3013 3410 y Fq(i)3076
3398 y Fk(:)g Fr(A)3196 3365 y Fq(i)p Fg(2)p Fy(1)p Fq(::n)3196
3421 y(i)3382 3398 y Fk(])523 3508 y Fz(and)e Fr(B)i
Fj(\021)d Fk([)p Fr(l)933 3520 y Fq(j)999 3508 y Fk(:)g
Fr(B)1121 3468 y Fq(j)s Fg(2)p Fq(n)p Fy(+1)p Fq(::m)1117
3531 y(j)1424 3508 y Fk(])h Fz(are)f(ob)5 b(ject)33 b(t)n(yp)r(es,)f(w)
n(e)h(de\034ne)g Fr(A)22 b(.)f(B)36 b Fj(\021)31 b Fk([)p
Fr(l)2891 3520 y Fq(i)2951 3508 y Fk(:)g Fr(A)3067 3475
y Fq(i)p Fg(2)p Fy(1)p Fq(::n)3067 3531 y(i)3254 3508
y Fr(;)14 b(l)3316 3520 y Fq(j)3382 3508 y Fk(:)523 3629
y Fr(B)590 3589 y Fq(j)s Fg(2)p Fq(n)p Fy(+1)p Fq(::m)586
3652 y(j)893 3629 y Fk(])29 b Fz(as)f(extending)g Fr(A)h
Fz(with)g(the)g(mem)n(b)r(ers)f(of)h Fr(B)t Fz(.)g(Note)f(that)h(in)g
(this)g(de\034nition)523 3729 y(the)f(t)n(w)n(o)f(t)n(yp)r(es)g(share)g
(no)g(common)g(lab)r(els,)g(so)g(b)r(oth)h Fr(A)19 b(.)f(B)27
b(<)p Fk(:)c Fr(A)28 b Fz(and)f Fr(A)19 b(.)f(B)27 b(<)p
Fk(:)c Fr(B)t Fz(.)648 3828 y(An)h(ob)5 b(ject)24 b(is)h(comp)r(osed)e
(of)h(metho)r(ds,)h(whic)n(h)f(in)h(general)e(dep)r(end)i(on)f(the)g
(existence)523 3928 y(of)j(other)g(metho)r(ds.)h(An)f(ion)h(is)f
(created)f(b)n(y)h(remo)n(ving)f(some)h(of)g(these)g(metho)r(ds,)h
(giving)523 4028 y(a)i(\020proto-ob)5 b(ject\021)34 b(whic)n(h)c(ma)n
(y)g(only)g(b)r(e)g(used)g(again)f(when)h(these)g(metho)r(ds)h(ha)n(v)n
(e)e(b)r(een)523 4127 y(replaced.)34 b(An)h(application)f(constructs)g
(an)h(ion)g(b)n(y)f(sp)r(ecifying)h(those)f(metho)r(ds)i(of)e(an)523
4227 y(ob)5 b(ject)33 b(whic)n(h)h(should)f(b)r(e)h(retained)f(in)h
(the)g(ion;)f(the)h(t)n(yp)r(e)g(rules)f(trac)n(k)f(the)i
(\020missing\021)523 4327 y(metho)r(ds)k(to)g(guaran)n(tee)f(that)h
(they)g(are)f(replaced)h(b)n(y)g(compatible)f(implemen)n(tations)523
4426 y(when)28 b(the)g(ion)f(is)h(de-ionised)e(bac)n(k)h(to)g(an)h(ob)5
b(ject)27 b(\(\034gure)g(4\).)648 4526 y(Let)35 b(t)n(w)n(o)g(lab)r(el)
h(sets)f Fr(L)1405 4538 y Fq(I)1478 4526 y Fz(and)g Fr(L)1704
4538 y Fq(D)1800 4526 y Fz(induce)h(t)n(yp)r(es)f Fr(I)43
b Fz(and)35 b Fr(D)j Fz(co)n(v)n(ering)33 b Fr(A)p Fz(.)j(Supp)r(ose)
523 4625 y(w)n(e)31 b(ha)n(v)n(e)f(an)h(ob)5 b(ject)31
b Fr(a)f Fk(:)f Fr(A)p Fz(,)j(and)f(w)n(e)g(wish)h(to)f(capture)g(the)g
(mem)n(b)r(ers)g(in)h Fr(L)3014 4637 y Fq(I)3051 4625
y Fz(.)g(W)-7 b(e)32 b(can-)523 4725 y(not)e(simply)g(remo)n(v)n(e)e
(those)h(mem)n(b)r(ers)h(in)g Fr(L)1956 4737 y Fq(D)2045
4725 y Fz(as)g(the)g(b)r(o)r(dies)g(of)g(the)g Fr(L)2855
4737 y Fq(I)2922 4725 y Fz(mem)n(b)r(ers)g(will)523 4825
y(generally)i(dep)r(end)j(on)e(the)i Fr(L)1505 4837 y
Fq(D)1598 4825 y Fz(for)f(their)f(de\034nition.)i(W)-7
b(e)34 b(therefore)f(capture)g(the)h(de-)523 4924 y(p)r(endency)e(whic)
n(h)f(the)g(mem)n(b)r(ers)g(in)g Fr(L)1795 4936 y Fq(I)1864
4924 y Fz(ha)n(v)n(e)f(on)h(the)g(mem)n(b)r(ers)g(in)g
Fr(L)2836 4936 y Fq(D)2927 4924 y Fz(b)n(y)g(de\034ning)g(a)p
eop
%%Page: 5 5
5 4 bop 667 2161 a
 currentpoint currentpoint translate 0.68407 0.68407 scale neg exch
neg exch translate
 667 2161 a @beginspecial 0 @llx 0
@lly 455 @urx 315 @ury 4550 @rwi @setspecial
%%BeginDocument: /local/dobsons/projects/ions/ecoop00//basics.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: basics.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Mar 14 10:36:02 2000
%%For: dobsons@puccini.dsg.cs.tcd.ie (Simon Dobson)
%%Orientation: Portrait
%%BoundingBox: 0 0 455 315
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-22.0 333.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<808080804040404020202020101010100808080804040404
	020202020101010180808080404040402020202010101010
	080808080404040402020202010101018080808040404040
	202020201010101008080808040404040202020201010101
	808080804040404020202020101010100808080804040404
	0202020201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

% crosshatch45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<828282824444444428282828101010102828282844444444
	828282820101010182828282444444442828282810101010
	282828284444444482828282010101018282828244444444
	282828281010101028282828444444448282828201010101
	828282824444444428282828101010102828282844444444
	8282828201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P6 exch def

% horizontal lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 16 8 true [ 16 0 0 -8 0 8 ]
	{< ffff000000000000ffff000000000000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P9 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 6550 m -1000 -1000 l 8942 -1000 l 8942 6550 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 750 1350 m 1350 1350 l 1350 1500 l 750 1500 l cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 750 1350 m 1350 1350 l 1350 1500 l 750 1500 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 50.00 90.00] PATmp PATsp ef gr PATusp gs col0 s gr 
/Times-Italic ff 180.00 scf sf
3375 3750 m
gs 1 -1 sc (The ion must have this) col0 sh gr
/Times-Italic ff 180.00 scf sf
3375 3975 m
gs 1 -1 sc (method resolved before use) col0 sh gr
% Polyline
gs  clippath
2595 3720 m 2625 3600 l 2655 3720 l 2655 3585 l 2595 3585 l cp
clip
n 2625 4125 m 2625 3600 l gs col0 s gr gr

% arrowhead
n 2595 3720 m 2625 3600 l 2655 3720 l  col0 s
% Polyline
n 2700 3825 m 3300 3825 l 3300 3975 l 2700 3975 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 180.00 255.00] PATmp PATsp ef gr PATusp gs col0 s gr 
/Times-Italic ff 180.00 scf sf
3375 4950 m
gs 1 -1 sc (The ion retains these methods) col0 sh gr
% Polyline
30.000 slw
 [60] 0 sd
gs  clippath
2283 3279 m 2361 3414 l 2222 3345 l 2402 3514 l 2464 3448 l cp
clip
n 1200 2325 m 2400 3450 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 2283 3279 m 2361 3414 l 2222 3345 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
4029 2367 m 4164 2288 l 4095 2428 l 4264 2248 l 4198 2186 l cp
clip
n 3075 3450 m 4200 2250 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 4029 2367 m 4164 2288 l 4095 2428 l  col0 s
% Polyline
7.500 slw
n 4725 600 m 5325 600 l 5325 750 l 4725 750 l cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 4725 600 m 5325 600 l 5325 750 l 4725 750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 315.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
4695 1320 m 4725 1200 l 4755 1320 l 4755 1185 l 4695 1185 l cp
clip
n 4725 1725 m 4725 1200 l gs col0 s gr gr

% arrowhead
n 4695 1320 m 4725 1200 l 4755 1320 l  col0 s
% Polyline
gs  clippath
5445 705 m 5325 675 l 5445 645 l 5310 645 l 5310 705 l cp
clip
n 5325 675 m 5775 675 l 5775 2025 l 4875 2025 l gs col0 s gr gr

% arrowhead
n 5445 705 m 5325 675 l 5445 645 l  col0 s
/Times-Italic ff 180.00 scf sf
5850 1500 m
gs 1 -1 sc (Resolving object must) col0 sh gr
/Times-Italic ff 180.00 scf sf
5850 1725 m
gs 1 -1 sc (include those methods on) col0 sh gr
/Times-Italic ff 180.00 scf sf
5850 1950 m
gs 1 -1 sc (which the ion depends, and) col0 sh gr
/Times-Italic ff 180.00 scf sf
5850 2175 m
gs 1 -1 sc (may provide more) col0 sh gr
/Courier ff 180.00 scf sf
1050 3075 m
gs 1 -1 sc (ionise) col0 sh gr
/Courier ff 180.00 scf sf
2775 2775 m
gs 1 -1 sc (deionise) col0 sh gr
/Courier ff 180.00 scf sf
675 2550 m
gs 1 -1 sc (A) col0 sh gr
/Courier ff 180.00 scf sf
2550 5550 m
gs 1 -1 sc (Ion\(A,D\)) col0 sh gr
/Courier ff 180.00 scf sf
3675 1275 m
gs 1 -1 sc (D' <: D) col0 sh gr
/Times-Roman ff 180.00 scf sf
4950 3075 m
gs 1 -1 sc (Child object) col0 sh gr
/Times-Roman ff 180.00 scf sf
4950 450 m
gs 1 -1 sc (Parent object) col0 sh gr
% Ellipse
n 750 1725 375 600 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 750 1950 m 1350 1950 l 1350 2100 l 750 2100 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 50.00 130.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 750 1650 m 1350 1650 l 1350 1800 l 750 1800 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 50.00 110.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Ellipse
n 2625 4725 375 600 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 2625 4950 m 3225 4950 l 3225 5100 l 2625 5100 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 175.00 330.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 2625 4650 m 3225 4650 l 3225 4800 l 2625 4800 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 175.00 310.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Ellipse
n 4725 825 375 375 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 4725 900 m 5325 900 l 5325 1050 l 4725 1050 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P9 [16 0 0 -8 315.00 60.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Ellipse
n 4725 2325 375 600 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 4725 2550 m 5325 2550 l 5325 2700 l 4725 2700 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 315.00 170.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 4725 2250 m 5325 2250 l 5325 2400 l 4725 2400 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 315.00 150.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
$F2psEnd
rs
end

%%EndDocument
 @endspecial 667 2161 a
 currentpoint currentpoint translate 1 0.68407 div 1 0.68407 div scale
neg exch neg exch translate
 667 2161 a 1669 2335 a Fv(Fig.)15
b(4.)25 b Fw(Ion)h(basics)523 2667 y Fz(t)n(yp)r(e)k
Fr(I)7 b(on)p Fk(\()p Fr(A;)14 b(D)r Fk(\))30 b Fz(\(read)e(as)h
(\020ion)g(of)g Fr(A)h Fz(at)f Fr(D)r Fz(\021\).)g(Because)g(all)g(lab)
r(els)g(are)f(unique,)i Fr(A)f Fz(and)523 2766 y Fr(D)f
Fz(uniquely)e(sp)r(ecify)g Fr(I)7 b Fz(,)26 b(and)f(also)g
Fr(A)e(<)p Fk(:)g Fr(D)r Fz(.)j(The)g(mem)n(b)r(ers)f(of)h(suc)n(h)f(t)
n(yp)r(es)h(\025)f(the)h Fs(ions)33 b Fz(\025)523 2866
y(represen)n(t)26 b(ob)5 b(jects)28 b(whic)n(h)f(ha)n(v)n(e)g(some)g
(of)g(their)h(mem)n(b)r(ers)f(abstracted)g(and)g(whic)n(h)h(ma)n(y)523
2966 y(b)r(e)22 b(replaced)f(b)n(y)g(other)g(suitably-t)n(yp)r(ed)g
(mem)n(b)r(ers.)g(If)h Fr(L)2317 2978 y Fq(D)2399 2966
y Fz(has)f(no)g(mem)n(b)r(ers)g(\025)g(so)g Fr(D)k Fj(\021)e
Fk([])p Fz(,)523 3065 y(the)30 b(empt)n(y)g(ob)5 b(ject)29
b(t)n(yp)r(e)h(usually)f(referred)f(to)h(as)g Fr(r)r(oot)i
Fz(\025)e(then)h(the)g(ion)g(has)f(no)g(dep)r(en-)523
3165 y(dencies)i(and)f(is)h(essen)n(tially)f(an)g(ordinary)f(ob)5
b(ject)2145 3135 y Fh(2)2182 3165 y Fz(.)31 b(W)-7 b(e)31
b(refer)f(to)h Fr(A)g Fz(as)f(the)h Fs(underlying)523
3265 y(typ)l(e)j Fz(of)28 b(the)g(ion,)f Fr(I)35 b Fz(as)27
b(its)g Fs(ionisation)36 b Fz(t)n(yp)r(e)p Fs(,)28 b
Fz(and)f Fr(D)j Fz(as)d(its)h Fs(dep)l(endency)j(typ)l(e)p
Fz(.)648 3387 y(The)k(t)n(yp)r(e)g(rules)f(for)g(ions)h(are)f(sho)n(wn)
g(in)h(\034gure)f(5.)h(Ionic)f(t)n(yp)r(es)h(are)f(co)n(v)-5
b(arian)n(t)33 b(in)523 3486 y(their)c(mem)n(b)r(ers)f(and)h(con)n(tra)
n(v)-5 b(arian)n(t)26 b(in)j(their)g(dep)r(endencies:)g(for)f(an)h(ion)
f Fr(i)2983 3456 y Fg(0)3035 3486 y Fz(to)h(b)r(e)g(sub-)523
3586 y(stitutable)f(for)f(an)g(ion)h Fr(i)f Fz(it)h(m)n(ust)g(pro)n
(vide)e Fs(at)k(le)l(ast)35 b Fz(the)28 b(same)f(mem)n(b)r(ers)h(with)g
Fs(no)33 b(mor)l(e)523 3685 y Fz(dep)r(endencies.)g(The)g
Fr(ionise)p Fk(\(\))g Fz(op)r(eration)f(generates)f(an)i(ion)f(from)h
(an)g(ob)5 b(ject)32 b(giv)n(en)g(a)523 3785 y(description)k(of)g(the)h
(metho)r(ds)g(to)f(retain.)g(The)g Fr(deionise)p Fk(\(\))g
Fz(op)r(eration)g(resolv)n(es)e(these)523 3885 y(dep)r(endencies)d
(against)e(another)g(suitably-t)n(yp)r(ed)i(ob)5 b(ject,)30
b(delegating)f(the)i(metho)r(ds)g(in)523 3984 y(the)j(dep)r(endency)g
(t)n(yp)r(e)g(to)g(this)g(ob)5 b(ject)34 b(and)f(yielding)h(an)f(ob)5
b(ject)34 b(whic)n(h)g(includes)g(the)523 4084 y(actual)27
b(t)n(yp)r(e)h(of)f(the)h(ob)5 b(ject)28 b(against)e(whic)n(h)h(the)h
(ion)g(is)f(resolv)n(ed.)648 4206 y(There)36 b(is)i(a)f(small)g
(subtlet)n(y)g(concerning)f(metho)r(d)i(o)n(v)n(erriding.)d(Supp)r(ose)
j(that)f(w)n(e)523 4306 y(ha)n(v)n(e)25 b Fr(i)e Fk(:)g
Fr(I)7 b(on)p Fk(\()p Fr(A;)14 b(D)r Fk(\))28 b Fz(and)e
Fr(d)d Fk(:)g Fr(D)1549 4276 y Fg(0)1596 4306 y Fr(<)p
Fk(:)f Fr(D)29 b Fz(where)d Fr(D)2114 4276 y Fg(0)2164
4306 y Fz(also)f(includes)i(a)f(mem)n(b)r(er)g Fr(l)3057
4318 y Fq(j)3115 4306 y Fk(:)d Fr(A)3223 4266 y Fq(j)s
Fg(2)p Fq(L)3344 4274 y Fe(I)3223 4329 y Fq(j)3382 4306
y Fz(.)523 4405 y(It)35 b(is)g(p)r(ossible)f(that)h(b)r(oth)h
Fr(A)f Fz(and)f Fr(D)1757 4375 y Fg(0)1816 4405 y Fz(ma)n(y)g(include)h
(a)f(mem)n(b)r(er)h Fr(l)2723 4417 y Fq(j)2758 4405 y
Fz(,)g(so)f Fr(deionise)p Fk(\()p Fr(i;)14 b(d)p Fk(\))523
4505 y Fz(m)n(ust)25 b(select)f(whic)n(h)g(metho)r(d)h(b)r(o)r(dy)g(to)
f(use)h(in)g(the)f(deionised)g(ob)5 b(ject.)25 b(It)g(is)f(also)f(p)r
(ossible)523 4605 y(that)29 b(the)g(t)n(w)n(o)e(metho)r(d)i(t)n(yp)r
(es)g(are)e(incompatible,)i(since)f Fr(A)h Fz(and)f Fr(D)2714
4574 y Fg(0)2766 4605 y Fz(ma)n(y)g(b)r(e)g(sub-t)n(yp)r(es)p
523 4748 473 4 v 546 4801 a Ff(2)606 4833 y Fw(One)c(could)h(therefore)
h(de\034ne)d(an)i(ob)t(ject)h(calculus)f(completely)f(in)h(terms)f(of)h
(ions,)h(or)f(equate)606 4924 y Fp(I)6 b(on)p Fo(\()p
Fp(A;)13 b Fo([]\))26 b Fw(with)g Fp(A)p Fw(.)p eop
%%Page: 6 6
6 5 bop 535 429 a Fw(\(T)n(yp)r(e)25 b(Ion\))546 521
y Fp(\000)32 b Fl(`)21 b Fp(A)111 b(\000)32 b Fl(`)21
b Fp(I)117 b(\000)32 b Fl(`)21 b Fp(D)p 535 551 850 4
v 716 615 a(\000)32 b Fl(`)21 b Fp(I)6 b(on)p Fo(\()p
Fp(A;)13 b(D)r Fo(\))1407 568 y Fw(ob)t(ject)27 b(t)n(yp)r(e)e
Fp(A)g Fw(co)n(v)n(ered)g(b)n(y)g Fp(I)6 b(;)12 b(D)535
865 y Fw(\(Sub)24 b(Ion\))546 956 y Fp(\000)32 b Fl(`)21
b Fp(I)6 b(on)p Fo(\()p Fp(A;)13 b(D)r Fo(\))111 b Fp(\000)32
b Fl(`)22 b Fp(I)6 b(on)p Fo(\()p Fp(A)1503 924 y Fm(0)1524
956 y Fp(;)13 b(D)1623 924 y Fm(0)1646 956 y Fo(\))111
b Fp(\000)32 b Fl(`)22 b Fp(A)1993 924 y Fm(0)2036 956
y Fp(<)p Fo(:)f Fp(A)111 b(\000)32 b Fl(`)21 b Fp(D)j(<)p
Fo(:)d Fp(D)2708 924 y Fm(0)p 535 987 2209 4 v 1141 1051
a Fp(\000)32 b Fl(`)21 b Fp(I)6 b(on)p Fo(\()p Fp(A)1499
1019 y Fm(0)1521 1051 y Fp(;)13 b(D)1620 1019 y Fm(0)1643
1051 y Fo(\))21 b Fp(<)p Fo(:)h Fp(I)6 b(on)p Fo(\()p
Fp(A;)12 b(D)r Fo(\))535 1300 y Fw(\(V)-6 b(al)25 b(Ionise\))599
1392 y Fp(\000)32 b Fl(`)22 b Fp(A)110 b(\000)32 b Fl(`)21
b Fp(I)117 b(\000)32 b Fl(`)21 b Fp(D)559 1483 y(\000)32
b Fl(`)21 b Fp(I)6 b(on)p Fo(\()p Fp(A;)12 b(D)r Fo(\))112
b Fp(\000)32 b Fl(`)21 b Fp(a)g Fo(:)h Fp(A)p 535 1514
956 4 v 547 1578 a(\000)31 b Fl(`)21 b Fp(ionise)p Fo(\()p
Fp(a;)14 b(I)6 b Fo(\))20 b(:)i Fp(I)6 b(on)p Fo(\()p
Fp(A;)12 b(D)r Fo(\))1514 1485 y Fw(ob)t(ject)26 b(t)n(yp)r(e)f
Fp(A)g Fw(co)n(v)n(ered)g(b)n(y)g Fp(I)6 b(;)13 b(D)535
1827 y Fw(\(V)-6 b(al)25 b(Deionise\))902 1919 y Fp(\000)32
b Fl(`)21 b Fp(A)111 b(\000)31 b Fl(`)22 b Fp(I)116 b(\000)32
b Fl(`)21 b Fp(D)546 2010 y(\000)32 b Fl(`)21 b Fp(i)h
Fo(:)g Fp(I)6 b(on)p Fo(\()p Fp(A;)12 b(D)r Fo(\))112
b Fp(\000)32 b Fl(`)21 b Fp(D)1447 1978 y Fm(0)1491 2010
y Fp(<)p Fo(:)g Fp(D)88 b(\000)32 b Fl(`)22 b Fp(d)f
Fo(:)g Fp(D)2060 1978 y Fm(0)p 535 2041 1561 4 v 888
2105 a Fp(\000)32 b Fl(`)21 b Fp(deionise)p Fo(\()p Fp(i;)13
b(d)p Fo(\))21 b(:)h Fp(I)g(.)c(D)1719 2073 y Fm(0)2118
2012 y Fw(ob)t(ject)27 b(t)n(yp)r(e)d Fp(A)i Fw(co)n(v)n(ered)f(b)n(y)g
Fp(I)6 b(;)12 b(D)1519 2275 y Fv(Fig.)i(5.)26 b Fw(T)n(yp)r(e)f(rules)h
(for)h(ions)523 2565 y Fz(of)35 b Fr(D)j Fz(do)n(wn)d(t)n(w)n(o)f
(di\033eren)n(t)i(sub-t)n(yping)f(paths.)g(Since)g(b)r(oth)h
Fr(i)f Fz(and)g Fr(d)h Fz(ma)n(y)f(con)n(tain)f(a)523
2664 y(de\034nition)28 b(of)f Fr(l)1011 2676 y Fq(j)1074
2664 y Fz(w)n(e)g(m)n(ust)h(mak)n(e)e(three)i(decisions:)558
2854 y(1.)41 b(If)28 b(a)f(metho)r(d)h(de\034ned)g(in)g
Fr(i)f Fz(in)n(v)n(ok)n(es)f Fr(l)1871 2866 y Fq(j)1906
2854 y Fz(,)i(whic)n(h)f(implemen)n(tation)h(is)f(used?;)558
2956 y(2.)41 b(If)28 b(a)f(metho)r(d)h(de\034ned)g(in)g
Fr(d)g Fz(in)n(v)n(ok)n(es)e Fr(l)1886 2968 y Fq(j)1920
2956 y Fz(,)i(whic)n(h)g(implemen)n(tation)f(is)h(used?;)f(and)558
3057 y(3.)41 b(If)28 b(a)f(clien)n(t)h(of)g Fr(deionise)p
Fk(\()p Fr(i;)14 b(d)p Fk(\))26 b Fz(in)n(v)n(ok)n(es)g
Fr(l)1956 3069 y Fq(j)1991 3057 y Fz(,)h(what)h(implemen)n(tation)f(is)
h(used?)523 3246 y(This)39 b(problem)f(has)g(arisen)f(in)i(other)f
(guises,)g(and)g(most)g(of)h(the)g(com)n(binations)e(ha)n(v)n(e)523
3345 y(b)r(een)f(tried)g(\(see)g(section)g(7\).)f(In)i(the)f(curren)n
(t)f(application,)g(w)n(e)h(w)n(an)n(t)f(to)h(use)g(ions)f(to)523
3445 y(mo)r(del)c(transparen)n(t)f(delegation)g(of)i(functionalit)n(y)f
(to)g(other)g(ob)5 b(jects)31 b(in)g(order)f(to)h(sup-)523
3544 y(p)r(ort)25 b(mobilit)n(y)g(and)g(other)g(applications.)g(Sp)r
(eci\034cally)g(w)n(e)g(w)n(an)n(t)f(to)i(b)r(e)f(able)g(to)h(deionise)
523 3644 y(sev)n(eral)21 b(ions)h(against)f(the)i(same)f(paren)n(t)g
(ob)5 b(ject)23 b(whilst)f(lea)n(ving)g(the)h(paren)n(t's)e(b)r(eha)n
(viour)523 3744 y(unc)n(hanged.)33 b(This)g(con)n(trasts)f(with)j(most)
e(delegation-based)f(languages)f(in)j(whic)n(h)g(the)523
3843 y(additional)27 b(functionalit)n(y)g(ma)n(y)g(c)n(hange)g(the)h(b)
r(eha)n(viour)e(of)h(the)h(paren)n(t)f(ob)5 b(ject.)648
3944 y(W)-7 b(e)28 b(therefore)e(adopt)h(the)h(follo)n(wing)f(mo)r
(del:)558 4135 y(1.)41 b(If)30 b(the)g(metho)r(d)g(is)g(de\034ned)g
(only)f(in)h Fr(i;)f Fz(in)n(v)n(o)r(cations)f(from)h(clien)n(ts)g(of)h
Fr(deionise)p Fk(\()p Fr(i;)14 b(d)p Fk(\))664 4234 y
Fz(and)24 b(from)f(metho)r(ds)i(de\034ned)f(in)g Fr(i)g
Fz(use)f(the)i(implemen)n(tation)e(from)h Fr(i)g Fz(\025)f(b)n(y)h
(de\034nition)664 4334 y(there)k(will)f(b)r(e)h(no)g(in)n(v)n(o)r
(cations)d(from)j Fr(d)p Fz(;)558 4435 y(2.)41 b(If)35
b(the)f(metho)r(d)h(is)f(de\034ned)g(in)g Fr(i)g Fz(and)g
Fr(d)p Fz(,)g(and)g(the)g(t)n(w)n(o)g(are)f(t)n(yp)r(e-incompatible,)g
(a)664 4535 y(dynamic)27 b(t)n(yp)r(e)h(error)e(o)r(ccurs;)558
4636 y(3.)41 b(Otherwise,)27 b(all)g(in)n(v)n(o)r(cations)f(use)h(the)h
(implemen)n(tation)g(from)f Fr(d)p Fz(.)523 4825 y(It)41
b(should)g(b)r(e)h(noted)f(that)g(p)r(oin)n(t)g(2)g(is)g(the)h(only)e
(place)h(where)f(ionic)h(t)n(yp)r(es)g(require)523 4924
y(dynamic)27 b(c)n(hec)n(ks.)p eop
%%Page: 7 7
7 6 bop 648 448 a Fz(These)27 b(rules)h(are)f(formalised)g(in)h
(\034gure)f(6.)h(\(The)g(side)g(conditions)g(re\035ect)f(the)i(in)n
(ter-)523 548 y(actions)c(b)r(et)n(w)n(een)h(ions)g(and)g(classes)e
(dealt)i(with)h(in)f(the)h(next)f(section.\))g(The)g(ob)5
b(ject)26 b Fr(d)g Fz(is)523 648 y(left)i(completely)e(una\033ected)i
(b)n(y)e(deionisation)g(against)g(it,)h(meaning)g(that)g(sev)n(eral)e
(c)n(hild)523 747 y(ob)5 b(jects)35 b(ma)n(y)g(safely)g(b)r(e)h
(deionised)f(against)g(a)g(single)g(paren)n(t)g(without)h(sensitivit)n
(y)f(to)523 847 y(order.)26 b(Ho)n(w)n(ev)n(er,)g(some)h(of)g(the)h
(ion's)g(functionalit)n(y)f(ma)n(y)g(not)h(b)r(e)g(propagated)d(in)n
(to)j(the)523 946 y(\034nal)23 b(deionised)f(ob)5 b(ject.)23
b(This)g(is)g(the)g(critical)f(di\033erence)h(b)r(et)n(w)n(een)g(ions)g
(and)f(delegation-)523 1046 y(based)37 b(systems:)f(they)h(prev)n(en)n
(t)f(o)n(v)n(erriding)f(using)i(the)g(t)n(yp)r(e)g(system.)g(It)g
(means)g(that)523 1146 y(an)29 b(ion)f(can)h(only)f(add)h(functionalit)
n(y)g(to)g(another)e(ob)5 b(ject,)29 b(not)g(a\033ect)g(functionalit)n
(y)g(al-)523 1245 y(ready)22 b(presen)n(t.)g(This)g(is)h(essen)n(tial)e
(for)h(mo)r(deling)h(mobilit)n(y)f(using)h(ions:)f(if)h(co)r(de)f(from)
h(the)523 1345 y(net)n(w)n(ork)29 b(is)h(allo)n(w)n(ed)e(to)i(o)n(v)n
(erride)e(system-pro)n(vided)g(functionalit)n(y)-7 b(,)30
b(it)h(op)r(ens)e(a)h(gaping)523 1445 y(securit)n(y)d(hole.)g(These)g
(issues)g(are)g(examined)g(further)g(in)h(section)f(5.)535
1729 y Fw(\(Eq)e(Ionise\))779 1835 y Fp(\000)32 b Fl(`)21
b Fp(a)g Fl($)g Fo([)p Fp(l)1130 1843 y Fn(j)1184 1835
y Fo(=)g Fp(a)1306 1791 y Fn(l)1326 1802 y Fe(j)1357
1791 y Fm(2)p Fn(L)1441 1802 y Fe(I)1474 1791 y Fm([)p
Fn(L)1558 1802 y Fe(D)1306 1855 y Fn(j)1613 1835 y Fo(])h(:)g
Fp(A)p 535 1868 1466 4 v 547 1939 a(\000)31 b Fl(`)21
b Fp(ionise)p Fo(\()p Fp(a;)14 b(I)6 b Fo(\))20 b Fl($)h
Fo([)p Fp(l)1238 1947 y Fn(j)1293 1939 y Fo(=)g Fp(a)1415
1902 y Fn(j)s Fm(2)p Fn(L)1527 1913 y Fe(I)1415 1959
y Fn(j)1564 1939 y Fo(])g(:)h Fp(I)6 b(on)p Fo(\()p Fp(A;)13
b(D)r Fo(\))2024 1881 y Fp(L)2076 1889 y Fn(I)2111 1881
y Fp(;)g(L)2197 1889 y Fn(D)2279 1881 y Fw(co)n(v)n(er)25
b Fp(L)2529 1889 y Fn(A)2580 1881 y Fp(;)13 b(A;)g(I)31
b Fw(not)25 b(class)i(t)n(yp)r(es)535 2191 y(\(Eq)e(Deionise\))1042
2297 y Fp(\000)31 b Fl(`)22 b Fp(c)f Fl($)g Fo([)p Fp(l)1385
2305 y Fn(j)1440 2297 y Fo(=)g Fp(c)1554 2253 y Fn(l)1574
2264 y Fe(j)1605 2253 y Fm(2)p Fn(L)1689 2264 y Fe(I)1554
2317 y Fn(j)1726 2297 y Fo(])h(:)f Fp(I)6 b(on)p Fo(\()p
Fp(A;)13 b(D)r Fo(\))1078 2398 y Fp(\000)32 b Fl(`)21
b Fp(d)g Fl($)g Fo([)p Fp(l)1428 2407 y Fn(k)1488 2398
y Fo(=)g Fp(d)1609 2361 y Fn(l)1629 2373 y Fe(k)1665
2361 y Fm(2)p Fn(L)1749 2372 y Fe(D)1800 2361 y Fm([)p
Fn(L)1884 2372 y Fe(X)1609 2420 y Fn(k)1942 2398 y Fo(])g(:)h
Fp(D)2092 2367 y Fm(0)p 535 2429 2124 4 v 546 2508 a
Fp(\000)32 b Fl(`)21 b Fp(deionise)p Fo(\()p Fp(c;)14
b(d)p Fo(\))21 b Fl($)g Fo([)p Fp(l)1307 2516 y Fn(j)1361
2508 y Fo(=)g Fp(c)1475 2464 y Fn(l)1495 2475 y Fe(j)1526
2464 y Fm(2)p Fn(L)1610 2475 y Fe(I)1643 2464 y Fm(\000)p
Fn(L)1733 2475 y Fe(X)1475 2528 y Fn(j)1791 2508 y Fp(;)13
b(l)1848 2517 y Fn(k)1908 2508 y Fo(=)21 b Fp(d)2029
2471 y Fn(l)2049 2483 y Fe(k)2085 2471 y Fm(2)p Fn(L)2169
2482 y Fe(D)2220 2471 y Fm([)p Fn(L)2304 2482 y Fe(X)2029
2530 y Fn(k)2361 2508 y Fo(])h(:)g Fp(I)g(.)c(D)2624
2476 y Fm(0)2681 2396 y Fp(A;)13 b(D)28 b Fw(not)e(class)h(t)n(yp)r(es)
1530 2681 y Fv(Fig.)14 b(6.)25 b Fw(Seman)n(tics)g(for)i(ions)648
2982 y Fz(A)h(further)h(consequence)e(of)i(the)f(rule)h(\(V)-7
b(al)28 b(Deionise\))h(in)f(\034gure)g(5)g(is)h(that)f(the)h(\034nal)
523 3082 y(t)n(yp)r(e)i(of)f(a)g(c)n(hild)g(ob)5 b(ject)30
b(resulting)g(from)g(deionisation)g(re\035ects)f(the)i(actual)f(t)n(yp)
r(e)h(of)f(its)523 3182 y(paren)n(t:)23 b(the)i(\034nal)f(ob)5
b(ject)23 b(is)h(a)g(v)-5 b(alid)24 b(sub-t)n(yp)r(e)g(of)f(the)i
(ionisation)e(t)n(yp)r(e,)h(the)g(actual)g(t)n(yp)r(e)523
3281 y(of)33 b(the)g(paren)n(t)f(ob)5 b(ject,)33 b(and)f(\(b)n(y)h
(subsumption\))g(the)h(dep)r(endency)f(t)n(yp)r(e.)g(This)g(means)523
3381 y(that)38 b(an)f(application)g(receiving)g(an)g(ion)h(ma)n(y)f(b)r
(oth)h(add)f(the)h(ion's)g(functionalit)n(y)f(to)523
3481 y(an)29 b(ob)5 b(ject)29 b(and)g(ensure)g(that)h(the)f(ob)5
b(ject's)29 b(extra)f(metho)r(ds)i(\(o)n(v)n(er)e(and)h(ab)r(o)n(v)n(e)
f(those)h(in)523 3580 y(the)f(ion's)e(dep)r(endency)i(t)n(yp)r(e\))f
(remain)g(accessible.)f(Assuming)h(no)g(name)g(clashes,)f(these)523
3680 y(extra)h(metho)r(ds)g(are)g(in)n(visible)g(to)h(the)g(metho)r(d)g
(b)r(o)r(dies)f(deriv)n(ed)g(from)g(the)h(ion.)523 3983
y Ft(4)112 b(Ions)38 b(and)g(classes)523 4219 y Fz(As)28
b(men)n(tioned)h(in)f(section)g(t)n(w)n(o,)g Fr(O)r(b)1708
4231 y Fy(1)p Fq(<)p Fy(:)1844 4219 y Fz(do)r(es)g(not)h(treat)f
(classes)f(as)g(primitiv)n(e.)h(Rather,)523 4319 y(a)34
b(class)g(is)h(an)f(ob)5 b(ject)35 b(whic)n(h)g(pro)r(duces)f(ob)5
b(jects)34 b(of)h(a)f(giv)n(en)g(underlying)g(ob)5 b(ject)35
b(t)n(yp)r(e)523 4419 y(whic)n(h)27 b(share)e(a)h(common)g(implemen)n
(tation)h(of)f(their)h(metho)r(ds.)g(If)g Fr(X)33 b Fz(is)26
b(an)h(ob)5 b(ject)26 b(t)n(yp)r(e)523 4518 y(then)f
Fr(C)6 b(l)r(ass)p Fk(\()p Fr(X)h Fk(\))23 b Fz(is)i(the)f(ob)5
b(ject)24 b(t)n(yp)r(e)h(of)f(classes)f(generating)f(ob)5
b(jects)24 b(of)g(t)n(yp)r(e)h Fr(X)7 b Fz(.)23 b(In)i(this)523
4618 y(section)i(w)n(e)g(explore)g(the)h(in)n(teractions)e(of)i(the)g
(class)e(and)h(ion)h(constructions.)648 4725 y(The)j(\034rst)g(observ)
-5 b(ation)29 b(is)i(that)h(the)f(class)f(construction)g(ma)n(y)h(b)r
(e)g(applied)g(to)g(ionic)523 4825 y(t)n(yp)r(es)c(in)g(t)n(w)n(o)f
(distinct)i(w)n(a)n(ys.)d(The)i(\034rst)g(builds)g(a)f(family)h(of)g(t)
n(yp)r(es)g Fr(C)6 b(l)r(ass)p Fk(\()p Fr(I)h(on)p Fk(\()p
Fr(A;)14 b(D)r Fk(\)\))p Fz(,)523 4924 y(represen)n(ting)28
b(classes)g(whic)n(h)h(create)g(ions)g(rather)f(than)i(ob)5
b(jects.)28 b(The)i(second)f(builds)g(a)p eop
%%Page: 8 8
8 7 bop 523 448 a Fz(family)31 b(of)g(t)n(yp)r(es)g Fr(I)7
b(on)p Fk(\()p Fr(C)f(l)r(ass)p Fk(\()p Fr(A)p Fk(\))p
Fr(;)14 b(C)6 b(l)r(ass)p Fk(\()p Fr(D)r Fk(\)\))p Fz(,)32
b(represen)n(ting)d(classes)h(with)h(some)g(func-)523
548 y(tionalit)n(y)20 b(extracted.)g(W)-7 b(e)22 b(refer)e(to)g(the)i
(former)e(as)g Fs(ion)28 b(classes)g Fz(and)21 b(the)g(latter)f(as)h
Fs(ionise)l(d)523 648 y(classes)771 617 y Fh(3)809 648
y Fz(.)667 1690 y
 currentpoint currentpoint translate 0.46248 0.46248 scale neg exch
neg exch translate
 667 1690 a @beginspecial 0 @llx 0 @lly
673 @urx 220 @ury 6730 @rwi @setspecial
%%BeginDocument: /local/dobsons/projects/ions/ecoop00//classes.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: classes.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Thu Mar  9 14:21:09 2000
%%For: dobsons@puccini.dsg.cs.tcd.ie (Simon Dobson)
%%Orientation: Portrait
%%BoundingBox: 0 0 673 220
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-14.0 234.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<00030003000c000c0030003000c000c0030003000c000c00
	30003000c000c00000030003000c000c0030003000c000c0
	030003000c000c0030003000c000c000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P2 exch def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<808080804040404020202020101010100808080804040404
	020202020101010180808080404040402020202010101010
	080808080404040402020202010101018080808040404040
	202020201010101008080808040404040202020201010101
	808080804040404020202020101010100808080804040404
	0202020201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

% crosshatch45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<828282824444444428282828101010102828282844444444
	828282820101010182828282444444442828282810101010
	282828284444444482828282010101018282828244444444
	282828281010101028282828444444448282828201010101
	828282824444444428282828101010102828282844444444
	8282828201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P6 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /endash 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Courier /Courier-iso isovec ReEncode
/Times-Roman /Times-Roman-iso isovec ReEncode
/Times-Italic /Times-Italic-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 4900 m -1000 -1000 l 12436 -1000 l 12436 4900 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 6100 884 m 6185 884 l 6185 968 l 6100 968 l cp gs col0 s gr 
% Polyline
n 6100 714 m 6185 714 l 6185 799 l 6100 799 l cp gs col0 s gr 
% Polyline
n 5762 545 m 6100 545 l 6100 629 l 5762 629 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 384.13 36.33] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6100 545 m 6185 545 l 6185 629 l 6100 629 l cp gs col0 s gr 
% Polyline
n 7945 2658 m 8048 2658 l 8048 2761 l 7945 2761 l cp gs col0 s gr 
% Polyline
n 7533 2658 m 7945 2658 l 7945 2761 l 7533 2761 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 502.20 177.20] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
7512 2225 m 7533 2143 l 7554 2225 l 7554 2128 l 7512 2128 l cp
clip
n 7533 2555 m 7533 2143 l gs col0 s gr gr

% arrowhead
n 7512 2225 m 7533 2143 l 7554 2225 l  col0 s
% Polyline
n 7997 2195 m 8100 2195 l 8100 2298 l 7997 2298 l cp gs col0 s gr 
% Polyline
n 7997 2349 m 8100 2349 l 8100 2452 l 7997 2452 l cp gs col0 s gr 
% Polyline
n 10092 1402 m 10179 1402 l 10179 1490 l 10092 1490 l cp gs col0 s gr 
% Polyline
n 9743 1402 m 10092 1402 l 10092 1490 l 9743 1490 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 649.53 93.47] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
9726 1036 m 9743 966 l 9760 1036 l 9760 951 l 9726 951 l cp
clip
n 9743 1315 m 9743 966 l gs col0 s gr gr

% arrowhead
n 9726 1036 m 9743 966 l 9760 1036 l  col0 s
% Polyline
n 10092 574 m 10179 574 l 10179 661 l 10092 661 l cp gs col0 s gr 
% Polyline
n 10092 399 m 10179 399 l 10179 487 l 10092 487 l cp gs col0 s gr 
% Polyline
gs  clippath
10249 634 m 10179 617 l 10249 600 l 10164 600 l 10164 634 l cp
clip
n 9874 1577 m 10397 1577 l 10397 617 l 10179 617 l gs col0 s gr gr

% arrowhead
n 10249 634 m 10179 617 l 10249 600 l  col0 s
% Polyline
gs  clippath
10249 460 m 10179 443 l 10249 426 l 10164 426 l 10164 460 l cp
clip
n 9874 1751 m 10484 1751 l 10484 443 l 10179 443 l gs col0 s gr gr

% arrowhead
n 10249 460 m 10179 443 l 10249 426 l  col0 s
% Polyline
gs  clippath
3270 870 m 3300 750 l 3330 870 l 3330 735 l 3270 735 l cp
clip
n 3300 1275 m 3300 750 l gs col0 s gr gr

% arrowhead
n 3270 870 m 3300 750 l 3330 870 l  col0 s
% Polyline
n 3375 975 m 3975 975 l 3975 1125 l 3375 1125 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P2 [16 0 0 -8 225.00 65.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 1200 2100 m 1350 2100 l 1350 2250 l 1200 2250 l cp gs col0 s gr 
% Polyline
n 1200 1800 m 1350 1800 l 1350 1950 l 1200 1950 l cp gs col0 s gr 
/Times-Italic-iso ff 180.00 scf sf
675 825 m
gs 1 -1 sc (Ion uses pre-methods from) col0 sh gr
/Times-Italic-iso ff 180.00 scf sf
675 1050 m
gs 1 -1 sc (class and has unsatisfied) col0 sh gr
/Times-Italic-iso ff 180.00 scf sf
675 1275 m
gs 1 -1 sc (dependencies) col0 sh gr
% Polyline
 [60] 0 sd
gs  clippath
1470 2205 m 1350 2175 l 1470 2145 l 1335 2145 l 1335 2205 l cp
clip
n 3300 2175 m 1350 2175 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 1470 2205 m 1350 2175 l 1470 2145 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
1470 1905 m 1350 1875 l 1470 1845 l 1335 1845 l 1335 1905 l cp
clip
n 3300 1875 m 1350 1875 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 1470 1905 m 1350 1875 l 1470 1845 l  col0 s
% Polyline
60.000 slw
 [60] 0 sd
gs  clippath
2945 2505 m 3064 2550 l 2945 2595 l 3225 2595 l 3225 2505 l cp
clip
n 1200 2550 m 3150 2550 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 2945 2505 m 3064 2550 l 2945 2595 l  col0 s
/Courier-iso ff 180.00 scf sf
1950 2475 m
gs 1 -1 sc (new) col0 sh gr
/Times-Italic-iso ff 180.00 scf sf
4875 2325 m
gs 1 -1 sc (Ionisation removes some) col0 sh gr
/Times-Italic-iso ff 180.00 scf sf
4875 2550 m
gs 1 -1 sc (pre-methods and) col0 sh gr
/Courier-iso ff 180.00 scf sf
6300 2550 m
gs 1 -1 sc (new) col0 sh gr
/Times-Italic-iso ff 180.00 scf sf
8625 2325 m
gs 1 -1 sc (Deionise against a) col0 sh gr
/Times-Italic-iso ff 180.00 scf sf
8625 2550 m
gs 1 -1 sc (class with the right) col0 sh gr
/Times-Italic-iso ff 180.00 scf sf
8625 2775 m
gs 1 -1 sc (pre-methods to get) col0 sh gr
/Times-Italic-iso ff 180.00 scf sf
8625 3000 m
gs 1 -1 sc (a new class) col0 sh gr
% Polyline
30.000 slw
 [60] 0 sd
gs  clippath
7083 2229 m 7161 2364 l 7022 2295 l 7202 2464 l 7264 2398 l cp
clip
n 6000 1275 m 7200 2400 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 7083 2229 m 7161 2364 l 7022 2295 l  col0 s
% Polyline
 [60] 0 sd
gs  clippath
9204 1317 m 9339 1238 l 9270 1378 l 9439 1198 l 9373 1136 l cp
clip
n 8250 2400 m 9375 1200 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 9204 1317 m 9339 1238 l 9270 1378 l  col0 s
/Courier-iso ff 180.00 scf sf
6450 1575 m
gs 1 -1 sc (ionise) col0 sh gr
/Courier-iso ff 180.00 scf sf
7875 1725 m
gs 1 -1 sc (deionise) col0 sh gr
/Courier-iso ff 180.00 scf sf
3225 2700 m
gs 1 -1 sc (Ion\(A,D\)) col0 sh gr
/Courier-iso ff 180.00 scf sf
525 3075 m
gs 1 -1 sc (Class\(Ion\(A,D\)\)) col0 sh gr
/Courier-iso ff 180.00 scf sf
5100 1575 m
gs 1 -1 sc (Class\(A\)) col0 sh gr
/Courier-iso ff 180.00 scf sf
5850 3375 m
gs 1 -1 sc (Ion\(Class\(A\),Class\(D\)\)) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
1575 3900 m
gs 1 -1 sc (\(a\) Ion class) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
7350 3825 m
gs 1 -1 sc (\(b\) Ionised class) col0 sh gr
/Courier-iso ff 180.00 scf sf
10575 1425 m
gs 1 -1 sc (Class\(A\)) col0 sh gr
/Courier-iso ff 180.00 scf sf
7425 600 m
gs 1 -1 sc (Class\(D'\)   D' <: D) col0 sh gr
7.500 slw
% Ellipse
n 5772 874 202 476 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 5762 884 m 6100 884 l 6100 968 l 5762 968 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 384.13 58.93] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 5762 714 m 6100 714 l 6100 799 l 5762 799 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 384.13 47.60] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 5762 1096 m 6100 1096 l 6100 1180 l 5762 1180 l cp gs 0.00 setgray ef gr gs col-1 s gr 
% Ellipse
n 7546 2876 245 322 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 7584 2349 m 7997 2349 l 7997 2452 l 7584 2452 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 505.60 156.60] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 7584 2195 m 7997 2195 l 7997 2298 l 7584 2298 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 505.60 146.33] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Ellipse
n 9754 606 207 360 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 9754 1717 207 383 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 9743 574 m 10092 574 l 10092 661 l 9743 661 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 649.53 38.27] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 9743 399 m 10092 399 l 10092 487 l 9743 487 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 649.53 26.60] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 9743 792 m 10092 792 l 10092 879 l 9743 879 l cp gs 0.00 setgray ef gr gs col-1 s gr 
% Polyline
n 9743 1882 m 10092 1882 l 10092 1969 l 9743 1969 l cp gs 0.00 setgray ef gr gs col-1 s gr 
% Ellipse
n 3300 1875 375 600 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 3300 2100 m 3900 2100 l 3900 2250 l 3300 2250 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 220.00 140.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 3300 1800 m 3900 1800 l 3900 1950 l 3300 1950 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 220.00 120.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Ellipse
n 618 2232 375 600 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 600 2100 m 1200 2100 l 1200 2250 l 600 2250 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 40.00 140.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 600 1800 m 1200 1800 l 1200 1950 l 600 1950 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 40.00 120.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 600 2475 m 1200 2475 l 1200 2625 l 600 2625 l cp gs 0.00 setgray ef gr gs col-1 s gr 
$F2psEnd
rs
end

%%EndDocument
 @endspecial 667 1690 a
 currentpoint currentpoint translate 1 0.46248 div 1 0.46248 div scale
neg exch neg exch translate
 667 1690 a 1456 1865 a Fv(Fig.)14
b(7.)26 b Fw(Ion)f(and)g(ionised)i(classes)648 2174 y
Fz(An)32 b(ion)g(class)g(constructs)f(ions)h(in)g(the)h(same)e(w)n(a)n
(y)g(as)h(a)g(class)f(constructs)g(ob)5 b(jects:)523
2274 y(it)29 b(generates)e(instances)g(of)i(an)f(ob)5
b(ject)28 b(t)n(yp)r(e)h(whic)n(h)f(share)f(a)h(common)g(implemen)n
(tation)523 2373 y(\(\034gure)37 b(7a\).)g(Eac)n(h)h(ob)5
b(ject)37 b(created)g(b)n(y)g(a)g(class)g(is)h(iden)n(tical)f(to)g(all)
h(others)e(in)i(terms)523 2473 y(of)f(initial)g(state)g(but)g(indep)r
(enden)n(t)h(in)f(terms)f(of)h(future)g(state)g(transitions;)f
(similarly)523 2573 y(the)k(ions)f(created)g(b)n(y)g(an)h(ion)f(class)g
(are)f(initially)i(iden)n(tical)f(but)i(ma)n(y)d(b)r(e)i(deionised)523
2672 y(indep)r(enden)n(tly)g(to)g(generate)e(ob)5 b(jects)39
b(whic)n(h)h(will)g(b)r(e)g(functionally)g(distinct)g(despite)523
2772 y(their)28 b(common)f(heritage.)648 2874 y(An)37
b(ion)f(class)f(ma)n(y)h(b)r(e)h(enco)r(ded)g(in)f(a)h(manner)e(v)n
(ery)h(similar)g(to)g(the)h(usual)f(class)523 2974 y(enco)r(ding.)25
b(The)h(pre-metho)r(ds)e(sp)r(ecify)i(the)g(de\034ned)g(parts)e(of)i
(the)g(ion)f(as)g(exp)r(ected,)g(but)523 3074 y(the)31
b(constructor)f(returns)g(an)h(ion)g(including)g(some)f(dep)r
(endencies.)h(Supp)r(ose)g Fr(A)e Fj(\021)g Fk([)p Fr(l)3326
3086 y Fq(i)3382 3074 y Fk(:)523 3173 y Fr(A)585 3140
y Fq(i)p Fg(2)p Fy(1)p Fq(::n)585 3196 y(i)771 3173 y
Fk(])p Fz(,)e Fr(L)901 3185 y Fq(D)987 3173 y Fz(and)f
Fr(L)1204 3185 y Fq(I)1268 3173 y Fz(co)n(v)n(er)e Fr(L)1538
3185 y Fq(A)1592 3173 y Fz(,)i(and)g Fr(D)g Fj(\021)c
Fk([)p Fr(l)2031 3185 y Fq(i)2082 3173 y Fk(:)h Fr(A)2190
3136 y Fq(l)2211 3144 y Fe(i)2237 3136 y Fg(2)p Fq(L)2328
3144 y Fe(D)2190 3196 y Fq(i)2384 3173 y Fk(])p Fz(.)j(Then)g
Fr(C)6 b(l)r(ass)p Fk(\()p Fr(I)h(on)p Fk(\()p Fr(A;)14
b(D)r Fk(\)\))24 b Fj(\021)523 3281 y Fk([)p Fr(new)696
3251 y Fy(+)780 3281 y Fk(:)29 b(\(\))h Fj(!)f Fr(I)7
b(on)p Fk(\()p Fr(A;)14 b(D)r Fk(\))p Fr(;)g(l)1469 3246
y Fy(+)1467 3305 y Fq(i)1553 3281 y Fk(:)29 b Fr(A)g
Fj(!)g Fr(A)1870 3244 y Fq(i)p Fg(2)p Fq(L)1984 3252
y Fe(I)1870 3305 y Fq(i)2022 3281 y Fk(])i Fz(\025)g(the)g(pre-metho)r
(ds)f(map)h(an)g(ob)5 b(ject)31 b(of)523 3381 y(the)d(underlying)f(t)n
(yp)r(e)h(to)f(the)h(pro)n(vided)f(b)r(o)r(dy)-7 b(.)648
3484 y(Ionised)35 b(classes)g(are)g(a)h(little)h(more)f(subtle,)g
(requiring)f(explicit)i(handling)f(of)g Fr(new)523 3583
y Fz(metho)r(ds.)28 b(Ionising)e(a)i(class)e(remo)n(v)n(es)g(some)h(of)
g(its)h(pre-metho)r(ds)f(and)g Fr(new)r Fz(:)h(the)g(result-)523
3683 y(ing)22 b(ob)5 b(ject)22 b(is)g(then)h(deionised)e(against)g(a)h
(class)f(pro)n(viding)g(the)i(abstracted)e(pre-metho)r(ds)523
3783 y(\(\034gure)d(7b\).)g(Deionisation)g(syn)n(thesises)g(a)g
Fr(new)i Fz(metho)r(d)f(re\035ecting)f(the)h(new)f(class')g(struc-)523
3882 y(ture)23 b(\(\034gure)g(8\).)g(Although)g(the)g(rule)g(\(Eq)h
(Class)e(Deionise\))h(lo)r(oks)f(complex,)h(it)g(basically)523
3982 y(just)k(p)r(erforms)f(sequen)n(tial)g(comp)r(osition)g(of)h(the)g
Fr(new)i Fz(metho)r(ds)e(with)g(duplicates)g(b)r(eing)523
4081 y(o)n(v)n(erridden)f(b)n(y)h(metho)r(ds)h(from)f
Fr(d)h Fz(as)f(exp)r(ected.)648 4184 y(It)19 b(is)h(in)n(teresting)e
(to)i(note)f(the)h(di\033erence)f(b)r(et)n(w)n(een)h(an)f(ionised)g
(class)g(and)g(an)g(abstract)523 4284 y(class.)i(In)i(an)f(abstract)f
(class)g(some)h(of)g(the)h(class')e(metho)r(ds)h(are)f(left)i(to)g(b)r
(e)f(de\034ned)h(b)n(y)f(the)523 4383 y(sub-classes;)h(in)j(an)f
(ionised)f(class)h(some)f(of)h(the)h(metho)r(ds)f(are)f(left)i(to)f(b)r
(e)g(de\034ned)h(b)n(y)f(the)523 4483 y(dep)r(endency)35
b(t)n(yp)r(e,)g(whic)n(h)g(is)g(e\033ectiv)n(ely)f(an)h(abstracted)e
(sup)r(erclass.)h(This)h(in)n(v)n(ersion)523 4583 y(of)g(the)f(normal)g
(extension)g(approac)n(h)f(means)h(that)h(a)f(designer)f(ma)n(y)h
(apply)g Fs(the)j(same)523 4682 y Fz(extended)32 b(functionalit)n(y)f
(to)g Fs(di\033er)l(ent)39 b Fz(lea)n(v)n(es)30 b(in)i(the)f
(inheritance)g(hierarc)n(h)n(y)-7 b(,)29 b(whereas)p
523 4748 473 4 v 546 4801 a Ff(3)606 4833 y Fw(There)c(are)f(actually)h
(t)n(w)n(o)g(other)f(p)r(ossibilities,)j Fp(I)6 b(on)p
Fo(\()p Fp(C)f(l)q(ass)p Fo(\()p Fp(A)p Fo(\))p Fp(;)11
b(D)r Fo(\))25 b Fw(and)f Fp(I)6 b(on)p Fo(\()p Fp(A;)12
b(C)5 b(l)q(ass)p Fo(\()p Fp(D)r Fo(\)\))p Fw(,)606 4924
y(whic)n(h)26 b(do)f(not)h(ha)n(v)n(e)f(ob)n(vious)h(in)n
(terpretations)g(for)g(arbitrary)g(t)n(yp)r(es)f Fp(A)g
Fw(and)g Fp(D)r Fw(.)p eop
%%Page: 9 9
9 8 bop 535 429 a Fw(\(Eq)25 b(Class)i(Ionise\))784 528
y Fp(\000)32 b Fl(`)21 b Fp(a)g Fl($)g Fo([)p Fp(new)j
Fo(=)d Fp(:)13 b(:)g(:)26 b(;)13 b(l)1526 536 y Fn(i)1574
528 y Fo(=)21 b Fp(\025)p Fo(\()p Fp(s)f Fo(:)i Fp(A)p
Fo(\))p Fp(a)1958 491 y Fn(l)1978 502 y Fe(i)2004 491
y Fm(2)p Fn(L)2088 502 y Fe(A)1958 548 y Fn(i)2139 528
y Fo(])f(:)h Fp(C)5 b(l)q(ass)p Fo(\()p Fp(A)p Fo(\))p
535 559 2253 4 v 547 630 a Fp(\000)31 b Fl(`)21 b Fp(ionise)p
Fo(\()p Fp(a;)14 b(I)6 b Fo(\))20 b Fl($)h Fo([)p Fp(l)1238
638 y Fn(i)1286 630 y Fo(=)g Fp(\025)p Fo(\()p Fp(s)g
Fo(:)h Fp(A)p Fo(\))p Fp(a)1671 593 y Fn(l)1691 604 y
Fe(i)1716 593 y Fm(2)p Fn(L)1800 604 y Fe(I)1671 650
y Fn(i)1837 630 y Fo(])g(:)g Fp(I)6 b(on)p Fo(\()p Fp(C)f(l)q(ass)p
Fo(\()p Fp(A)p Fo(\))p Fp(;)12 b(C)5 b(l)q(ass)p Fo(\()p
Fp(D)r Fo(\)\))2810 576 y Fp(L)2862 584 y Fn(I)2897 576
y Fp(;)14 b(L)2984 584 y Fn(D)3065 576 y Fw(co)n(v)n(er)26
b Fp(L)3316 584 y Fn(A)535 880 y Fw(\(Eq)f(Class)i(Deionise\))1107
979 y Fp(\000)32 b Fl(`)21 b Fp(c)h Fl($)f Fo([)p Fp(l)1451
987 y Fn(i)1499 979 y Fo(=)g Fp(c)1613 942 y Fn(l)1633
953 y Fe(i)1659 942 y Fm(2)p Fn(L)1743 953 y Fe(I)1613
999 y Fn(i)1781 979 y Fo(])g(:)h Fp(I)6 b(on)p Fo(\()p
Fp(C)f(l)q(ass)p Fo(\()p Fp(A)p Fo(\))p Fp(;)12 b(C)5
b(l)q(ass)p Fo(\()p Fp(D)r Fo(\)\))908 1085 y Fp(\000)32
b Fl(`)22 b Fp(d)f Fl($)g Fo([)p Fp(new)j Fo(=)d Fp(:)13
b(:)g(:)26 b(;)13 b(l)1650 1093 y Fn(j)1704 1085 y Fo(=)21
b Fp(d)1825 1041 y Fn(l)1845 1052 y Fe(j)1876 1041 y
Fm(2)p Fn(L)1960 1059 y Fe(D)2007 1047 y Fi(0)1825 1105
y Fn(j)2038 1085 y Fo(])g(:)h Fp(C)5 b(l)q(ass)p Fo(\()p
Fp(D)2415 1054 y Fm(0)2437 1085 y Fo(\))111 b Fp(\000)32
b Fl(`)21 b Fp(D)2790 1054 y Fm(0)2834 1085 y Fp(<)p
Fo(:)h Fp(D)p 535 1118 2842 4 v 1597 1182 a(\000)32 b
Fl(`)21 b Fp(deionise)p Fo(\()p Fp(c;)14 b(d)p Fo(\))21
b Fl($)547 1213 y Fd(2)547 1344 y(6)547 1392 y(4)597
1280 y Fp(new)j Fo(=)d Fp(&)6 b Fo(\()p Fp(z)24 b Fo(:)e
Fp(C)5 b(l)q(ass)p Fo(\()p Fp(I)22 b(.)17 b(D)1409 1248
y Fm(0)1432 1280 y Fo(\)\)[)p Fp(l)1536 1288 y Fn(i)1583
1280 y Fo(=)22 b Fp(&)6 b Fo(\()p Fu(self)36 b Fo(:)22
b Fp(I)g(.)c(D)2095 1248 y Fm(0)2118 1280 y Fo(\))p Fp(z)s(:l)2231
1288 y Fn(i)2257 1280 y Fo(\()p Fp(sel)q(f)8 b Fo(\))2458
1248 y Fn(l)2478 1259 y Fe(i)2504 1248 y Fm(2)p Fn(L)2588
1259 y Fe(I)2621 1248 y Fm([)p Fn(L)2705 1266 y Fe(D)2752
1254 y Fi(0)2783 1280 y Fo(])p Fp(;)1241 1386 y(l)1264
1394 y Fn(i)1311 1386 y Fo(=)21 b Fp(\025)p Fo(\()p Fp(s)g
Fo(:)h Fp(I)g(.)c(D)1744 1354 y Fm(0)1766 1386 y Fo(\))p
Fp(c)1829 1342 y Fn(l)1849 1353 y Fe(i)1876 1342 y Fm(2)p
Fn(L)1960 1353 y Fe(I)1993 1342 y Fm(\000)p Fn(L)2083
1360 y Fe(D)2130 1348 y Fi(0)1829 1406 y Fn(i)2161 1386
y Fp(;)1310 1492 y(l)1333 1500 y Fn(i)1380 1492 y Fo(=)j
Fp(\025)p Fo(\()p Fp(s)g Fo(:)h Fp(I)g(.)c(D)1813 1460
y Fm(0)1836 1492 y Fo(\))p Fp(d)1906 1448 y Fn(l)1926
1459 y Fe(i)1952 1448 y Fm(2)p Fn(L)2036 1466 y Fe(D)2083
1454 y Fi(0)1906 1512 y Fn(i)2826 1213 y Fd(3)2826 1344
y(7)2826 1392 y(5)2903 1385 y Fw(:)26 b(Class\(I)g Fp(.D)3311
1353 y Fm(0)3335 1385 y Fo(\))1327 1666 y Fv(Fig.)15
b(8.)25 b Fw(Ionisation)i(rules)f(for)g(class)h(t)n(yp)r(es)523
1953 y Fz(the)k(normal)e(inheritance)g(approac)n(h)f(w)n(ould)i
(require)f(suc)n(h)h(shared)f(functionalit)n(y)h(to)g(b)r(e)523
2052 y(applied)f(to)h(a)f(common)g(ancestor)f(of)h(the)h(lea)n(v)n(es)e
(\025)h(whic)n(h)h(is)f(t)n(ypically)g(not)h(p)r(ossible)f(in)523
2152 y(systems)36 b(whic)n(h)g(are)f(dynamically)g(extended.)h(Ionised)
g(classes)e(therefore)h(pro)n(vide)g(an)523 2252 y(imp)r(ortan)n(t)27
b(foil)h(to)f(the)h(normal)f(inheritance)g(mec)n(hanism.)648
2351 y(The)21 b(traditional)f(approac)n(h)g(to)h(con)n(trolling)f(o)n
(v)n(erriding)f(has)i(b)r(een)h(through)e(visibilit)n(y)523
2451 y(mo)r(di\034ers)h(suc)n(h)g(as)g(Ja)n(v)-5 b(a's)19
b Fc(public)p Fz(,)g Fc(protected)f Fz(and)j Fc(final)e
Fz(mo)r(di\034ers.)i(Suc)n(h)h(mo)r(di\034ers)523 2550
y(de\034ne)33 b(a)f(single)h(o)n(v)n(erriding)d(p)r(olicy)j(for)f(all)g
(the)i(co)r(de)e(in)h(a)g(system)f(\025)h(and)f(when)h(co)r(de)523
2650 y(increasingly)j(deriv)n(es)h(from)g(m)n(ultiple)h(sources)e(with)
i(di\033eren)n(t)g(degrees)e(of)i(trust)g(this)523 2750
y(seems)27 b(to)g(b)r(e)h(a)f(v)n(ery)f(blun)n(t)i(implemen)n(t)g(with)
g(whic)n(h)f(to)g(tac)n(kle)g(an)g(increasingly)f(subtle)523
2849 y(problem.)21 b(With)i(ionised)e(classes,)g(rather)g(than)g
(extending)h(a)f(single)h(class)f(under)g(a)h(single)523
2949 y(p)r(olicy)-7 b(,)26 b(w)n(e)g(ma)n(y)g(apply)g(the)h(same)e
(extension)h(to)g(di\033eren)n(t)h(bases.)e(This)i(adds)f(a)f(la)n(y)n
(er)g(of)523 3049 y(\035exibilit)n(y)h(when)h(\(for)f(example\))g(the)h
(extensions)e(are)h(imp)r(orted)g(from)g(remote)f(sources,)523
3148 y(since)i(the)h(base)f(ma)n(y)g(b)r(e)h(tailored)f(to)g(suit)h
(the)g(source.)523 3414 y Ft(5)112 b(Applications)523
3613 y Fz(In)30 b(this)f(section)g(w)n(e)g(sho)n(w)g(ho)n(w)g(ions)g
(and)g(ionised)g(classes)f(can)h(b)r(e)h(used)f(to)h(mo)r(del)f(and)523
3712 y(impro)n(v)n(e)d(four)h(common)g(programming)f(structures.)523
3961 y Fb(5.1)94 b(Metho)s(d)31 b(up)s(date)523 4127
y Fz(Ob)5 b(ject)34 b(calculi)f(\(including)h Fr(O)r(b)1567
4139 y Fy(1)p Fq(<)p Fy(:)1676 4127 y Fz(\))g(frequen)n(tly)f(allo)n(w)
g(the)h(metho)r(ds)g(of)g(an)g(ob)5 b(ject)33 b(to)523
4227 y(b)r(e)40 b(up)r(dated)h(as)e(computation)h(progresses.)d(In)j(a)
g(formal)f(system)g(this)i(allo)n(ws)d(v)-5 b(alue)523
4327 y(and)28 b(metho)r(d)g(up)r(date)h(to)e(b)r(e)i(handled)f
(uniformly;)g(in)g(practice)f(it)h(can)g(also)f(b)r(e)h(a)g(useful)523
4426 y(capabilit)n(y)-7 b(,)21 b(for)h(example)f(in)h(pro)n(viding)f
(dynamic)g(adaptation)g(of)h(k)n(ey)f(algorithms.)g(Since)523
4526 y(mainstream)k(languages)f(do)h(not)h(supp)r(ort)g(metho)r(d)g(up)
r(date,)g(suc)n(h)g(features)f(are)g(usually)523 4625
y(addressed)c(using)g(\(unc)n(hec)n(k)n(ed\))g(design)h(patterns.)f
(Ions)g(pro)n(vide)g(a)h(direct)f(solution,)h(with)523
4725 y(the)j(additional)g(b)r(ene\034t)h(of)f(b)r(eing)g(able)g(to)g(p)
r(erform)f(m)n(ultiple)i(up)r(dates)f(sim)n(ultaneously)-7
b(.)648 4825 y(The)25 b(static,)f(inheritance-based)g(approac)n(h)f(to)
h(metho)r(d)i(up)r(date)f(de\034nes)g(a)f(sub-class)523
4924 y(with)34 b(the)f(new)g(metho)r(d)h(implemen)n(tations,)f(adding)f
(the)i(new)f(implemen)n(tations)f(from)p eop
%%Page: 10 10
10 9 bop 523 448 a Fz(the)30 b(b)r(ottom)h(of)f(the)g(inheritance)g
(hierarc)n(h)n(y)-7 b(.)28 b(The)i(dynamic)g(case)f(using)g(ions)h(do)r
(es)g(the)523 548 y(opp)r(osite:)35 b(the)h(ob)5 b(ject)35
b(is)g(\034rst)g(ionised)g(to)g(remo)n(v)n(e)f(the)i(un)n(w)n(an)n(ted)
e(implemen)n(tations,)523 648 y(and)41 b(is)f(then)h(deionised)g
(against)e(an)i(ob)5 b(ject)40 b(pro)n(viding)f(the)i(new)g(implemen)n
(tations.)523 747 y(Since)27 b(deionisation)e(m)n(ust)i(satisfy)f(all)h
(abstracted)e(dep)r(endencies,)i(one)f(ma)n(y)g(force)g(a)g(set)523
847 y(of)i(sim)n(ultaneous)e(up)r(dates)i(simply)g(b)n(y)f(con)n
(trolling)f(the)i(initial)f(ionisation.)648 946 y(This)h(de\034nition)h
(of)f(metho)r(d)h(up)r(date)f(retains)g(the)h(old)f(ob)5
b(ject,)28 b(dynamically)f(gener-)523 1046 y(ates)d(a)h(cop)n(y)f(with)
h(the)g(new)g(functionalit)n(y)-7 b(,)25 b(and)f(do)r(es)h(not)f
(disturb)h(an)n(y)f(other)g(ob)5 b(jects)24 b(\025)523
1146 y(a)k Fs(run-time,)i(sele)l(ctive,)h(pr)l(eserving)37
b Fz(adaptation)27 b(to)h(use)g(the)h(terminology)d(of)j([13].)e(The)
523 1245 y(same)h(approac)n(h)e(ma)n(y)i(b)r(e)h(applied)f(to)g
(classes,)g(building)g(an)g(ionised)g(class)g(without)h(the)523
1345 y(un)n(w)n(an)n(ted)f(functionalit)n(y)h(and)f(deionising)g
(against)g(a)g(class)g(pro)n(viding)f(the)i(new)g(imple-)523
1445 y(men)n(tations.)i(The)g(preserv)-5 b(ation)29 b(of)i(the)h(old)f
(de\034nition)g(ma)n(y)f(b)r(e)i(undesirable)e(in)i(some)523
1544 y(circumstances,)20 b(as)g(it)i(ma)n(y)e(b)r(e)h(imp)r(ossible)g
(to)g(transparen)n(tly)e(replace)h(the)h(old)g(de\034nition)523
1644 y(with)28 b(the)g(new)g(throughout)e(a)i(complex)f(program.)523
1881 y Fb(5.2)94 b(Agen)m(ts)523 2035 y Fz(An)37 b(agen)n(t)e(is)h(an)g
(ob)5 b(ject)36 b(instance)f(whic)n(h)i(mo)n(v)n(es)d(b)r(et)n(w)n(een)
i(sites)g(according)f(to)h(some)523 2135 y(itinery)-7
b(.)29 b(The)g(agen)n(t)f(ma)n(y)g(retain)h(state)g(gathered)e(at)i
(eac)n(h)f(site)i(and)e(p)r(ossibly)h(use)g(it)g(to)523
2234 y(determine)k(its)g(future)g(path.)g(A)n(t)h(eac)n(h)e(site)h(the)
g(agen)n(t)f(requires)g(access)f(to)i(some)g(part)523
2334 y(of)f(the)h(host)g(site's)f(en)n(vironmen)n(t,)f(and)i(the)f
(capabilities)g(whic)n(h)h(eac)n(h)e(site)i(gran)n(ts)e(will)523
2434 y(t)n(ypically)19 b(dep)r(end)i(on)f(the)g(agen)n(t's)f(source.)g
(Agen)n(ts)h(are)f(usually)g(represen)n(ted)g(as)g(ob)5
b(jects,)523 2533 y(but)27 b(their)f(en)n(vironmen)n(tal)f(dep)r
(endence)i(means)f(that)h(they)g(are)e(more)h(correctly)f(view)n(ed)523
2633 y(as)i(ions.)648 2733 y(When)i(an)g(agen)n(t)f(migrates,)g(the)h
(host)g(will)h(not)f(t)n(ypically)f(transfer)g(the)i(en)n(tire)e(pro-)
523 2832 y(gram:)20 b(instead)i(it)g(will)g(transfer)e(that)i(part)f
(of)h(the)g(program)d(whic)n(h)j(pro)n(vides)e(the)i(agen)n(t's)523
2932 y(no)n(v)n(el)g(functionalit)n(y)-7 b(,)24 b(assuming)e(that)i
(the)f(common)g(parts)g(of)g(the)h(run-time)f(system)g(will)523
3031 y(b)r(e)k(made)f(a)n(v)-5 b(ailable)25 b(b)n(y)h(the)g(receiving)f
(host.)h(This)g(assumption)g(is)g(\035a)n(w)n(ed,)f(in)i(the)g(sense)
523 3131 y(that)j(a)g(host)g(ma)n(y)f(decide)h(not)g(to)g(mak)n(e)f
(some)g(sensitiv)n(e)h(functions)g(a)n(v)-5 b(ailable)29
b(to)h(some)523 3231 y(incoming)g(agen)n(ts.)g(This)h(in)g(turn)f
(means)h(that,)g(if)g(the)g(agen)n(t)f(dep)r(ends)h(on)f(those)h(func-)
523 3330 y(tions,)26 b(it)g(cannot)g(successfully)f(execute.)h(Ho)n(w)n
(ev)n(er,)e(this)i(dep)r(endence)g(remains)f(implicit)523
3430 y(within)j(the)g(agen)n(t)f(rather)g(than)g(b)r(eing)h(made)g
(explicit)g(in)g(its)f(t)n(yp)r(e,)h(making)f(it)h(di\036cult)523
3530 y(to)f(determine)h Fs(a)i(priori)38 b Fz(whether)27
b(the)h(agen)n(t)f(has)g(an)g(unsatis\034ed)h(dep)r(endency)g(or)e
(not.)648 3629 y(As)36 b(an)h(example,)f(supp)r(ose)g(w)n(e)g(ha)n(v)n
(e)g(an)g(en)n(vironmen)n(t)f(con)n(taining)h(an)g(op)r(eration)523
3729 y(whic)n(h)f(prin)n(ts)g(an)g(in)n(teger)f(on)h(the)g(screen,)g
Fr(E)5 b(nv)39 b Fj(\021)c Fk([)p Fr(pr)r(intint)g Fk(:)h
Fr(int)f Fj(!)h Fk(\(\)])p Fz(.)g(This)f(op-)523 3828
y(eration)27 b(dep)r(ends)i(critically)f(on)g(lo)r(cation)f(in)i(terms)
f(of)h(resource)d(acquisition)i(\(di\033eren)n(t)523
3928 y(places)d(use)h(di\033eren)n(t)g(displa)n(ys\);)f(it)h(is)g(also)
e(securit)n(y-sensitiv)n(e,)g(in)i(that)g(un)n(trusted)g(co)r(de)523
4028 y(ma)n(y)i(not)h(b)r(e)h(allo)n(w)n(ed)d(to)i(access)f(the)h
(screen.)g(This)g(means)f(that)h(a)g(host)g(ma)n(y)f(wish)h(not)523
4127 y(to)e(mak)n(e)g Fr(pr)r(intint)g Fz(a)n(v)-5 b(ailable)26
b(to)i(all)f(agen)n(ts.)648 4227 y(Supp)r(ose)18 b(w)n(e)h(no)n(w)f
(de\034ne)h(an)g(ob)5 b(ject)19 b(t)n(yp)r(e)g Fr(O)26
b Fj(\021)c Fr(E)5 b(nv)t(.)q Fk([)p Fr(i)23 b Fk(:)g
Fr(int;)14 b(inc)22 b Fk(:)h Fr(int)f Fj(!)h Fk(\(\))p
Fr(;)14 b(pr)r(int)24 b Fk(:)523 4327 y(\(\))37 b Fj(!)f
Fk(\(\)])g Fz(represen)n(ting)e(an)h(agen)n(t)f(running)h(in)h(an)f(en)
n(vironmen)n(t)g(and)g(main)n(taining)f(a)523 4426 y(coun)n(ter)24
b(whic)n(h)h(can)g(b)r(e)g(incremen)n(ted)g(and)g(prin)n(ted)g(on)g
(the)g(screen.)f(The)h Fr(pr)r(int)h Fz(metho)r(d)523
4526 y(of)c Fr(O)i Fz(uses)d(the)i Fr(pr)r(intint)e Fz(metho)r(d)h(of)g
Fr(E)5 b(nv)25 b Fz(to)c(displa)n(y)g(the)h(coun)n(ter)f(on)g(the)i
(screen)d(b)r(efore)523 4625 y(mo)n(ving)27 b(to)g(the)h(next)g(host.)
648 4725 y(T)-7 b(o)36 b(migrate)g Fr(o)i Fz(from)e(one)h(site)g(to)g
(another)f(w)n(e)g(ionise)h(it)g(at)g Fr(E)5 b(nv)41
b Fz(to)36 b(capture)h(its)523 4825 y(en)n(vironmen)n(tal)21
b(dep)r(endency)-7 b(,)22 b(transp)r(ort)f(it)i(using)f(the)g
(appropriate)f(wire)g(proto)r(col,)g(and)523 4924 y(then)28
b(deionise)f(it)h(against)e(the)i(appropriate)e(lo)r(cal)h(en)n
(vironmen)n(t)g(\(\034gure)g(9\).)p eop
%%Page: 11 11
11 10 bop 811 1185 a
 currentpoint currentpoint translate 0.42563 0.42563 scale neg exch
neg exch translate
 811 1185 a @beginspecial 0 @llx
0 @lly 650 @urx 231 @ury 6500 @rwi @setspecial
%%BeginDocument: /local/dobsons/projects/ions/ecoop00//migration.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: migration.eps
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Fri Mar 10 10:21:38 2000
%%For: dobsons@puccini.dsg.cs.tcd.ie (Simon Dobson)
%%Orientation: Portrait
%%BoundingBox: 0 0 650 231
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-8.0 239.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

% crosshatch30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<033003300c0c0c0c30033003c000c000300330030c0c0c0c
	0330033000c000c0033003300c0c0c0c30033003c000c000
	300330030c0c0c0c0330033000c000c0>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P3 exch def

% crosshatch45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<828282824444444428282828101010102828282844444444
	828282820101010182828282444444442828282810101010
	282828284444444482828282010101018282828244444444
	282828281010101028282828444444448282828201010101
	828282824444444428282828101010102828282844444444
	8282828201010101>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P6 exch def

% vertical lines
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 8 16 true [ 8 0 0 -16 0 16 ]
	{<11111111111111111111111111111111>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P10 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 4975 m -1000 -1000 l 11962 -1000 l 11962 4975 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 3825 1650 m 4425 1650 l 4425 1800 l 3825 1800 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 255.00 110.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 7125 1725 m 7725 1725 l 7725 1875 l 7125 1875 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 475.00 115.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 675 2100 m 1275 2100 l 1275 2250 l 675 2250 l cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 675 2100 m 1275 2100 l 1275 2250 l 675 2250 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 45.00 140.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 600 600 m 1200 600 l 1200 750 l 600 750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 40.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
/Times-Italic ff 180.00 scf sf
8175 2550 m
gs 1 -1 sc (Decide which environment) col0 sh gr
/Times-Italic ff 180.00 scf sf
8175 2760 m
gs 1 -1 sc (to deionise against: unsuitable) col0 sh gr
/Times-Italic ff 180.00 scf sf
8175 2970 m
gs 1 -1 sc (environments generate a) col0 sh gr
/Times-Italic ff 180.00 scf sf
8175 3180 m
gs 1 -1 sc (type error before execution) col0 sh gr
% Polyline
n 8925 375 m 9525 375 l 9525 525 l 8925 525 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 595.00 25.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 9825 1650 m 10425 1650 l 10425 1800 l 9825 1800 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 655.00 110.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 9825 1875 m 10425 1875 l 10425 2025 l 9825 2025 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 655.00 125.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 10125 600 m 10725 600 l 10725 750 l 10125 750 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P10 [8 0 0 -16 675.00 40.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
1095 945 m 1125 825 l 1155 945 l 1155 810 l 1095 810 l cp
clip
n 1125 2100 m 1125 825 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 1095 945 m 1125 825 l 1155 945 l  col0 s
/Courier ff 180.00 scf sf
3375 3375 m
gs 1 -1 sc (Ion\(O,Env\)) col0 sh gr
/Courier ff 180.00 scf sf
600 3300 m
gs 1 -1 sc (O) col0 sh gr
/Courier ff 180.00 scf sf
1350 2475 m
gs 1 -1 sc (inc\(\)) col0 sh gr
/Courier ff 180.00 scf sf
1350 2775 m
gs 1 -1 sc (print\(\)) col0 sh gr
/Courier ff 180.00 scf sf
2400 2400 m
gs 1 -1 sc (ionise) col0 sh gr
/Courier ff 180.00 scf sf
525 1200 m
gs 1 -1 sc (Env) col0 sh gr
/Courier ff 180.00 scf sf
1275 675 m
gs 1 -1 sc (printint\(\)) col0 sh gr
/Courier ff 180.00 scf sf
7050 750 m
gs 1 -1 sc (deionise) col0 sh gr
/Times-Italic ff 180.00 scf sf
6900 975 m
gs 1 -1 sc (succeeds) col0 sh gr
/Times-Italic ff 180.00 scf sf
8175 1800 m
gs 1 -1 sc (succeeds) col0 sh gr
/Times-Italic ff 180.00 scf sf
9000 1200 m
gs 1 -1 sc (fails) col0 sh gr
% Ellipse
n 3750 2550 375 600 0 360 DrawEllipse gs col-1 s gr

% Polyline
gs  clippath
3720 1470 m 3750 1350 l 3780 1470 l 3780 1335 l 3720 1335 l cp
clip
n 3750 1950 m 3750 1350 l gs col-1 s gr gr

% arrowhead
n 3720 1470 m 3750 1350 l 3780 1470 l  col-1 s
% Polyline
n 3750 2475 m 4350 2475 l 4350 2625 l 3750 2625 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 250.00 165.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 3750 2775 m 4350 2775 l 4350 2925 l 3750 2925 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 250.00 185.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Ellipse
n 7050 2625 375 600 0 360 DrawEllipse gs col-1 s gr

% Polyline
gs  clippath
7020 1545 m 7050 1425 l 7080 1545 l 7080 1410 l 7020 1410 l cp
clip
n 7050 2025 m 7050 1425 l gs col-1 s gr gr

% arrowhead
n 7020 1545 m 7050 1425 l 7080 1545 l  col-1 s
% Polyline
n 7050 2550 m 7650 2550 l 7650 2700 l 7050 2700 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 470.00 170.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 7050 2850 m 7650 2850 l 7650 3000 l 7050 3000 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 470.00 190.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Ellipse
n 675 2475 375 600 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 675 2400 m 1275 2400 l 1275 2550 l 675 2550 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 45.00 160.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 675 2700 m 1275 2700 l 1275 2850 l 675 2850 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 45.00 180.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Ellipse
n 594 712 231 262 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 8919 487 231 262 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 9819 1837 231 413 0 360 DrawEllipse gs col-1 s gr

% Ellipse
n 10119 712 231 262 0 360 DrawEllipse gs col-1 s gr

% Polyline
60.000 slw
 [60] 0 sd
gs  clippath
3023 2505 m 3172 2550 l 3023 2595 l 3300 2595 l 3300 2505 l cp
clip
n 2175 2550 m 3225 2550 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
30.000 slw
n 3023 2505 m 3172 2550 l 3023 2595 l  col-1 s
% Polyline
7.500 slw
n 150 150 m 5100 150 l 5100 3675 l 150 3675 l cp gs col-1 s gr 
% Polyline
n 6000 150 m 10950 150 l 10950 3675 l 6000 3675 l cp gs col-1 s gr 
% Polyline
60.000 slw
 [60] 0 sd
gs  clippath
6323 2505 m 6472 2550 l 6323 2595 l 6600 2595 l 6600 2505 l cp
clip
n 4650 2550 m 6525 2550 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
30.000 slw
n 6323 2505 m 6472 2550 l 6323 2595 l  col-1 s
% Polyline
60.000 slw
 [60] 0 sd
gs  clippath
9330 1581 m 9473 1643 l 9319 1670 l 9594 1704 l 9605 1614 l cp
clip
n 7050 1350 m 9525 1650 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
30.000 slw
n 9330 1581 m 9473 1643 l 9319 1670 l  col-1 s
% Polyline
60.000 slw
 [60] 0 sd
gs  clippath
9618 818 m 9773 834 l 9635 907 l 9907 855 l 9890 767 l cp
clip
n 7050 1350 m 9825 825 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
30.000 slw
n 9618 818 m 9773 834 l 9635 907 l  col-1 s
% Polyline
60.000 slw
 [60] 0 sd
gs  clippath
8427 511 m 8579 475 l 8472 589 l 8712 452 l 8668 374 l cp
clip
n 7050 1350 m 8625 450 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
30.000 slw
n 8427 511 m 8579 475 l 8472 589 l  col-1 s
/Helvetica ff 180.00 scf sf
4575 3975 m
gs 1 -1 sc (Site A) col-1 sh gr
/Helvetica ff 180.00 scf sf
10425 3975 m
gs 1 -1 sc (Site B) col-1 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 811 1185 a
 currentpoint currentpoint translate 1 0.42563 div 1 0.42563 div scale
neg exch neg exch translate
 811 1185 a 1397 1359 a Fv(Fig.)15
b(9.)25 b Fw(Ions)h(and)f(migrating)h(agen)n(ts)648 1637
y Fz(If)j(the)h(destination)g(site)f(decides)g(that)h(the)g(incoming)f
Fr(o)h Fz(should)f(not)g(b)r(e)h(allo)n(w)n(ed)e(to)523
1737 y(access)h(the)h(screen,)f(it)h(ma)n(y)f(supply)h(an)f(en)n
(vironmen)n(t)g(without)h(the)g Fr(pr)r(intint)g Fz(metho)r(d.)523
1836 y(Deionising)d Fr(o)h Fz(against)e(this)i(en)n(vironmen)n(t)f
(will)h(fail)f(with)h(a)f(t)n(yp)r(e)h(error)e(without)i(execu-)523
1936 y(tion.)648 2036 y(An)36 b(application)g(receiving)f(an)h(agen)n
(t)f(ma)n(y)-7 b(,)36 b(in)h(addition)f(to)g(running)g(it,)h(wish)f(to)
523 2135 y(pro)n(vide)25 b(monitoring)f(\020ho)r(oks\021)31
b(to)26 b(trac)n(k)e(its)i(activities.)g(Ionic)f(t)n(yp)r(es)h(o\033er)
f(a)g(simple)h(w)n(a)n(y)523 2235 y(of)31 b(pro)n(viding)e(these)i(ho)r
(oks.)e(The)i(application)f(adds)g(the)i(monitoring)d(metho)r(ds)i(to)g
(the)523 2334 y(en)n(vironmen)n(t)c(\(for)g(example)g(b)n(y)g
(de\034ning)h(an)f(en)n(vironmen)n(t)g Fr(E)5 b(nv)2666
2304 y Fg(0)2712 2334 y Fj(\021)23 b Fk([)p Fr(pr)r(intint)f
Fk(:)h Fr(int)g Fj(!)523 2434 y Fk(\(\))p Fr(;)14 b(number)r(of)9
b(intspr)r(inted)22 b Fk(:)i(\(\))g Fj(!)g Fr(int)p Fk(])j
Fz(with)h(a)g(ho)r(ok)f(to)h(monitor)f(output)h(b)r(eha)n(viour\).)523
2534 y(Deionising)g(against)g(this)h(extended)g(en)n(vironmen)n(t)f
(allo)n(ws)f(the)i(extra)f(metho)r(d)h(to)g(sho)n(w)523
2633 y(through)38 b(\(a)g(consequence)f(of)i(\(V)-7 b(al)38
b(Deionise\))h(in)g(\034gure)e(5\),)h(allo)n(wing)f(the)i(receiving)523
2733 y(application)21 b(to)h(access)f(b)r(oth)h(the)h(incoming)e(co)r
(de)h(and)g(its)g(o)n(wn)g(monitoring)f(and)g(con)n(trol)523
2833 y(co)r(de.)648 2932 y(W)-7 b(e)31 b(ma)n(y)f(con)n(trast)g(the)h
(b)r(eha)n(viour)f(of)g(ions)h(against)f(the)h(fully)g(dynamic)g
(approac)n(h)523 3032 y(where)h(en)n(vironmen)n(tal)g(access)g(is)g
(pro)n(vided)g(b)n(y)h(system-wide)f(ob)5 b(jects)33
b(suc)n(h)f(as)h(Ja)n(v)-5 b(a's)523 3131 y(use)25 b(of)32
b Fc(java.lang.System)o Fz(.)20 b(An)26 b(incoming)f(ob)5
b(ject's)25 b(dep)r(endence)h(on)f(these)g(ob)5 b(jects)25
b(is)523 3231 y(p)r(o)r(orly)d(captured,)h(so)f(op)r(erations)g(whic)n
(h)h(are)f(kno)n(wn)h(to)g(b)r(e)g(generally)f(disallo)n(w)n(ed)f
(\(suc)n(h)523 3331 y(as)i(\034le)h(access\))f(are)f(only)h(caugh)n(t)g
(at)h(run-time.)f(F)-7 b(urthermore)23 b(some)g(of)h(the)g(ob)5
b(jects)23 b(ma)n(y)523 3430 y(b)r(e)30 b(una)n(v)-5
b(ailable)29 b(ev)n(en)g(though)h(they)g(remain)f(notionally)g
(de\034ned)i(\(for)e(example)h(Ja)n(v)-5 b(a's)523 3530
y Fc(System.out)20 b Fz(console)j(stream,)h(whic)n(h)g(can)g(b)r(e)h(a)
f(\020blac)n(k)f(hole\021\),)h(leading)f(to)i(unexp)r(ected)523
3630 y(b)r(eha)n(viour.)648 3729 y(By)19 b(capturing)f(explicitly)i
(the)f(dep)r(endence)h(whic)n(h)f(an)g(ob)5 b(ject)20
b(has)e(on)h(routines)g(whic)n(h)523 3829 y(p)r(oten)n(tially)24
b(c)n(hange)g(across)f(en)n(vironmen)n(ts)g(w)n(e)h(pro)n(vide)g(a)g
(ho)r(ok)g(for)g(impro)n(v)n(ed)f(analysis)523 3928 y(and)36
b(con)n(trol.)f(One)h(ma)n(y)-7 b(,)36 b(for)g(example,)g(de\034ne)g
(the)h(minimal)f(dep)r(endence)h(whic)n(h)f(an)523 4028
y(agen)n(t)20 b(has)g(on)g(its)h(en)n(vironmen)n(t)f(as)g(the)h(dep)r
(endency)g(t)n(yp)r(e)g(of)f(the)h(ion,)g(and)f(then)h(analyse)523
4128 y(precisely)27 b(the)h(impact)f(of)h(di\033eren)n(t)f(securit)n(y)
g(regimes.)523 4368 y Fb(5.3)94 b(Applets)523 4526 y
Fz(Ja)n(v)-5 b(a)30 b(applets)i(are)f(a)g(common)g(form)h(of)g(mobile)f
(co)r(de.)h(The)g(main)f(di\033erence)h(b)r(et)n(w)n(een)523
4625 y(an)26 b(applet)g(and)g(an)g(agen)n(t)g(is)g(that,)h(while)f
(agen)n(t)f(systems)h(mo)n(v)n(e)f(ob)5 b(jects,)26 b(applets)g(mo)n(v)
n(e)523 4725 y(classes)g(whic)n(h)i(are)e(instan)n(tiated)i(afresh)e
(at)i(eac)n(h)f(site.)648 4825 y(Applets)k(generally)e(run)i(in)g(an)g
(en)n(vironmen)n(t)e(with)j(v)n(ery)d(restricted)i(disk)f(and)h(net-)
523 4924 y(w)n(ork)17 b(access.)h(These)g(restrictions)g(are)g
(enforced)g(b)n(y)g(run-time)h(c)n(hec)n(ks)e(inserted)i(man)n(ually)p
eop
%%Page: 12 12
12 11 bop 523 448 a Fz(in)n(to)33 b(all)f(\020sensitiv)n(e\021)39
b(metho)r(ds,)33 b(allo)n(wing)e(a)i(bro)n(wser)e(to)i(in)n(tercept)f
(and)h(disallo)n(w)f(calls)523 548 y(whic)n(h)c(migh)n(t)g(violate)f
(securit)n(y)-7 b(.)27 b(F)-7 b(or)27 b(man)n(y)g(systems)h(the)g
(restrictions)e(will)i(simply)g(dis-)523 648 y(allo)n(w)g(all)h
(accesses)f(to)h(some)g(metho)r(ds)h(b)n(y)f(applets,)g(thro)n(wing)f
(a)h(securit)n(y)g(exception)g(if)523 747 y(the)k(metho)r(d)g(is)g
(called.)f(This)h(simple)g(form)f(of)g(securit)n(y)g(is)h(basically)e
(a)i(t)n(yp)r(e-c)n(hec)n(king)523 847 y(problem,)27
b(since)g(a)h(call)f(to)g(suc)n(h)g(a)h(metho)r(d)g(will)f
Fs(always)36 b Fz(fail.)648 946 y(W)-7 b(e)21 b(ma)n(y)g(mo)r(del)g
(this)h(situation)f(using)g(an)g(ionised)g(class.)g(Rather)g(than)g
(treat)g(the)h(ap-)523 1046 y(plet)g(as)e(a)h(fully-\035edged)g(class)f
(\025)h(implying)g(that)g(its)g(execution)g(en)n(vironmen)n(t)f(is)h
(the)h(same)523 1146 y(as)j(that)i(in)f(whic)n(h)g(it)g(w)n(as)f
(de\034ned)h(\025)g(w)n(e)f(instead)h(ionise)f(the)i(applet)f(class)f
(b)r(efore)g(trans-)523 1245 y(p)r(orting)e(it)h(to)f(the)h(clien)n
(t-side.)f(The)g(ionised)g(applet)h(class)e(is)h(then)h(deionised)f
(against)f(an)523 1345 y(en)n(vironmen)n(t)g(including)g(exactly)g
(those)g(metho)r(ds)h(whic)n(h)g(the)g(applet)f(is)h(allo)n(w)n(ed)e
(to)h(call.)523 1445 y(If)30 b(the)h(applet)e(requires)g(more)g(metho)r
(ds)h(then)g(this)h(en)n(vironmen)n(t)d(will)i(not)g(completely)523
1544 y(satisfy)j(its)h(dep)r(endency)h(t)n(yp)r(e)f(and)f(the)i
(deionisation)d(op)r(eration)h(will)h(fail)g(b)r(efore)g(the)523
1644 y(applet)e(is)f(executed.)h(This)f(prev)n(en)n(ts)f(partial)h
(completions)g(whose)g(consequences)f(ma)n(y)523 1743
y(range)c(from)h(anno)n(ying)f(to)i(catestrophic.)648
1843 y(This)33 b(example)h(illustrates)f(the)h(use)g(of)g(ionic)f(t)n
(yp)r(es)h(to)g(capture,)f(within)i(the)f(t)n(yp)r(e)523
1943 y(system,)41 b(what)f(are)g(e\033ectiv)n(ely)h(load-time)f(link)h
(errors.)e(It)i(pro)n(vides)e(a)i(useful)g(extra)523
2042 y(\020sanit)n(y)27 b(c)n(hec)n(k\021)33 b(for)27
b(all)g(dynamically)g(loaded)g(classes,)f(not)i(just)g(applets.)523
2280 y Fb(5.4)94 b(Delegation)523 2434 y Fz(Delegation)31
b(is)g(often)g(seen)g(as)g(an)g(alternativ)n(e)f(to)h(inheritance)g
(when)g(building)h(ob)5 b(ject-)523 2533 y(orien)n(ted)33
b(programs.)f(In)i(inheritance,)g(the)g(metho)r(ds)g(of)g(an)g(ob)5
b(ject)34 b(are)f(comp)r(osed)g(b)n(y)523 2633 y(adding)j(new)g(mem)n
(b)r(ers)h(to)f(an)g(already-existing)e(class,)i(whic)n(h)g(is)g(then)h
(instan)n(tiated.)523 2733 y(In)32 b(delegation,)g(some)f(of)h(the)h
(metho)r(ds)f(of)g(one)g(ob)5 b(ject)32 b(are)f(passed-o\033)g(to)h(b)r
(e)h(handled)523 2832 y(b)n(y)j(another)e(ob)5 b(ject.)36
b(Delegation)f(therefore)g(in)n(v)n(olv)n(es)f(t)n(w)n(o)h(ob)5
b(jects)35 b(rather)g(than)g(one.)523 2932 y(In)29 b(most)f(mainstream)
f(ob)5 b(ject-orien)n(ted)27 b(languages)f(delegation)i(is)g(treated)g
(as)g(a)g(design)523 3031 y(pattern)h(rather)f(than)h(as)f(a)h(basic)f
(language)g(construct,)g(and)h(m)n(ust)g(b)r(e)h(constructed)e
Fs(ad)523 3131 y(ho)l(c)33 b Fz(b)n(y)27 b(eac)n(h)g(application)p
Fs(.)648 3231 y Fz(The)21 b(simplest)h(case)f(is)g(where)h(a)f(c)n
(hild)h(ob)5 b(ject)21 b(delegates)g(to)g(a)g(paren)n(t)g(without)h
(a\033ect-)523 3330 y(ing)30 b(its)h(b)r(eha)n(viour)e(\025)h(adding)f
(metho)r(ds)i(but)g(not)f(o)n(v)n(erriding)e(an)n(y)-7
b(.)30 b(W)-7 b(e)31 b(de\034ne)f(an)g(ion)g Fr(i)523
3430 y Fz(whose)c(underlying)f(t)n(yp)r(e)i(include)f(all)g(the)h(a)n
(v)-5 b(ailable)25 b(metho)r(ds)h(and)g(whose)g(dep)r(endency)523
3530 y(t)n(yp)r(e)31 b(con)n(tains)e(the)i(signatures)f(of)g(the)h
(metho)r(ds)g(to)f(b)r(e)h(delegated.)f(W)-7 b(e)31 b(then)h(deionise)
523 3629 y(against)25 b(the)i(ob)5 b(ject)26 b Fr(d)h
Fz(to)f(whic)n(h)g(those)g(metho)r(ds)h(should)f(b)r(e)h(delegated.)f
(The)g(fact)h(that)523 3729 y Fr(d)j Fz(is)f(self-con)n(tained)f(in)i
Fr(deionise)p Fk(\()p Fr(i;)14 b(d)p Fk(\))29 b Fz(\025)g(so)f(the)i
(metho)r(ds)g(of)f Fr(d)h Fz(remain)f(una\033ected)g(b)n(y)523
3828 y(the)c(addition)f(of)g Fr(i)g Fz(\025)g(means)f(that)i(it)g(is)f
(p)r(erfectly)g(safe)g(to)g(delegate)g(sev)n(eral)e(ions)i(\(p)r(oten-)
523 3928 y(tially)i(with)g(di\033eren)n(t)g(underlying)f(t)n(yp)r(es)g
(or)g(extended)h(implemen)n(tations\))g(to)g(the)g(same)523
4028 y(ob)5 b(ject.)648 4127 y(Ions)26 b(are)g(not)h(a)g(complete)f
(replacemen)n(t)g(for)h(general)e(delegation,)i(ho)n(w)n(ev)n(er.)d(A)k
(gen-)523 4227 y(eral)23 b(delegation)g(system)h(allo)n(ws)f(the)h(c)n
(hild)g(ob)5 b(ject)24 b(to)g(o)n(v)n(erride)e(metho)r(ds)i(in)g(the)h
(paren)n(t.)523 4327 y(If)g(there)g(are)e(m)n(ultiple)j(c)n(hildren,)e
(the)h(paren)n(t)f(m)n(ust)h(select)f(the)h(metho)r(d)g(de\034nition)g
(from)523 4426 y(the)32 b(c)n(hild)g(on)f(whic)n(h)h(the)g(in)n(v)n(o)r
(cation)e(originated)g(\025)h(the)h(so-called)e(\020self)i(problem\021)
7 b([14].)523 4526 y(Ions)20 b(explicitly)g(outla)n(w)f(this)i(form)f
(of)g(b)r(eha)n(vioural)e(mo)r(di\034cation)i(\025)g(the)h(c)n(hild's)f
(metho)r(ds)523 4625 y(cannot)32 b(o)n(v)n(erride)e(the)i(paren)n(t's)f
(\025)h(so)f(ion-based)g(delegation)h(is)g(only)f(applicable)h(when)523
4725 y Fs(extending)j Fz(the)28 b(paren)n(t's)e(functionalit)n(y)-7
b(.)648 4825 y(Delegation)25 b(is)h(particularly)e(imp)r(ortan)n(t)i
(in)g(distributed)h(systems,)e(where)h(an)f(ob)5 b(ject)523
4924 y(ma)n(y)41 b(wish)g(to)g(extend)g(the)h(functionalit)n(y)f(of)g
(another)f(ob)5 b(ject)41 b(on)g(a)g(remote)g(serv)n(er.)p
eop
%%Page: 13 13
13 12 bop 523 448 a Fz(Distributed)30 b(ob)5 b(ject)30
b(systems)f(suc)n(h)g(as)g(CORBA)h(or)e(RMI)i(generate)f(\020stub\021)
36 b(ob)5 b(jects)29 b(to)523 548 y(act)g(as)f(lo)r(cal)h(represen)n
(tativ)n(es)e(of)i(remote)g(services.)e(Both)i(inheritance)g(and)g
(delegation)523 648 y(are)e(problematic)h(in)h(these)f(situations,)g
(as)g(the)h(clien)n(t)f(ma)n(y)g(attempt)h(to)f(o)n(v)n(erride)f(some)
523 747 y(of)h(the)g(serv)n(er's)e(functionalit)n(y)i(without)g(the)g
(serv)n(er)e(b)r(eing)i(noti\034ed.)g(This)g(means)g(that,)523
847 y(while)i(calls)f(to)h(the)g(clien)n(t)g(will)g(use)g(the)h(o)n(v)n
(erridden)c(metho)r(d,)k(em)n(b)r(edded)f(calls)f(within)523
946 y(the)f(serv)n(er)e(will)h(use)h(the)g(original)e(implemen)n
(tation.)648 1048 y(Ions)39 b(ma)n(y)g(b)r(e)i(used)f(to)g(pro)n(vide)f
(\020wrapp)r(er\021)45 b(ob)5 b(jects)40 b(around)f(the)h(stub)h
(without)523 1147 y(in)n(tro)r(ducing)31 b(these)g(problems.)g(The)h
(clien)n(t)f(constructs)g(an)g(ion)h(with)g(the)f(added)h(func-)523
1247 y(tionalit)n(y)24 b(and)g(deionises)g(it)h(against)e(the)i(stub.)g
(The)f(seman)n(tics)g(of)g(ions)g(means)g(that)h(the)523
1347 y(serv)n(er's)31 b(b)r(eha)n(viour)h(remains)g(unc)n(hanged,)g(so)
g(the)i(resulting)e(ob)5 b(ject)33 b(b)r(eha)n(v)n(es)f(exactly)523
1446 y(as)25 b(exp)r(ected)h(if)h(the)f(ob)5 b(ject)26
b(w)n(ere)e(lo)r(cal)i(instead)f(of)h(b)r(eing)g(represen)n(ted)f(b)n
(y)g(a)h(stub.)g(This)523 1546 y(mak)n(es)h(it)h(trivially)g(easy)f
(for)g(a)h(lo)r(cal)f(ob)5 b(ject)28 b(to)g(delegate)f(some)h(of)g(its)
g(functionalit)n(y)g(to)523 1646 y(a)f(remote)g(ob)5
b(ject)27 b(with)h(no)g(\020surprises\021.)523 1920 y
Ft(6)112 b(Ionic)36 b(t)m(yp)s(es)i(in)f(Ja)m(v)-6 b(a)523
2128 y Fz(Ho)n(w)34 b(migh)n(t)h(one)g(add)f(ionic)h(t)n(yp)r(es)g(to)f
(Ja)n(v)-5 b(a?)34 b(There)g(are)g(sev)n(eral)f(p)r(ossible)i
(solutions,)523 2227 y(and)25 b(in)h(this)f(section)g(w)n(e)g(sk)n(etc)
n(h)f(p)r(erhaps)h(the)g(simplest)h(approac)n(h)d(whic)n(h)i(extends)g
(Ja)n(v)-5 b(a)523 2327 y(minimally)26 b(\(in)h(terms)f(of)g(syn)n
(tax,)f(seman)n(tics)h(and)g(\020feel\021\))g(to)g(pro)n(vide)f(ionic)h
(constructs.)523 2427 y(The)35 b(presen)n(tation)e(is)i(informal,)f
(our)g(in)n(ten)n(tion)h(b)r(eing)f(to)h(indicate)g(the)g(feasibilit)n
(y)f(of)523 2526 y(pro)n(viding)j(ions)h(in)h(Ja)n(v)-5
b(a)37 b(rather)g(than)i(to)f(fully)h(formalise)f(and)g(extend)h(Ja)n
(v)-5 b(a's)37 b(t)n(yp)r(e)523 2626 y(system)27 b(\025)g(a)h(task)f
(already)f(w)n(ell)h(p)r(erformed)g(b)n(y)g(others[9].)648
2727 y(Ja)n(v)-5 b(a's)29 b(designers)h(ha)n(v)n(e)h(consisten)n(tly)f
(main)n(tained)h(the)h(signi\034cance)e(of)i(the)g(names)523
2827 y(giv)n(en)26 b(to)h(classes)f(and)h(in)n(terfaces,)f(as)h(w)n
(ell)f(as)h(their)g(structure.)f(This)h(suggests)f(a)h(mo)r(del)523
2927 y(of)32 b(ions)f(where)g(w)n(e)g(use)h(in)n(terfaces)e(to)i
(indicate)f(allo)n(w)n(ed)g(ionisation)f(b)r(oundaries.)h(This)523
3026 y(resp)r(ects)c(Ja)n(v)-5 b(a's)26 b(insistence)h(that)h(all)f
(class)f(and)i(ob)5 b(jects)27 b(t)n(yp)r(es)g(are)f(named,)i(whic)n(h)
f(is)g(a)523 3126 y(little)j(more)e(restrictiv)n(e)g(than)h(the)g
(arbitrary)e(ionisation)i(allo)n(w)n(ed)e(b)n(y)i(our)f(presen)n
(tation)523 3225 y(so)h(far.)h(It)g(turns)g(out)g(that)g(this)g
(decision)g(also)e(has)i(a)f(sligh)n(t)h(impact)g(on)f(the)i
(de\034nition)523 3325 y(of)d(deionisation.)648 3426
y(Consider)c(a)g(Ja)n(v)-5 b(a)24 b(declaration)g Fc(class)41
b(A)j(implements)39 b(D)k({)g(...)f(})25 b Fz(together)g(with)523
3526 y(an)j(instance)f Fc(a)p Fz(.)h(W)-7 b(e)28 b(ma)n(y)f(ionise)h
Fc(a)f Fz(at)h(the)h Fc(D)e Fz(in)n(terface)g(b)r(oundary)g(to)h
(construct)g(an)f(ion)523 3626 y Fc(i)36 b Fz(ha)n(ving)e(an)i
(extended)g(Ja)n(v)-5 b(a)34 b(t)n(yp)r(e)i Fc(ion)43
b(A)g(at)g(D)35 b Fz(corresp)r(onding)f(informally)h(to)h(our)523
3725 y Fr(O)r(b)624 3737 y Fy(1)p Fq(<)p Fy(:)760 3725
y Fz(t)n(yp)r(e)27 b Fr(I)7 b(on)p Fk(\()p Fr(A;)14 b(D)r
Fk(\))29 b Fz(and)e(represen)n(ted)f(as)h(a)g(clone)g(of)34
b Fc(a)27 b Fz(with)h(the)g(metho)r(ds)f(from)g Fc(D)523
3825 y Fz(abstracted.)k(W)-7 b(e)33 b(ma)n(y)f(then)h(deionise)f
Fc(i)g Fz(against)f(an)h(ob)5 b(ject)32 b Fc(b)g Fz(of)g(class)g
Fc(B)g Fz(implemen)n(t-)523 3925 y(ing)c(in)n(terface)g
Fc(D)g Fz(in)g(the)h(exp)r(ected)f(w)n(a)n(y)-7 b(.)28
b(Op)r(erationally)e(this)j(delegates)e(the)i Fc(D)p
Fz(-declared)523 4024 y(metho)r(ds)34 b(of)40 b Fc(i)33
b Fz(to)h Fc(b)p Fz(.)f(The)h(de\034nition)g(of)40 b
Fc(class)i(A)33 b Fz(ma)n(y)g(include)h(other)f(in)n(terfaces)g(as)523
4124 y(w)n(ell)27 b(as)g Fc(D)p Fz(,)h(whic)n(h)f(should)g(b)r(e)h
(preserv)n(ed)e(b)n(y)h(ionisation.)648 4225 y(What)i(is)h(the)g(t)n
(yp)r(e)f(of)h(the)g(deionised)f(ob)5 b(ject?)29 b(A)n(ccording)f(to)i
(our)e(rules)h(it)h(extends)523 4325 y Fc(A)25 b Fz(with)h(the)g(metho)
r(ds)g(of)32 b Fc(B)26 b Fz(\025)f(but)h(this)g(t)n(yp)r(e)g(is)f(no)n
(v)n(el,)g(syn)n(thetic)h(and)f(without)h(a)f(name,)523
4424 y(meaning)h(that)i(it)f(cannot)f(b)r(e)i(expressed)d(in)j(a)e(Ja)n
(v)-5 b(a)26 b(program.)f(Ho)n(w)n(ev)n(er,)g(w)n(e)h
Fs(c)l(an)34 b Fz(guar-)523 4524 y(an)n(tee)28 b(that)g(it)h(is)f(a)g
(legal)f(instance)h(of)35 b Fc(A)p Fz(,)28 b Fc(B)g Fz(or)f
Fc(D)p Fz(,)h(whic)n(h)g(is)g(su\036cien)n(t)h(to)f(allo)n(w)f(it)h(to)
h(b)r(e)523 4624 y(used.)648 4725 y(An)f(ion)f(class)g(is)h(declared)f
(b)n(y)g(pro)n(viding)g(the)h(de\034nition)g(of)g(its)g(metho)r(ds)g
(assuming)523 4825 y(that)19 b(it)g(implemen)n(ts)h(the)f(metho)r(ds)g
(of)g(the)g(in)n(terface)f(along)g(whic)n(h)h(it)g(is)g(ionised.)f
(Creating)523 4924 y(an)40 b(instance)g(of)g(this)h(class)e(constructs)
g(an)h(ion,)g(whic)n(h)g(ma)n(y)g(then)h(b)r(e)f(deionised)g(to)p
eop
%%Page: 14 14
14 13 bop 664 417 a Fa(class)40 b(A)g(implements)h(D)f({)f(...)h(})664
508 y(class)g(B)g(implements)h(D)f({)f(...)h(})664 600
y(A)g(a)f(=)g(new)h(A\(\);)119 b(B)39 b(b)h(=)f(new)h(B\(\);)664
691 y(ion)g(A)f(at)h(D)g(i)f(=)g(ionise)i(a)e(at)h(D;)664
782 y(A)g(aprime)g(=)g(deionise)h(i)e(against)i(b;)1462
1040 y Fv(Fig.)15 b(10.)25 b Fw(Ionising)i(Ja)n(v)l(a)f(ob)t(jects)523
1322 y Fz(form)34 b(an)g(ob)5 b(ject)35 b(\(\034gure)f(11,)g(top\).)g
(Ionised)g(classes)g(are)f(a)h(bit)h(more)f(subtle,)h(as)f(they)523
1422 y(e\033ectiv)n(ely)g(allo)n(w)f(run-time)h(manipulation)g(of)h
(the)f(class)g(hierarc)n(h)n(y)-7 b(.)32 b(W)-7 b(e)35
b(in)n(tro)r(duce)e(a)523 1521 y(new)26 b(Ja)n(v)-5 b(a)24
b(t)n(yp)r(e)i Fc(ion)42 b(class)g(A)h(at)g(D)25 b Fz(represen)n(ting)f
(a)i(class)e Fc(A)i Fz(with)g(metho)r(ds)g(declared)523
1621 y(in)e Fc(D)f Fz(abstracted,)f(creating)g(suc)n(h)h(ob)5
b(jects)23 b(using)h Fc(ionise)41 b(class)g(A)j(at)e(D)23
b Fz(and)h(allo)n(wing)523 1720 y(them)k(to)f(b)r(e)h(passed)e(around)g
(and)h(resolv)n(ed)f(\(\034gure)h(11,)f(b)r(ottom\).)i(Visibilit)n(y)g
(mo)r(di\034ers)523 1820 y(b)r(eha)n(v)n(e)19 b(as)f(exp)r(ected:)i(a)f
Fc(private)d Fz(mo)r(di\034er)k(on)f(the)g(base)g(prev)n(en)n(ts)f(an)h
(ion)h(dep)r(ending)f(on)523 1920 y(that)h(metho)r(d,)g(and)g(so)f
(forth.)h(Comp)r(osition)f(of)h(constructors)e(is)i(similarly)e(w)n
(ell-b)r(eha)n(v)n(ed.)664 2174 y Fa(class)40 b(ion)g(A)g(at)f(D)h({)f
(...)h(})664 2266 y(ion)g(A)f(at)h(D)g(a)f(=)g(new)h(A\(\);)664
2440 y(ion)g(class)g(A)g(at)f(D)h(Aprime)g(=)g(ionise)g(class)h(A)e(at)
h(D;)664 2531 y(A)g(a)f(=)g(new)h(\(deionise)i(Aprime)e(against)h
(class)f(B\)\(\);)1301 2789 y Fv(Fig.)14 b(11.)26 b Fw(Ion)f(and)h
(ionised)g(classes)h(in)f(Ja)n(v)l(a)648 3074 y Fz(Ho)n(w)h(do)g(these)
g(constructs)g(supp)r(ort)g(Ja)n(v)-5 b(a-based)25 b(mobile)j(co)r(de)f
(systems?)g(W)-7 b(e)28 b(need)523 3173 y(the)19 b(ionic)f(op)r
(erations)f(to)h(preserv)n(e)e(sp)r(ecial)i(in)n(terfaces)g(suc)n(h)g
(as)g Fc(java.io.Seriali)o(za)o(bl)o(e)p Fz(,)523 3273
y(so)23 b(that)h(the)h(ion)e(is)h(serialisable)e(if)j(the)f(ob)5
b(ject)23 b(is.)h(Similarly)f(w)n(e)h(w)n(an)n(t)f(ionised)h(classes)e
(to)523 3372 y(b)r(e)k(serialisable)d(so)h(that)h(they)h(ma)n(y)e(b)r
(e)i(passed)e(b)r(et)n(w)n(een)h(mac)n(hines.)f(This)h(is)g(p)r
(ossible)g(in)523 3472 y(Ja)n(v)-5 b(a)23 b(\025)h(outside)g(the)g(t)n
(yp)r(e)h(system!)f(\025)g(using)h Fc(Class)d Fz(ob)5
b(jects)23 b(and)h(the)h(re\035ection)f(API,)h(so)523
3572 y(the)j(ionic)f(op)r(erations)g(ma)n(y)g(b)r(e)h(regarded)d
(simply)j(as)f(giving)g(a)g(t)n(yp)r(ed)h(basis)f(to)g(existing)523
3671 y(lo)n(w-lev)n(el)f(functionalit)n(y)-7 b(.)648
3771 y(This)29 b(sk)n(etc)n(h)g(of)g(ions)g(in)h(Ja)n(v)-5
b(a)28 b(remains)h(incomplete,)h(lea)n(ving)e(a)h(n)n(um)n(b)r(er)g(of)
h(thorn)n(y)523 3871 y(issues)f(inevitable)g(when)h(trying)e(to)i(in)n
(tegrate)e(a)h(new)h(construct)e(in)n(to)h(an)h(existing)f(lan-)523
3970 y(guage)f(\025)i(most)f(notably)g(the)h(impact)g(of)g(threads,)e
(class)h(loaders,)f(and)i(the)g(handling)f(of)523 4070
y(in)n(terfaces)d(suc)n(h)g(as)g Fc(java.io.Externa)o(liz)o(ab)o(le)20
b Fz(whic)n(h)27 b(could)f(generate)f(subtle)i(errors)523
4169 y(if)35 b(applied)f(to)f(ions.)h(W)-7 b(e)34 b(hop)r(e)g(w)n(e)g
(ha)n(v)n(e)f(indicated)h(the)g(ions)g(lie)g(su\036cien)n(tly)g(close)f
(to)523 4269 y(mo)r(dern)27 b(practice)g(to)h(b)r(e)g(a)f(viable)g
(prop)r(osition.)523 4530 y Ft(7)112 b(Related)37 b(w)m(ork)523
4725 y Fz(The)30 b(abilit)n(y)f(to)g(add)h(functionalit)n(y)f
(uniformly)h(to)f(the)h(b)r(ottom)g(of)f(a)g(class)g(hierarc)n(h)n(y)e
(\025)523 4825 y(usually)21 b(referred)f(to)h(as)f Fs(mixin-b)l(ase)l
(d)30 b Fz(inheritance)21 b(\025)g(has)f(b)r(een)i(studied)f(extensiv)n
(ely)-7 b(,)21 b Fs(e.g.)523 4924 y Fz([4][10].)31 b(Mixins)g(arose)f
(within)i(a)f(dynamic)h(t)n(yping)f(regime,)g(and)g(ha)n(v)n(e)g(b)r
(een)h(extended)p eop
%%Page: 15 15
15 14 bop 523 448 a Fz(with)24 b(static)f(c)n(hec)n(ks.)f(Ionised)g
(classes)g(o\033er)h(essen)n(tially)f(the)h(same)g(functionalit)n(y)g
(as)f(mix-)523 548 y(ins,)j(and)g(are)g(statically)f(t)n(yp)r(e-safe)h
(in)g(en)n(vironmen)n(ts)f(where)h(all)g(classes)f(are)g(elab)r(orated)
523 648 y(at)e(compile-time.)h(The)g(more)e(general)g(ionic)i(t)n(yp)r
(es)f(o\033er)g(more)g(dynamism)g(with)h(a)f(small)523
747 y(and)27 b(con)n(trolled)g(loss)f(of)i(t)n(yp)r(e)g(safet)n(y)-7
b(.)648 849 y(The)32 b(problem)f(of)h(name)g(capture)g(and)g(o)n(v)n
(erriding)d(discussed)j(in)g(section)g(3)g(can)g(b)r(e)523
948 y(resolv)n(ed)k(in)h(sev)n(eral)f(di\033eren)n(t)h(w)n(a)n(ys.)f
(Delegation-based)g(languages)f(generally)h(allo)n(w)523
1048 y(the)28 b(c)n(hild)f(ob)5 b(ject)27 b(to)h(o)n(v)n(erride)d
(metho)r(ds)i(in)h(the)g(paren)n(t,)f(c)n(hanging)f(its)h(b)r(eha)n
(viour.)f(\(An)523 1148 y(elegan)n(t)c(solution)g(to)h(name)g(capture)f
(along)g(di\033eren)n(t)h(sub-t)n(yping)f(paths)h(in)g(this)g(con)n
(text)523 1247 y(is)30 b(giv)n(en)f(b)n(y)h(Kniesel[13].\))e(The)i
(Beta)g(language[15])d(prohibits)j(simple)g(o)n(v)n(erriding)d(but)523
1347 y(allo)n(ws)f(a)h(c)n(hild)h(metho)r(d)g(to)f(b)r(e)h(called)f
(within)h(the)g(paren)n(t)e(metho)r(d.)i(Neither)g(approac)n(h)523
1446 y(e\033ectiv)n(ely)38 b(addresses)f(un)n(trusted)i(do)n(wnloaded)e
(co)r(de)i(or)f(transparen)n(t)f(delegation)g(to)523
1546 y(remote)27 b(ob)5 b(jects.)648 1648 y(Man)n(y)27
b(groups)g(are)h(w)n(orking)f(to)n(w)n(ards)f(the)j(design)f(and)g
(implemen)n(tation)h(of)f(mobile)523 1747 y(agen)n(t)37
b(systems)g(\025)h(a)g(go)r(o)r(d)f(review)g(ma)n(y)g(b)r(e)i(found)f
(in)g([12].)f(Most)h(of)g(this)g(w)n(ork)f(has)523 1847
y(fo)r(cussed)32 b(on)g(mec)n(hanisms)f(for)g(migration)g(\()p
Fs(e.g.)j Fz([11]\))d(and)h(on)g(traditional)f(authorisa-)523
1946 y(tion)38 b(and)f(v)n(eri\034cation)g(approac)n(hes)e(suc)n(h)j
(as)f(digital)g(signatures,)f(assuming)h(that)h(an)523
2046 y(agen)n(t's)29 b(en)n(vironmen)n(t)g(is)h(in)h(some)e(senses)h
(the)g(same)g(across)e(hosts.)h(T)-7 b(reating)30 b(en)n(viron-)523
2146 y(men)n(tal)h(c)n(hanges)f(as)h(a)f(phenomenon)h(in)h(their)f(o)n
(wn)g(righ)n(t)f(pro)n(vides)g(a)h(di\033eren)n(t)g(\025)g(and)523
2245 y(in)h(some)e(w)n(a)n(ys)g(more)g(\035exible)i(\025)f(view)g(of)g
(these)g(issues,)g(allo)n(wing)f(them)i(to)f(b)r(e)g(treated)523
2345 y(more)24 b(uniformly)h(within)h(a)f(t)n(yp)r(e)g(framew)n(ork.)f
(Another)h(substan)n(tial)f(b)r(o)r(dy)i(of)f(w)n(ork)f(has)523
2445 y(addressed)h(lo)n(w-lev)n(el)g(asp)r(ects)g(of)i(mobile)f
(systems)g(suc)n(h)g(as)f(c)n(hannel)h(usage[17])e(and)i(en-)523
2544 y(crypted)h(transp)r(ort)e(proto)r(cols[3])g(using)i(t)n(yp)r(e)g
(systems.)f(These)h(e\033orts)f(ma)n(y)g(b)r(e)h(seen)g(as)523
2644 y(part)g(of)h(a)f(trend)g(whic)n(h)h(replaces)e
Fs(ad)31 b(ho)l(c)i Fz(c)n(hec)n(ks)26 b(with)i(ric)n(her)f(t)n(yp)r(e)
g(c)n(hec)n(king.)648 2745 y(The)h(am)n(bien)n(t)h(calculus)f(of)h
(Cardelli)f(and)h(Gordon[6])e(is)i(a)f(particularly)g(in)n(teresting)
523 2845 y(emerging)22 b(formalism)g(for)g(mobilit)n(y)-7
b(.)23 b(An)h(am)n(bien)n(t)e(encapsulates)g(a)h(set)g(of)g(pro)r
(cesses)e(and)523 2945 y(sub-am)n(bien)n(ts)28 b(in)n(to)i(a)f(pac)n(k)
-5 b(age)27 b(whic)n(h)j(ma)n(y)e(migrate)h(through)g(a)g(hierarc)n(h)n
(y)e(according)523 3044 y(to)j(some)g(simple)h(rules.)f(T)-7
b(w)n(o)30 b(t)n(yp)r(e)h(framew)n(orks)d(ha)n(v)n(e)h(b)r(een)i(dev)n
(elop)r(ed)f(on)h(top)f(of)h(the)523 3144 y(original)24
b(un)n(t)n(yp)r(ed)i(system:)f(a)g(con)n(v)n(en)n(tional)e(system)i
(con)n(trolling)f(the)i(t)n(yp)r(es)f(of)h(comm)n(u-)523
3243 y(nications[7])20 b(and)h(a)g(no)n(v)n(el)f(system)g(of)i
(\020mobilit)n(y)e(t)n(yp)r(es\021)7 b([5])20 b(pro)n(viding)g(t)n(yp)r
(e-lev)n(el)g(con)n(trol)523 3343 y(o)n(v)n(er)30 b(ho)n(w)h(an)h(am)n
(bien)n(t)f(ma)n(y)g(mo)n(v)n(e)g(ab)r(out)h(the)g(system.)g(W)-7
b(e)32 b(sp)r(eculate)g(that)g(comm)n(u-)523 3443 y(nication)g(t)n(yp)r
(es)h(are)f(closely)g(related)g(to)g(ions,)h(in)g(the)g(sense)f(that)h
(an)g(ion)f(represen)n(ted)523 3542 y(as)d(an)h(am)n(bien)n(t)f(migh)n
(t)h(add)f(new)h(comm)n(unications)f(\(metho)r(d)h(calls\))f(if)i(op)r
(ened)e(within)523 3642 y(another)e(con)n(text.)g(This)g(is)h(a)f(p)r
(ossible)g(area)f(for)h(future)h(w)n(ork.)648 3743 y(W)-7
b(ork)27 b(on)h(design)f(patterns)h(o\033ers)f(a)h(great)e(man)n(y)i
(useful)g(approac)n(hes)e(to)i(designing)523 3843 y(complex)35
b(systems.)h(It)g(is)g(in)n(teresting)f(to)g(note)h(that)g(man)n(y)f
(patterns)g(simply)h(pro)n(vide)523 3943 y(mec)n(hanisms)27
b(for)g(con)n(trolling)f(b)r(eha)n(vioural)g(up)r(dates)h(and)h
(indirections)f(\025)g(issues)g(whic)n(h)523 4042 y(ma)n(y)h(in)g(man)n
(y)g(cases)g(b)r(e)g(addressed)f(t)n(yp)r(e-safely)h(using)g(ions.)g
(This)g(addresses)f(a)h(ma)5 b(jor)523 4142 y(criticism)30
b(of)h(design)f(patterns,)g(that)g(they)h(add)f(la)n(y)n(ers)f(of)h
(complexit)n(y)g(to)g(applications)523 4242 y(without)e(pro)n(viding)e
(additional)h(la)n(y)n(ers)f(of)h(c)n(hec)n(king.)523
4517 y Ft(8)112 b(Conclusion)523 4725 y Fz(W)-7 b(e)22
b(ha)n(v)n(e)f(describ)r(ed)g(a)g(minimal)h(mo)r(del)g(of)g(ionic)f(t)n
(yp)r(es)h(and)f(sho)n(wn)g(ho)n(w)g(they)h(can)f(mo)r(d-)523
4825 y(el)27 b(some)e(otherwise)h(problematic)f(issues)h(in)h(systems)f
(with)h(dynamic)f(co)r(de)g(completion.)523 4924 y(W)-7
b(e)32 b(sho)n(w)n(ed)f(some)g(applications)g(of)h(the)h(tec)n(hnique)e
(to)h(mobile)g(co)r(de,)g(simple)g(securit)n(y)p eop
%%Page: 16 16
16 15 bop 523 448 a Fz(c)n(hec)n(king,)27 b(delegation)g(and)h(metho)r
(d)h(up)r(date.)f(The)h(uniform)f(treatmen)n(t)f(pro)n(vides)g(suit-)
523 548 y(able)33 b(t)n(yp)r(e)g(guaran)n(tees)e(to)i(man)n(y)f(asp)r
(ects)h(usually)f(addressed)g(using)h(design)g(patterns)523
648 y(or)22 b(fully)i(dynamic)f(t)n(yp)r(e-c)n(hec)n(king.)f(W)-7
b(e)24 b(brie\035y)f(sk)n(etc)n(hed)f(an)h(incomplete)h(em)n(b)r
(edding)f(of)523 747 y(ions)i(in)n(to)h(Ja)n(v)-5 b(a,)24
b(suggesting)g(that)i(the)g(concepts)f(could)h(easily)f(b)r(e)h
(rei\034ed)f(in)h(a)f(practical)523 847 y(programming)g(language.)648
946 y(Existing)f(mo)r(dels)g(of)g(ob)5 b(ject-orien)n(ted)23
b(systems)h(are)f(designed)h(with)h(a)f(static,)g(mono-)523
1046 y(lithic)19 b(system)f(in)h(mind.)g(With)g(distributed)f(systems,)
g(mobile)h(co)r(de)f(and)g(p)r(olicy-con)n(trolled)523
1146 y(access)i(b)r(ecoming)g(more)g(commonplace,)g(these)h(mo)r(dels)f
(are)g(no)h(longer)e(su\036cien)n(tly)i(p)r(o)n(w-)523
1245 y(erful)e(to)h(represen)n(t)e(all)h(the)h(desirable)e(b)r(eha)n
(viours.)g(The)h(main)h(con)n(tribution)e(of)i(this)f(w)n(ork)523
1345 y(is)24 b(to)h(pro)n(vide)e(a)h(simple)g(mo)r(del)h(for)f
(structured)f(b)r(eha)n(vioural)g(c)n(hange)g(whic)n(h)h(accurately)523
1445 y(re\035ects)d(the)h(capabilities,)f(limitations)h(and)f(threats)g
(observ)n(ed)f(in)i(the)g(emerging)f(genera-)523 1544
y(tion)j(of)g(systems)g(and)g(whic)n(h)f(allo)n(ws)g(static)h(and)g
(dynamic)g(mo)r(di\034cations)f(to)h(b)r(e)g(treated)523
1644 y(uniformly)-7 b(.)648 1743 y(T)n(yp)r(e)22 b(c)n(hec)n(king)g(ev)
n(olv)n(ed)g(as)g(a)g(w)n(a)n(y)g(of)h(a)n(v)n(oiding)e(as)i(man)n(y)f
(run-time)h(\020sanit)n(y)f(c)n(hec)n(ks\021)523 1843
y(as)32 b(p)r(ossible.)h(As)f(application)g(domains)g(b)r(ecome)h(more)
f(complex)g(it)h(b)r(ecomes)g(vital)f(to)523 1943 y(encompass)26
b(additional)g(prop)r(erties)f(within)j(the)f(t)n(yp)r(e)g(system,)f(a)
n(v)n(oiding)f(as)h(far)h(as)f(p)r(os-)523 2042 y(sible)k(an)g
(explosion)f(in)h(a)n(v)n(oidable)f(run-time)h(c)n(hec)n(ks)f(\(and,)h
(b)n(y)g(implication,)g(a)n(v)n(oidable)523 2142 y(run-time)38
b(failures\).)g(New)g(v)n(ersions)f(of)h(Ja)n(v)-5 b(a,)37
b(for)h(example,)f(will)i(allo)n(w)e(applications)523
2242 y(to)30 b(de\034ne)g(securit)n(y)g(domains)f(for)h(incoming)f(co)r
(de,)h(meaning)g(that)g(the)h(b)r(eha)n(viour)d(of)i(a)523
2341 y(migrating)h(ob)5 b(ject)33 b(ma)n(y)f(b)r(e)h(radically)e
(a\033ected)i(as)f(it)h(c)n(hanges)e(domains[1].)g(One)i(ma)n(y)523
2441 y(use)26 b(ions)g(to)h(mo)r(del)f(the)h(static)f(exclusions)g
(necessary)e(for)i(a)g(p)r(olicy)-7 b(,)27 b(highligh)n(ting)e(those)
523 2540 y(metho)r(ds)34 b(whic)n(h)f(need)g(con)n(text-sensitiv)n(e)f
(handling.)h(This)h(can)f(suggest)f(di\033eren)n(t)h(de-)523
2640 y(sign)38 b(approac)n(hes,)f(for)h(example)g(separating)f(p)r
(oten)n(tially)h(sensitiv)n(e)g(functions)h(whic)n(h)523
2740 y(manipulate)26 b(\034les)f(from)h(their)g(more)e(general)h(coun)n
(terparts.)f(W)-7 b(e)26 b(are)f(also)f(exploring)h(re-)523
2839 y(\034nemen)n(ts)k(b)n(y)f(whic)n(h)g(the)h(dep)r(endency)g(t)n
(yp)r(e)f(of)g(an)h(ionic)f(t)n(yp)r(e)g(can)g(b)r(e)h(expanded)f(and)
523 2939 y(reduced)f(piecemeal,)g(to)h(pro)n(vide)e(\034ner-grained)g
(con)n(trol)g(o)n(v)n(er)g(ion)h(dep)r(endencies.)648
3039 y(A)32 b(n)n(um)n(b)r(er)g(of)g(implemen)n(tations)g(of)g(ions)g
(are)f(p)r(ossible,)g(and)h(w)n(e)g(ha)n(v)n(e)f(sk)n(etc)n(hed)g(a)523
3138 y(restricted)24 b(mo)r(del)i(close)e(to)h(the)g(spirit)g(of)g(Ja)n
(v)-5 b(a.)24 b(W)-7 b(e)25 b(are)f(exploring)g(other)g(mo)r(dels)h
(using)523 3238 y(the)31 b(V)-7 b(anilla)30 b(language)f(to)r(olkit[8])
h(with)h(a)g(view)f(to)h(determining)f(the)h(exten)n(t)g(to)f(whic)n(h)
523 3337 y(ions)h(pro)n(vide)e(a)i(widely)g(applicable)g(orthogonal)d
(t)n(yp)r(e)k(construction)e(to)h(b)r(e)g(in)n(tegrated)523
3437 y(in)n(to)h(languages)e(for)h(mobile)h(computing.)g(W)-7
b(e)32 b(are)f(also)g(in)n(terested)g(in)i(the)f(in)n(teraction)523
3537 y(of)24 b(ions)f(with)i(nativ)n(e)e(compilation,)h(esp)r(ecially)f
(systems)h(suc)n(h)f(as)h(Harissa[16])d(whic)n(h)j(are)523
3636 y(able)j(to)h(handle)f(dynamic)g(class)g(loading.)523
3877 y Ft(References)561 4036 y Fw(1.)43 b(Secure)180
b(computing)f(with)h(Ja)n(v)l(a:)h(no)n(w)f(and)g(the)g(future.)663
4128 y(h)n(ttp://www.ja)n(v)l(asoft.com/mark)n
(eting/collateral/securit)n(y)-6 b(.h)n(tml,)29 b(1998.)561
4213 y(2.)43 b(Mart\355n)26 b(Abadi)f(and)g(Luca)h(Cardelli.)36
b Fu(A)28 b(the)l(ory)h(of)e(obje)l(cts)p Fw(.)36 b(Springer)25
b(V)-6 b(erlag,)27 b(1996.)561 4298 y(3.)43 b(Mart\355n)31
b(Abadi)g(and)g(Andrew)g(Gordon.)51 b(Secrecy)31 b(b)n(y)f(t)n(yping)g
(in)h(securit)n(y)g(proto)r(cols.)53 b(In)663 4389 y
Fu(The)l(or)l(etic)l(al)21 b(asp)l(e)l(cts)h(of)e(c)l(omputer)h(scienc)
l(e)p Fw(,)e(v)n(olume)e(1243,)i(pages)f(59\02573.)i(Springer-V)-6
b(erlag,)663 4480 y(1997.)561 4565 y(4.)43 b(Gilad)21
b(Brac)n(ha)h(and)e(William)h(Co)r(ok.)27 b(Mixin-based)21
b(inheritance.)26 b(In)20 b Fu(Pr)l(o)l(c)l(e)l(e)l(dings)25
b(of)e(OOP-)663 4657 y(SLA/ECOO'90)p Fw(,)i(1990.)561
4742 y(5.)43 b(Luca)36 b(Cardelli,)i(Giorgio)g(Ghelli,)f(and)e(Andrew)h
(Gordon.)65 b(Mobilit)n(y)37 b(t)n(yp)r(es)e(for)i(mobile)663
4833 y(am)n(bien)n(ts.)42 b(In)29 b Fu(Pr)l(o)l(c)l(e)l(e)l(dings)j(of)
e(the)h(International)h(Confer)l(enc)l(e)g(on)e(A)n(lgebr)l(aic)i(and)e
(L)l(o)l(gic)663 4924 y(Pr)l(o)l(gr)l(amming)p Fw(,)c(1999.)p
eop
%%Page: 17 17
17 16 bop 561 448 a Fw(6.)43 b(Luca)37 b(Cardelli)i(and)e(Andrew)g
(Gordon.)69 b(Mobile)39 b(am)n(bien)n(ts.)68 b(In)37
b(Maurice)h(Niv)l(at,)f(edi-)663 540 y(tor,)32 b Fu(F)-6
b(oundations)34 b(of)e(softwar)l(e)j(scienc)l(e)e(and)h(c)l
(omputational)g(structur)l(es)p Fw(,)h(v)n(olume)30 b(1378.)663
631 y(Springer)25 b(V)-6 b(erlag,)27 b(1998.)561 722
y(7.)43 b(Luca)26 b(Cardelli)h(and)e(Andrew)h(Gordon.)35
b(T)n(yp)r(es)25 b(for)i(mobile)f(am)n(bien)n(ts.)33
b(In)25 b Fu(Pr)l(o)l(c)l(e)l(e)l(dings)30 b(of)663 814
y(the)d(26th)g(A)n(CM)e(Symp)l(osium)h(on)h(Principles)f(of)g(Pr)l(o)l
(gr)l(amming)g(L)l(anguages)p Fw(,)h(pages)e(79\02592,)663
905 y(1999.)561 996 y(8.)43 b(Simon)37 b(Dobson,)h(P)n(addy)g(Nixon,)g
(Vincen)n(t)f(W)-6 b(ade,)38 b(Sotirios)i(T)-6 b(erzis,)39
b(and)f(John)g(F)-6 b(uller.)663 1088 y(V)g(anilla:)22
b(an)f(op)r(en)g(language)h(framew)n(ork.)28 b(In)20
b(Krzysztof)i(Czarnec)n(ki)f(and)g(Ulric)n(h)g(Eisenec)n(k-)663
1179 y(er,)g(editors,)h Fu(Gener)l(ative)j(and)e(c)l(omp)l(onent-b)l
(ase)l(d)k(softwar)l(e)d(engine)l(ering)p Fw(.)f(Springer-V)-6
b(erlag,)663 1270 y(1999.)561 1362 y(9.)43 b(Sophia)31
b(Drossop)r(oulou,)i(Susan)e(Eisen)n(bac)n(h,)h(and)f(Sarfraz)i(Kh)n
(urshid.)50 b(Is)32 b(the)f(Ja)n(v)l(a)h(t)n(yp)r(e)663
1453 y(system)24 b(sound?)34 b Fu(The)l(ory)29 b(and)f(pr)l(actic)l(e)h
(of)e(obje)l(ct)i(systems)p Fw(,)e(5\(1\):3\02524,)i(1999.)523
1544 y(10.)43 b(Matthew)24 b(Flatt,)h(Shriram)e(Krishnam)n(urthi,)g
(and)g(Matthias)i(F)-6 b(elleisen.)33 b(Classes)26 b(and)e(mix-)663
1636 y(ins.)34 b(In)25 b Fu(Pr)l(o)l(c)l(e)l(e)l(dings)30
b(of)d(POPL'98)p Fw(,)f(pages)g(171\025183.)j(A)n(CM)d(Press,)h(1998.)
523 1727 y(11.)43 b(Eric)26 b(Jul,)h(Henry)e(Levy)-6
b(,)25 b(Neil)h(Hutc)n(hinson,)f(and)h(Andrew)f(Blac)n(k.)36
b(Fine-grained)27 b(mobilit)n(y)663 1818 y(in)i(the)f(Emerald)h
(system.)44 b Fu(A)n(CM)30 b(T)-6 b(r)l(ansactions)33
b(on)e(Computer)h(Systems)p Fw(,)f(6\(1\):109\025133,)663
1910 y(1988.)523 2001 y(12.)43 b(Neeran)26 b(Karnik)h(and)f(Anand)g(T)
-6 b(ripathi.)38 b(Design)27 b(issues)h(in)f(mobile-agen)n(t)f
(programming.)663 2092 y Fu(IEEE)h(Concurr)l(ency)p Fw(,)h(6\(3\),)e
(1998.)523 2183 y(13.)43 b(G\374n)n(ther)33 b(Kniesel.)62
b(T)n(yp)r(e-safe)35 b(delegation)h(for)f(run-time)e(comp)r(onen)n(t)g
(adaptation.)62 b(In)663 2275 y Fu(Pr)l(o)l(c)l(e)l(e)l(dings)29
b(of)e(ECOOP'99)p Fw(,)f(pages)g(351\025366.)j(Springer-V)-6
b(erlag,)26 b(1999.)523 2366 y(14.)43 b(Henry)29 b(Lieb)r(erman.)49
b(Using)30 b(protot)n(ypical)h(ob)t(jects)h(to)f(implemen)n(t)d(shared)
j(b)r(eha)n(viour)f(in)663 2457 y(ob)t(ject-orien)n(ted)c(systems.)34
b(In)25 b Fu(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)e(OOPSLA'86)p
Fw(,)f(1986.)523 2549 y(15.)43 b(Ole)36 b(Lehrmann)f(Madsen,)i(Birger)h
(Moller-P)n(edersen,)f(and)f(Kristen)h(Nygaard.)66 b
Fu(Obje)l(ct-)663 2640 y(oriente)l(d)25 b(pr)l(o)l(gr)l(amming)h(in)e
(the)h(BET)-6 b(A)25 b(pr)l(o)l(gr)l(amming)g(language)p
Fw(.)30 b(A)n(ddison-W)-6 b(esley)g(,)21 b(1993.)523
2731 y(16.)43 b(Gilles)19 b(Muller)g(and)f(Ulrik)f(P)n(agh)i(Sc)n(h)n
(ultz.)i(Harissa:)e(a)g(h)n(ybrid)d(approac)n(h)i(to)h(Ja)n(v)l(a)f
(execution.)663 2823 y Fu(IEEE)27 b(Softwar)l(e)p Fw(,)g
(16\(2\):44\02551,)i(1999.)523 2914 y(17.)43 b(Benjamin)18
b(Pierce)i(and)f(Da)n(vide)f(Sangiorgi.)25 b(T)n(yping)19
b(and)f(subt)n(yping)g(for)h(mobile)g(pro)r(cesses.)663
3005 y(In)25 b Fu(L)l(o)l(gic)j(in)f(Computer)h(Scienc)l(e)p
Fw(,)f(1993.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
