<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simon Dobson (Posts about applications)</title><link>https://simondobson.org/</link><description></description><atom:link href="https://simondobson.org/categories/applications.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2024 &lt;a href="mailto:simoninireland@gmail.com"&gt;Simon Dobson&lt;/a&gt; </copyright><lastBuildDate>Tue, 02 Apr 2024 15:59:49 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Loving Common Lisp, or the savvy programmer's secret weapon</title><link>https://simondobson.org/2024/04/02/loving-common-lisp-or-the-savvy-programmers-secret-weapon/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;div id="outline-container-org237bc98" class="outline-2"&gt;
&lt;h2 id="org237bc98"&gt;Loving Common Lisp, or the savvy programmer's secret weapon&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org237bc98"&gt;
&lt;p class="floater"&gt;
&lt;img src="https://simondobson.org/attachments/7a/bd1498-3024-4f11-91a7-97f3e99084d7/screenshot.png" alt="nil"&gt;
&lt;/p&gt;

&lt;p&gt;
Mark Watson.  &lt;i&gt;&lt;a href="https://leanpub.com/lovinglisp"&gt;Loving Common Lisp, or the Savvy Programmer’s Secret
Weapon&lt;/a&gt;&lt;/i&gt;. Leanpub. 2023.
&lt;/p&gt;

&lt;p&gt;
While pitched as a way of sharing the author's enthusiasm for Lisp
(which really shines through), this book is really a deep
demonstration in using Lisp in modern applications – from web
APIs and the semantic web to deep learning, large language models,
and chatbots.
&lt;/p&gt;

&lt;p&gt;
In some ways, like many other Lisp books, it's really two books in
one. The first chapters are introductory – and to be perfectly
honest could be dispensed with, as they're inadequate as a proper
introduction and there are far better introductions out there. The
later chapters focus on applications, and provide the real value.
One could criticise them as often tying-together tools in other
languages, with the Lisp code basically being glue; but that's a
very effective way of leveraging all the code and services out
there, and is an important technique for Lisp programmers too.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>applications</category><category>lisp</category><category>project:lisp-bibliography</category><guid>https://simondobson.org/2024/04/02/loving-common-lisp-or-the-savvy-programmers-secret-weapon/</guid><pubDate>Tue, 02 Apr 2024 15:57:38 GMT</pubDate></item><item><title>Lisp in space</title><link>https://simondobson.org/2024/04/02/lisp-in-space/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;div id="outline-container-org9238410" class="outline-2"&gt;
&lt;h2 id="org9238410"&gt;Lisp in space&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9238410"&gt;
&lt;p&gt;
&lt;a href="https://corecursive.com/lisp-in-space-with-ron-garret/"&gt;Lisp in space&lt;/a&gt; (podcast, 38 minutes)
&lt;/p&gt;

&lt;p&gt;
An interview on the Corecursive podcast with Ron Garret.
&lt;/p&gt;

&lt;p&gt;
In 1988 (when, for context, I was in the second year of my BSc)
Garret started working on autonomous navigation software for
&lt;a href="https://en.wikipedia.org/wiki/Sojourner_(rover)"&gt;Sojourner&lt;/a&gt;, NASA's first Mars rover, which flew in 1997. He used Lisp
to do planning, essentially developing an entire domain-specific
language for autonomous vehicles. The project was never flown, as
NASA opted for a far less ambitious approach to driving to rovers –
a decision that Garret now considers to have been the correct one.
&lt;/p&gt;

&lt;p&gt;
But that isn't the end of the story, because Garret then went on
to develop an autonomous Remote Agent controller for the &lt;a href="https://en.wikipedia.org/wiki/Deep_Space_1"&gt;Deep
Space 1&lt;/a&gt; technology demonstration mission that performed asteroid
and comet fly-bys. Without spoiling to story, the spacecraft flies
with a full Lisp system onboard, and Garret gets to interact with
its REPL at a distance of 30 light-minutes &lt;i&gt;via&lt;/i&gt; the Deep Space
Network – surely the longest latency of any REPL session ever!
&lt;/p&gt;

&lt;p&gt;
It's an fascinating insight into both the potentials of Lisp and
the political difficulties that using a non-standard development
language can engender.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>applications</category><category>lisp</category><category>project:lisp-bibliography</category><guid>https://simondobson.org/2024/04/02/lisp-in-space/</guid><pubDate>Tue, 02 Apr 2024 15:32:56 GMT</pubDate></item><item><title>How Lisp is designing nanotechnology</title><link>https://simondobson.org/2024/03/15/how-lisp-is-designing-nanotechnology/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;div id="outline-container-org3974158" class="outline-2"&gt;
&lt;h2 id="org3974158"&gt;How Lisp is designing nanotechnology&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3974158"&gt;
&lt;p&gt;
&lt;a href="https://www.youtube.com/watch?v=fytGL8vzGeQ"&gt;How Lisp is designing nanotechnology&lt;/a&gt; (video, 52 minutes).
&lt;/p&gt;

&lt;p&gt;
An interview on the &lt;a href="https://www.youtube.com/@DeveloperVoices"&gt;Developer Voices&lt;/a&gt; podcast with &lt;a href="https://www.schafmeistergroup.com/"&gt;Prof Christian
Schafmeister&lt;/a&gt; on designing enzymes using a custom dialect of Lisp
to control computational chemistry libraries.
&lt;/p&gt;

&lt;p&gt;
He initially started from an idea based on CAD applications
(written in Smalltalk), but rapidly realised there were too many
possible components and combinations to work with graphically and
so started treating it as a language-design problem – and
designed a custom Lisp based on &lt;a href="https://ecl.common-lisp.dev/"&gt;ECL&lt;/a&gt;. Lisp provides simplicity and
efficiency, as well as being a "forever" language in which
software keeps working over the long term.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>applications</category><category>lisp</category><category>project:lisp-bibliography</category><guid>https://simondobson.org/2024/03/15/how-lisp-is-designing-nanotechnology/</guid><pubDate>Fri, 15 Mar 2024 19:19:15 GMT</pubDate></item><item><title>Lisp for the web</title><link>https://simondobson.org/2024/03/10/lisp-for-the-web/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;div id="outline-container-org81ce847" class="outline-2"&gt;
&lt;h2 id="org81ce847"&gt;Lisp for the web&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org81ce847"&gt;
&lt;p class="floater"&gt;
&lt;img src="https://simondobson.org/attachments/1d/7ec1a6-7ac8-4088-8d51-8affdd18f3e7/screenshot.png" alt="nil"&gt;
&lt;/p&gt;

&lt;p&gt;
Adam Tornhill.  &lt;i&gt;&lt;a href="http://leanpub.com/lispweb"&gt;Lisp for the Web&lt;/a&gt;&lt;/i&gt;. Leanpub. 2015.
&lt;/p&gt;

&lt;p&gt;
A short, practical guide to build a dynamic web site entirely
using Common Lisp. Makes extensive use of several libraries,
including the intriguingly-named &lt;a href="https://edicl.github.io/hunchentoot/"&gt;hunchentoot&lt;/a&gt; web server (named
after a never-staged musical written by Frank Zappa), the &lt;a href="https://edicl.github.io/cl-who/"&gt;CL-WHO&lt;/a&gt;
HTML generator, and – perhaps most interesting – the &lt;a href="https://cliki.net/Parenscript"&gt;Parenscript&lt;/a&gt;
Lisp to Javascript compiler.
&lt;/p&gt;

&lt;p&gt;
One gain from using Lisp is the ability to wrap-up standard
constructions like page templates as macros. Other than this, it's
hard to assess whether the gains are all that significant. One
interesting point is that the whole development occurs in Lisp, so
there's no cognitive dissonance between writing the back-end and
the front-end: essentially the same argument for using &lt;a href="https://nodejs.org/"&gt;node.js&lt;/a&gt; as
a back-end framework. While Parenscript isn't a fully-featured
Lisp-in-the-browser it again can benefit from macros and other
features. There's a throwaway comment about linking it to &lt;a href="https://jquery.com/"&gt;jQuery&lt;/a&gt;,
although that isn't demonstrated in practice: it feels intriguing,
though, especially if there's a way to represent jQuery
functionality idiomatically in Lisp.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>applications</category><category>lisp</category><category>project:lisp-bibliography</category><guid>https://simondobson.org/2024/03/10/lisp-for-the-web/</guid><pubDate>Sun, 10 Mar 2024 10:28:45 GMT</pubDate></item></channel></rss>