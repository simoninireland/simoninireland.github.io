<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simon Dobson (Posts about pervasive computing)</title><link>https://simondobson.org/</link><description></description><atom:link href="https://simondobson.org/categories/pervasive-computing.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2024 &lt;a href="mailto:simoninireland@gmail.com"&gt;Simon Dobson&lt;/a&gt; </copyright><lastBuildDate>Wed, 08 May 2024 15:57:24 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>A non-prophecy from ten years ago</title><link>https://simondobson.org/2013/09/25/nonprophecy/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;Something I said ten years ago comes back to not haunt me: in fact, I was quite pedestrian about the whole thing.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;My friend Rich was house-cleaning and came across an interview that I did with the Irish media about ten years ago, while we were running our company, Aurium. One thing really jumped out at him was the answer I gave to one particular question:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q:&lt;/strong&gt; What will we be using to access the Internet 10 years from now?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; I don't think we'll even think about it in those terms. It's a bit like asking what sort of device you use to access the telephone network. In 10 years the internet will be so ubiquitous that we won't even think about it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The interview" src="https://simondobson.org/images/posts/20130925-paper.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I remember giving this interview, and it feels weird in a number of ways. Firstly, when you see an "expert" being interviewed in a newspaper, don't assume that he's there because of his expertise. He could simply be a randomer with a good PR firm, which is what I was: the article was "placed" as part of our public relations campaign. Secondly, I was right in terms of where the technology was going, but that wasn't due to any vision on my part: it was simply a function of being part of the development of that technology and seeing from the inside where it &lt;em&gt;could&lt;/em&gt; go. There are plenty of alternative futures where things happened differently and the internet didn't take off as it did. Had we had a major security crisis or breach of privacy in the first few years, that might have killed people's confidence enough to damp-down the uptake.&lt;/p&gt;
&lt;p&gt;What really struck me, though, was exactly how pervasive the technology &lt;em&gt;did&lt;/em&gt; become. As it happens I'm in London on business with my colleague Graeme, and it's instructive to look at all the things we did on the internet -- and indeed from mobile gadgets. Firstly, I checked-in on the British Airways cellphone app and so didn't need a printed boarding pass. (This is an application we first suggested ten years ago, incidentally: a boarding pass is just a token, so why not text someone a long number to identify themselves with?) Then we arrived not knowing where the hotel was, but a combination of the Tube Map app and &lt;a href="http://maps.google.com" target="_blank"&gt;Google Maps&lt;/a&gt; soon directed us &lt;em&gt;via&lt;/em&gt; train and foot, from Gatwick airport to Pimlico. We looked up places to drink and a place for dinner the next day using &lt;a href="http://www.tripadvisor.co.uk/" target="_blank"&gt;TripAdvisor&lt;/a&gt;, again navigating there with Google Maps, and made recommendations for the various places for other travellers. (Oh, and incidentally checked in for the return flight while sat in the pub -- very civilised, I must say.) We found a coffee shop while we were waiting for our meeting, which itself took place in a venue whose location we also didn't know relative to our hotel. I collected the different bookings and details in &lt;a href="https://www.tripit.com/" target="_blank"&gt;TripIt&lt;/a&gt;, which shared them into my Google Calendar so I didn't have to take note of them. And I took some pictures and shared them on &lt;a href="http://www.facebook.com" target="_blank"&gt;Facebook&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But actually the most surprising thing isn't the technology, or the mobile device, or the fact that it all actually works together in practice: it's that &lt;em&gt;real people actually do it&lt;/em&gt;, and I don't think I'm unique in using all this mobile internet technology when travelling. We pretty much take for granted the idea of finding our way in a new place without preparation: neither Graeme nor I ever even &lt;em&gt;thought&lt;/em&gt; about how we'd find the hotel or the meeting venue beforehand, we just got up and did it.&lt;/p&gt;
&lt;p&gt;Looking back, I'm not surprised we (the technology community) got the technology to work; I'm not even really surprised at the availability of mobile internet and a load of apps to make use of it; but I must confess to being slightly surprised that at the acceptance of all the gadgetry amongst the general population, enough to generate an ecosystem of companies who work together and create more value from their interoperability. It's something we always said would happen, but it's quite strange to see it in operation, and it's a positive achievement we shouldn't forget about.&lt;/p&gt;</description><category>internet</category><category>pervasive computing</category><category>press</category><guid>https://simondobson.org/2013/09/25/nonprophecy/</guid><pubDate>Wed, 25 Sep 2013 14:48:41 GMT</pubDate></item><item><title>Contextual processes</title><link>https://simondobson.org/2010/06/18/contextual-processes/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;Context-aware systems are intended to follow and augment user-led, real-world processes. These differ somewhat from traditional workflow processes, but share some characteristics. Might the techniques used to implement business processes &lt;em&gt;via&lt;/em&gt; web service orchestration fit into the context-aware landscape too?

&lt;!--more--&gt;These ideas arose as a result of discussions at the &lt;a href="http://www.pmmps.org"&gt;PMMPS&lt;/a&gt; workshop at &lt;a href="https://simondobson.org/2010/05/impressions-pervasive-2010/"&gt;PERVASIVE 2010 in Helsinki&lt;/a&gt;. In particular, I was thinking about comments &lt;a href="http://aquigley.blogspot.com/2010/04/april-2009-keynote-talk-ides-for.html"&gt;Aaron Quigley made in his keynote&lt;/a&gt; about the need to build platforms and development environments if we're to avoid forever building just demos. The separation of function from process seems to be working in the web world: might it work in the pervasive world too?

In building a pervasive system we need to integrate several components:
&lt;/p&gt;&lt;ol&gt;
    &lt;li&gt;A collection of &lt;em&gt;sensors&lt;/em&gt; that allow us to observe users in the real world&lt;/li&gt;
    &lt;li&gt;A &lt;em&gt;user&lt;/em&gt; or &lt;em&gt;situation model&lt;/em&gt; describing what the users are supposed to be doing, in terms of the possible observations we might make and inferences we might draw&lt;/li&gt;
    &lt;li&gt;A &lt;em&gt;context model&lt;/em&gt; that brings together sensor observations and situations, allowing us to infer the latter from a sequence of the former&lt;/li&gt;
    &lt;li&gt;Some &lt;em&gt;behaviour&lt;/em&gt; that's triggered depending on the situation we believe we're observing&lt;/li&gt;
&lt;/ol&gt;
Most current pervasive systems have quite simple versions of all these components. The number of sensors is often small -- sometimes only one or two, observing one user. The situation model is more properly an &lt;em&gt;activity model&lt;/em&gt; in that it classifies a user's immediate current activity, independently of any other activity at another time. The context model encapsulates a mapping from sensors to activities, which then manifest themselves in a activating or deactivating a single behaviour. Despite their simplicity, such systems can perform a lot of useful tasks.

However, pervasive activities clearly live on a timeline: you leave home &lt;em&gt;and then&lt;/em&gt; walk to work &lt;em&gt;and then&lt;/em&gt; enter your office &lt;em&gt;and then&lt;/em&gt; check your email, and so forth. One can treat these activities as independent, but that might lose continuity of behaviour, when what you want to do depends on the route by which you got to a particular situation. Alternatively we could treat the timeline as a process, and track the user's progress along it, in the manner of an office workflow.

Of course the problem is that users don't actually follow workflows like this -- or, rather, they tend to interleave actions, perform them in odd orders, leave bits out, drop one process and do another before picking-up the first (or not), and so on. So pervasive workflows aren't at all like "standard" office processes. They aren't discriminated from &lt;em&gt;other&lt;/em&gt; workflows (and non-workflow activities) happening simultaneously in the same space, with the same people and resources involved. In some simple systems the workflow actually is "closed", for example computer theatre (Pinhanez, Mase and Bobick. Interval scripts: a design paradigm for story-based interactive systems., Proceedings of CHI'97. 1997.) -- but in most cases its "open". So the question becomes, how do we describe "loose" workflows in which there is a sequence of activities, each one of which reinforces our confidence in later ones, but which contain noise and extraneous activities that interfere with the inferencing?

There are several formalisms for describing sequences of activities. The one that underlies Pinhanez' work mentioned above is Allen algebra (Allen and Ferguson. Actions and events in interval temporal logic. Journal of Logic and Computation &lt;strong&gt;4&lt;/strong&gt;(5), pp.531--579. 1994.) which provides a notation for specifying how intervals of time relate: an interval &lt;em&gt;a&lt;/em&gt; occurs strictly before another &lt;em&gt;b&lt;/em&gt;, for example, which in turn contains wholly within it another interval &lt;em&gt;c&lt;/em&gt;. It's easy to see how such a process provides a model for how events from the world &lt;em&gt;should&lt;/em&gt; be observed: if we see that &lt;em&gt;b&lt;/em&gt; has ended, we can infer that &lt;em&gt;c&lt;/em&gt; has ended also because we know that &lt;em&gt;c&lt;/em&gt; is contained within &lt;em&gt;b&lt;/em&gt;, and so forth. We can do this if we don't -- or can't -- directly observe the end of &lt;em&gt;c&lt;/em&gt;. However, this implies that we can specify the relationships between intervals precisely. If we have multiple possible relationships the inferencing power degrades rapidly.

Another way to look at things is to consider what "noise" means. In terms of the components we set out earlier, noise is the observation of events that don't relate to the process we're trying to observe. Suppose I'm trying to support a "going to work" process. If I'm walking to work and stop at a shop, for example, this doesn't interfere with my going to work -- it's "noise" in the sense of "something that happened that's non-contradictory of what we expected to see". On the other hand if, after leaving the shop, I go home again, that might be considered as "not noise", in the sense of "something that happened that contradicts the model we have of the process".&lt;em&gt;&lt;/em&gt; As well as events that support a process, we also have events that contradict it, and events that provide no information.

Human-centred processes are therefore stochastic, and we need a stochastic process formalism. I'm not aware of any that really fit the bill: process algebras seem too rigid. Markov processes are probably the closest, but they're really designed to capture frequencies with which paths are taken rather than detours and the like. Moreover we need to enrich the event space so that observations support or refute hypotheses as to which process is being followed and where we are in it. This is rather richer than is normal, where events are purely confirmatory. In essence what we have is &lt;em&gt;process as hypothesis&lt;/em&gt; in which we try to confirm that this process is indeed happening, and where we are in it, using the event stream.

It's notable that we can describe a process separately from the probabilities that constrain how it's likely to evolve, though. That suggests to me that we might need an approach like &lt;a href="http://en.wikipedia.org/wiki/Business_Process_Execution_Language"&gt;BPEL&lt;/a&gt;, where we separate the description of the process from the actions we take as a result, and also form the ways in which we move the process forward. In other words, we have a description of &lt;em&gt;what it means&lt;/em&gt; to go to work, expressed separately from &lt;em&gt;how&lt;/em&gt; we confirm that this is what's being observed in terms of sensors and events, and separated further from &lt;em&gt;what happens&lt;/em&gt; as a result of this process being followed. That soundsÂ  a lot easier than it is, because some events are confirmatory and some aren't. Furthermore we may have several processes that can be supportedÂ  by observations up to a point and then diverge: going to work and going shopping are pretty similar until I go into a shop, and/or until I leave the shop and don't go to work. How do we handle this? We could enforce common-prefix behaviour, but that breaks the separation between process and action. We could insist on "undo" actions for "failed", no-longer-supported-by-the-observations processes, which severely complicates programming and might lead to interactions between different failed processes. Clearly there's something missing from our understanding of how to structure more complex, temporally elongated behaviours that'll need significant work to get right.</description><category>context</category><category>pervasive computing</category><category>programming</category><category>web services</category><guid>https://simondobson.org/2010/06/18/contextual-processes/</guid><pubDate>Fri, 18 Jun 2010 05:00:53 GMT</pubDate></item><item><title>Impressions of Pervasive 2010</title><link>https://simondobson.org/2010/05/21/impressions-pervasive-2010/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;I've spent this week at the &lt;a href="http://www.pervasive2010.org"&gt;Pervasive 2010 conference&lt;/a&gt; on pervasive computing, along with the &lt;a href="http://www.pmmps.org"&gt;Programming Methods for Mobile and Pervasive Systems&lt;/a&gt; workshop I co-arranged with &lt;a href="http://www.dominicduggan.org/"&gt;Dominic Duggan&lt;/a&gt;. Both events have been fascinating.

&lt;!--more--&gt;The PMMPS workshop is something we've wanted to run for a while, bringing together the programming language and pervasive/mobile communities to see where languagesÂ  ought to go. We received a diverse set of submissions: keynotes from Roy Campbell and Aaron Quigley, talks covering topics including debugging, software processes, temporal aspects (me), context collectionvisual programming ang a lot more. Some threads emerge quite strongly, but I think they'll have to wait for a later post after I've collected my thoughts a bit more.

The main conference included manyÂ  papers so good that it seems a shame to single any out. The following are simply those that spoke most strongly to me:

&lt;strong&gt;Panorama and Cascadia.&lt;/strong&gt; The University of Washington presented work on a "complex" events system, combining lower-level raw events. Simple sensor events are noisy and often limited in their coverage. Cascadiais an event service that allows complex events to be defined over the raw event stream, using Bayesian particle filters to interpolate missing events or those from uncovered areas: so it's possible in principle to inferentiallyÂ  "sense" someone's location even in places without explicit sensor coverage, using a model of the space being observed. This is something that could be generalised to other model-based sensor streams. The Panorama tool allows end-users to specify complex events by manipulating thresholds, which seems little unsatisfactory: there's no principled way to determine the thresholds, and it still begs the question of how to program with the uncertain event stream. Still, I have to say this is the first complex event system I've seen that I actually believe could work.

&lt;strong&gt;Eyecatcher.&lt;/strong&gt; How do you stop people hiding from a camera, or playing-up to it? Work from Ochanomizu University in Japan places a small display on top of the camera, which can be used to present images to catch the subject's attention and to suggest poses or actions. (Another version barks like a dog, to attract your pet's attention.)I have to say this research is very Japanese, a very unusual but perceptive view of the world and the problems appropriate for research.

&lt;strong&gt;Emotion modeling&lt;/strong&gt;. Jennifer Healey from Intel described how to monitor and infer emotions from physiological data. The main problem is that there is no common language for describing emotions -- "anxious" is good for some and bad for others -- so getting ground truth is hard even given extensive logging.

&lt;strong&gt;Indoor location tracking for non-experts&lt;/strong&gt;. More University of Washington work, this time looking at an indoor location system simple enough to be used by non-experts such as rehabilitation therapists. They used powerline positioning, injecting different frequencies into a home's power network and detecting the radiated signal using what are essentially AM radios. Interestingly one of the most important factors was the aesthetics of the sensors: people don't want ugly boxes in their home.

&lt;strong&gt;Transfer learning&lt;/strong&gt;. Tim van Kasteren of the University of Amsterdam has generated one of the most useful smart-home data sets, used across the community (including by several of my students). He reported experiences with transfering machine-learned classifiers from one sensor network to another, by mapping the data into a new, synthetic feature space. He also used the known distribution of features from the first network to condition the learning algorithhm in the second, to improve convergence.

&lt;strong&gt;Common Sense&lt;/strong&gt;. Work from UC Berkeley on a platform for participative sensing: &lt;a href="http://www.communitysensing.org/"&gt;CommonSense&lt;/a&gt;. The idea is to place environmental sensors onto commodity mobile devices, and give them to street cleaners and others "out and about" in a community. The great thing about this is that is gives information on pollution and the like to the communities themselves, directly, rather than mediated through a (possibly indifferent or otherwise) State agency.

&lt;strong&gt;Energy-aware data traffic management&lt;/strong&gt;. I should add the disclaimer that is work by my colleague, Mirco Musolesi of the University ofÂ  St Andrews. Sensor nodes need to be careful about the energy they use to transmit data back to their base station. This work compares a range of strategies that trade-off the accuracy of returned data with the amount of traffic exchanged and so the impact on the nodoe's battery. This is //really// important for environmental sensing, and makes me think about further modifying the models to account for what's being sensed to trade-off information content as well.

&lt;strong&gt;Tutorials&lt;/strong&gt; AJ Brush did a wonderful tutorial on how to do user surveys. This is something we've done ourselves, and it was great to see the issues nailed-down -- along with war stories of how to plan and conduct a survey for greatest validity and impact. Equally, John Krumm did a fantastic overview of signal processing, particle filters, hidden Markov models and the like that make the maths &lt;em&gt;far&lt;/em&gt; more accessible than it normally is. Adrian Friday heroically took the graveyard slot with experiences and ideas about system support for pervasive systems.

This is the first large conference I've attended for a while, for various reasons, and it's been a great week both scientifically and socially. The organisers at the University of Helsinki deserve an enormous vote of thanks for their efforts. Pervasive next year will be in San Francisco, an I'll definitely be there -- hopefully with a paper to present :-)&lt;/p&gt;</description><category>conference</category><category>pervasive computing</category><category>programming</category><category>review</category><guid>https://simondobson.org/2010/05/21/impressions-pervasive-2010/</guid><pubDate>Fri, 21 May 2010 05:00:02 GMT</pubDate></item></channel></rss>