<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simon Dobson (Posts about style-guide)</title><link>https://simondobson.org/</link><description></description><atom:link href="https://simondobson.org/categories/style-guide.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2025 &lt;a href="mailto:simoninireland@gmail.com"&gt;Simon Dobson&lt;/a&gt; </copyright><lastBuildDate>Fri, 31 Jan 2025 08:32:58 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Lisp: Style and design</title><link>https://simondobson.org/2025/01/31/lisp-style-and-design/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;div id="outline-container-org07a794e" class="outline-2"&gt;
&lt;h2 id="org07a794e"&gt;Lisp: Style and design&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org07a794e"&gt;
&lt;p class="floater"&gt;
&lt;img src="https://simondobson.org/attachments/da/4751c9-60cc-4acc-bfd3-ad7d50aa536a/lisp-style-design.jpg" alt="nil"&gt;
&lt;/p&gt;

&lt;p&gt;
Molly Miller and Eric Benson. &lt;i&gt;Lisp: Style and Design&lt;/i&gt;. Digital Press.
ISBN 978-0135384220. 1990.
&lt;/p&gt;

&lt;p&gt;
A book that would serve as a primer for someone tackling a
significant piece of programming for the first time.
&lt;/p&gt;

&lt;p&gt;
The style is a bit stiff and occasionally slightly patronising,
definitely positioned as being from senior to junior programmers.
The depth of the material is variable: I found the treatment of
macros quite superficial, not helped by the examples generating
questionable code. It also places relatively little emphasis on
CLOS and generic functions, which would get more space in a more
modern treatment..
&lt;/p&gt;

&lt;p&gt;
The best chapters are those on debugging and (especially)
performance engineering, which dig into the interactive tools
generally available within Lisp and give a good end-to-end
description of the use of &lt;code&gt;declare&lt;/code&gt; forms to aid compiler
optimisations.
&lt;/p&gt;

&lt;p&gt;
But again the book's age shows. It predates the obsessive
relationship that many modern programmers have with unit testing
and test automation, treating testing as an interactive activity
alongside debugging rather than as a core and permanent part of
program development and maintenance.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>lisp</category><category>project:lisp-bibliography</category><category>style-guide</category><guid>https://simondobson.org/2025/01/31/lisp-style-and-design/</guid><pubDate>Fri, 31 Jan 2025 08:27:35 GMT</pubDate></item></channel></rss>