<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simon Dobson (Posts about sensor networks)</title><link>https://simondobson.org/</link><description></description><atom:link href="https://simondobson.org/categories/sensor-networks.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2024 &lt;a href="mailto:simoninireland@gmail.com"&gt;Simon Dobson&lt;/a&gt; </copyright><lastBuildDate>Sat, 06 Jan 2024 23:00:10 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Citizen sensing with Arduino</title><link>https://simondobson.org/2018/05/24/citizen-sensing-with-arduino/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;Introducing some notes on low-power Arduino programming.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;In 2013 I did a summer project on using the &lt;a href="http://arduino.cc"&gt;Arduino&lt;/a&gt; as a platform for "citizen sensing". This rapidly became an exploration of how to create hardware and software that can do sensing while operating in a very low-power regime, such as one would need for an environmental sensor.&lt;/p&gt;
&lt;p&gt;There were several results from this project -- one of which &lt;em&gt;wasn't&lt;/em&gt; an actual solution to the motivating problem I'd come up with. However, it did generate a lot of notes about low-power Arduino programming, both for hardware and software, and a software library that embodies some of them&lt;/p&gt;
&lt;p&gt;I recently decommissioned the web site I was using to host this content, so I've ported it onto my main blog as a collection of &lt;a href="https://simondobson.org/development/projects/citizen-sensing/"&gt;research and development notes&lt;/a&gt; in case it's still of interest to anyone.&lt;/p&gt;</description><category>arduino</category><category>hardware</category><category>sensor networks</category><guid>https://simondobson.org/2018/05/24/citizen-sensing-with-arduino/</guid><pubDate>Thu, 24 May 2018 12:26:34 GMT</pubDate></item><item><title>PhD position in proximal sensing available at UCD Dublin</title><link>https://simondobson.org/2017/05/10/proximal-sensing-ucd/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;A PhD position is available at UCD, my old employer, int he area of location sensing.

&lt;!--more--&gt;
&lt;/p&gt;&lt;h3&gt;Ph.D. Studentship Available&lt;/h3&gt;
&lt;strong&gt;Proximal Sensing&lt;/strong&gt;
&lt;strong&gt;University College Dublin, Ireland&lt;/strong&gt;

A Ph.D. studentship is now available in the School of Computer Science, University College Dublin, Ireland. The objective of the Ph.D. research project is to develop transformative algorithms for proximal sensing in outdoor environments using active and passive technologies, including LIDAR, imaging, and UWB radar. The research intersects the fields of image processing, digital signal processing, and machine learning.

The project is part of a larger research programme, CONSUS, which brings together the Schools of Computer Science, Agriculture and Food Science at UCD and Origin Enterprises Plc. The programme is focused on the development of novel precision agriculture techniques for enhanced crop production. CONSUS is jointly funded by Science Foundation Ireland and Origin Enterprises Plc.

The successful candidate will have obtained, or will expect to obtain, a 1st class or 2.1 honours B.Sc. or B.Eng. degree in computer science, electronic engineering, or a related discipline. The successful candidate will have the ability to work both independently and as part of a multi-disciplinary team. The successful candidate will have excellent problem solving and communications skills, as well as an on-going commitment to research. A M.Sc. or M.Eng. degree or commercial experience in a relevant area is an advantage. Prior knowledge of the research topics associated with the project is an advantage.

The Ph.D. position is funded for 4 years. Funding includes payment of a tax-free student stipend plus SFI fees contribution. The starting date for the position is September 2017 or as soon as possible thereafter.

A full CV giving details of courses completed, marks obtained, relevant experience, and the names of two referees should be sent to:

Assoc. Prof. Chris Bleakley
School of Computer Science
University College Dublin
Belfield, Dublin 4, Ireland.

Telephone +35317162915
Email &lt;a class="moz-txt-link-abbreviated" href="mailto:chris.bleakley@ucd.ie"&gt;chris.bleakley@ucd.ie
&lt;/a&gt;Web &lt;a class="moz-txt-link-freetext" href="http://goo.gl/bP7qWw"&gt;http://goo.gl/bP7qWw&lt;/a&gt;</description><category>jobs</category><category>phd</category><category>sensor networks</category><guid>https://simondobson.org/2017/05/10/proximal-sensing-ucd/</guid><pubDate>Wed, 10 May 2017 08:01:25 GMT</pubDate></item><item><title>3-year postdoctoral researcher post available</title><link>https://simondobson.org/2017/05/09/s4-postdoc/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;As part of the Science of Sensor Systems Software programme we have a 3-year postdoc post available.

&lt;!--more--&gt;

The &lt;a href="http://www.dcs.gla.ac.uk/research/S4"&gt;S4 programme&lt;/a&gt; aims to develop a unifying science, across the breadth of mathematics, computer science and engineering, that will let developers engineer for the uncertainty and ensure that their systems and the information they provide is resilient, responsive, reliable, statistically sound and robust. The vision is smarter sensor based systems in which scientists and policy makers can ask deeper questions and be confident in obtaining reliable answers, so the programme will deliver new principles and techniques for the development and deployment of verifiable, reliable, autonomous sensor systems that operate in uncertain, multiple and multi-scale environments.

S4 is funded by EPSRC as a five-year, £5.2M Programme Grant. It brings together four of the UK’s leading research teams in sensor systems, their design, analysis, deployment, and evaluation. Led overall by Prof Muffy Calder at the University of Glasgow, the other academic collaborators are the University of St Andrews (Prof Simon Dobson), the University of Liverpool (Prof Michael Fisher), and Imperial College (Prof Julie McCann). S4 also includes a portfolio of industrial partners ranging from start-up SMEs to multinational companies and State agencies.

St Andrews leads the work on adaptive systems engineering, especially on how systems need to change as time progresses, the system components fail, and goals change. We are looking for someone to join us to work on how to program adaptive sensor systems. A strong track record in sensor systems, programming languages, data analytics, or another related area is essential, as is an ability to work within a larger team using formal methods, advanced statistics, and novel programming languages and approaches

You can find full application details &lt;a href="https://www.vacancies.st-andrews.ac.uk/ViewVacancyV2.aspx?enc=mEgrBL4XQK0+ld8aNkwYmIC6qnEzeM4xd5XT+e/5IQxO+OlhRndjgKS6p4BoRNl+UNu83Iiv8J1lWOCFqijDqZx6/oDoGWuUe3/xaL5So5YSmMSr2o2hu+3HhHpd8mWDap8m2c0rxOmXWk95vI/KJw=="&gt;here&lt;/a&gt;.

 &lt;/p&gt;</description><category>jobs</category><category>s4</category><category>sensor networks</category><guid>https://simondobson.org/2017/05/09/s4-postdoc/</guid><pubDate>Tue, 09 May 2017 13:33:14 GMT</pubDate></item><item><title>Call for papers: Midsens 2012</title><link>https://simondobson.org/2012/07/11/call-papers-midsens-2012/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;The Seventh International Workshop on Middleware Tools, Services and Run-time Support for Sensor Networks (&lt;a href="http://www.midsens.org/" target="_blank"&gt;MidSens’12&lt;/a&gt;) will be co-located with &lt;a href="http://middleware2012.cs.mcgill.ca/"&gt;Middleware 2012&lt;/a&gt; (December 3rd - 7th, 2012) in Montreal, Canada

&lt;!--more--&gt;

The aim of MidSens'12 is to stimulate research in the specific domain of middleware for sensor networks. The particular focus of MidSens'12 is the realization of &lt;strong&gt;multi-user, multi-purpose and federated sensing platforms&lt;/strong&gt; that are capable of supporting next-generation application scenarios such as &lt;strong&gt;smart cities&lt;/strong&gt;. Along with the core topic of middleware architectures, services and tool support, MidSens'12 will also seek papers describing novel programming languages, run-time support and relevant experience reports. MidSens'12 will investigate how middleware support can relieve developers from low-level, platform specific concerns, while enabling the optimal exploitation of heterogeneous resources to create &lt;strong&gt;sensing infrastructures of massive scale&lt;/strong&gt;.

Effectively developing, deploying and managing sensor network platforms requires supporting middleware services, tools and run-time support. MidSens'12 welcomes papers on the following research topics:
&lt;/p&gt;&lt;ul&gt;
    &lt;li&gt;Middleware Tools and Architectures:&lt;/li&gt;
&lt;ul&gt;
    &lt;li&gt;Software architectures for sensor networks&lt;/li&gt;
    &lt;li&gt;Novel programming abstractions for large-scale sensor networks&lt;/li&gt;
    &lt;li&gt;Architectures to combine mobile devices and sensor motes&lt;/li&gt;
    &lt;li&gt;Lightweight autonomic middleware for embedded systems&lt;/li&gt;
    &lt;li&gt;Testing and simulation tools for sensor network middleware&lt;/li&gt;
    &lt;li&gt;Fault identification, diagnosis and repair&lt;/li&gt;
&lt;/ul&gt;
    &lt;li&gt;Middleware services:&lt;/li&gt;
&lt;ul&gt;
    &lt;li&gt;Location tracking, localization, and synchronization.&lt;/li&gt;
    &lt;li&gt;Support for real-time and safety-critical systems.&lt;/li&gt;
    &lt;li&gt;Data management, aggregation and filtering.&lt;/li&gt;
    &lt;li&gt;Energy-aware middleware mechanisms.&lt;/li&gt;
    &lt;li&gt;Fault tolerance, reliability and quality of service.&lt;/li&gt;
    &lt;li&gt;Privacy and security services.&lt;/li&gt;
    &lt;li&gt;Virtualization, sharing and trading of resources.&lt;/li&gt;
&lt;/ul&gt;
    &lt;li&gt;Run-time Support:&lt;/li&gt;
&lt;ul&gt;
    &lt;li&gt;Overlay and topology creation, maintenance and management.&lt;/li&gt;
    &lt;li&gt;Resource/Service discovery and management.&lt;/li&gt;
    &lt;li&gt;Support for reconfiguration and adaptation.&lt;/li&gt;
    &lt;li&gt;Effective naming and addressing schemes.&lt;/li&gt;
    &lt;li&gt;Support for modeling and enacting safe software reconfiguration.&lt;/li&gt;
&lt;/ul&gt;
    &lt;li&gt;Management and Experiences:&lt;/li&gt;
&lt;ul&gt;
    &lt;li&gt;Managing heterogeneity and network dynamism.&lt;/li&gt;
    &lt;li&gt;Integration of embedded systems with web services.&lt;/li&gt;
    &lt;li&gt;Experience and evaluation of middleware platforms.&lt;/li&gt;
    &lt;li&gt;Support for the unification of various embedded platforms.&lt;/li&gt;
    &lt;li&gt;Shared infrastructure embedded systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
Submitted papers must be original work in English without substantial overlap with papers that have been published or that are simultaneously submitted to a journal or conference with proceedings. Submissions must not exceed 6 pages, must strictly follow the ACM conference proceedings format, and must be submitted in PDF format.

All accepted papers will appear in the &lt;strong&gt;ACM Digital Library&lt;/strong&gt; and will be indexed in &lt;strong&gt; DBLP&lt;/strong&gt;.
&lt;h3&gt;Important Dates:&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;Paper Submission deadline: August 15, 2012&lt;/li&gt;
    &lt;li&gt;Acceptance notification: September 21, 2012&lt;/li&gt;
    &lt;li&gt;Author registration deadline: October 5, 2012&lt;/li&gt;
    &lt;li&gt;Camera-ready version due: October 5, 2012&lt;/li&gt;
    &lt;li&gt;Workshop: December 3-7, 2012&lt;/li&gt;
&lt;/ul&gt;</description><category>cfp</category><category>sensor networks</category><guid>https://simondobson.org/2012/07/11/call-papers-midsens-2012/</guid><pubDate>Wed, 11 Jul 2012 12:00:26 GMT</pubDate></item><item><title>The middleware doughnut</title><link>https://simondobson.org/2011/12/16/middleware-doughnut/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;Where has the "middle" of middleware gone?

&lt;!--more--&gt;

This week I attended a couple of the workshops at the &lt;a href="http://2011.middleware-conference.org/" target="_blank"&gt;Middleware conference&lt;/a&gt;, the main venue for the research community working on systems integration middleware. In particular I was an invited speaker at the &lt;a href="http://2011.middleware-conference.org/fome/fome2011" target="_blank"&gt;Future of Middleware (FoME) workshop&lt;/a&gt;, which attracted a great bunch of people with views on where the field is going.

Listening to all the talks, one of the things that jumped out was the diversity of concerns people were expressing. Those working at enterprise level were concerned with scaling-out systems to millions of users using cloud computing; at the other extreme were sensor networks people like me, worried about programming  low-powered sensor motes with at least a semblance of programming language support and software engineering process. That a group of people with this spread of interests can find useful things to talk about together says a lot about how broad a term middleware actually is.

But if we compare this to years past, it was also clear that the concerns  asymmetrically affected the different groups. There were very few issues that really commanded broad interest. This led me to wonder: where has the "middle" gone from "middleware"?

In the 1990s, middleware people (including me) were working with &lt;a href="https://en.wikipedia.org/wiki/Common_Object_Request_Broker_Architecture" target="_blank"&gt;CORBA&lt;/a&gt; and the like. These systems were intended for broad application in integrating client and server components into single systems. In CORBA's case this involved designing object-oriented domain models that could then be implemented using any chosen programming language and support interactions seamlessly, regardless of  implementation or distribution. CORBA provided (and indeed provides) a lot of supporting infrastructure, including dedicated wire protocols, a shared type system and object model, higher-level services, binding, call models and other groovy toys. It achieved enormous penetration into markets that value long-term interoperability and evolution, such as financial services. It also influenced a whole range of subsequent developments, including web services and service-oriented architectures that are, to some extent, defined by their similarity to, or differences with, CORBA. (For a discussion of these differences see Baker and Dobson. &lt;a href="https://simondobson.org/research/publications#Compare-SOA-DOA" target="_blank"&gt;Comparing service-oriented and distributed object architectures&lt;/a&gt;. LNCS 3760. 2005.)

As is pretty much apparent from this, CORBA sits resolutely in the middle of middleware. It is intended to integrate disparate systems and allow them to work together, and evolve somewhat separately, while managing the complexity of the overall architecture. It tries to avoid the problem, identified by Bertrand Meyer, that large systems exhibit non-linear behaviour in which the cost of making any change to them is proportional, not to the size of the change being made, but to the size of the system being changed. It doesn't completely succeed in this, of course -- no system does -- but it provides a common centre around which to organise largely independent components.

Another way of looking at CORBA is less flattering: that it was inherently compromised by conflicting, and in large part irreconcilable, goals. It was reasonably performant, but by no stretch of the imagination high-performance given the overheads of a complex and general-purpose wire format. It was reasonably portable, as long as one accepted the limits imposed by the single type system: no first-class functions or mobile code, for example. It was reasonably easy to port and to support new languages, but every new language binding did require considerable ingenuity both in terms of technical design and standardisation of interfaces.

Sitting in the middle, in other words, was tricky and uncomfortable.

The causes of, and justifications for, these compromises aren't hard to find: what else can one do if one is trying to support the whole range of applications? Each piece of middleware sits at a particular point in the design space, trading-off performance against generality for example, or advanced typing against making bindings awkward or impossible for some languages.

And it's this generality that seemed to be missing from discussions of the future of middleware: no-one &lt;em&gt;intends&lt;/em&gt; to support this range any more. Instead we're seeing a division of the design space in which different application communities focus on one or two design dimensions that are undoubtedly the most important -- and largely forget the rest. For Twitter, for example, the main design goal is lightweight interaction at clients so that Twitter clients are easy to writ. They have no concern whatever with typing or reliability: if tweets are lost, who cares? For the web services community -- perhaps closest to the "spirit of the middle" -- the issues are extensibility and use of standards, with no concern for protocols, performance or end-point complexity. It's fairly easy to see that these design issues are simply too diverse to be spanned by a single middleware platform.

I don't think this necessarily spells the death of integrating middleware -- and that's just as well, given that we still have to integrate these systems &lt;em&gt;despite&lt;/em&gt; their increasing heterogeneity. What it does do, though, is change the locus of innovation away from ever-larger, more complex and more general platforms towards more specialised platforms that can integrate as far as needed -- and no further, so as not to over-burden applications or developers. Several speakers talked about using component-based approaches to build platforms as well as applications. In our talk we discussed similar ideas, removing the &lt;em&gt;a priori&lt;/em&gt; assumptions underlying middleware platforms and focusing instead on how to optimise what hits the metal. (Dearle and Dobson. &lt;a href="https://simondobson.org/research/publications#FOME-11" target="_blank"&gt;Mission-oriented middleware for sensor-driven scientific systems&lt;/a&gt;. Journal of Internet Services and Applications. 2011.) This will give rise to a whole range of further challenges -- how do we guarantee the right features are available? How do we add (and remove) features on the fly? How do we find the features we need? --  that are radically different from those encountered for CORBA and similar systems. But the result will (hopefully) be to improve our ability to create, manage and evolve ever more sophisticated combinations of applications and  services, and make it easier to roll-out and scale-out the next generation of applications and scientific experiments.&lt;/p&gt;</description><category>conference</category><category>corba</category><category>fome</category><category>middleware</category><category>sensor networks</category><category>web services</category><guid>https://simondobson.org/2011/12/16/middleware-doughnut/</guid><pubDate>Fri, 16 Dec 2011 11:09:49 GMT</pubDate></item><item><title>Inaugural lecture</title><link>https://simondobson.org/2011/11/25/inaugural/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;I will be giving my inaugural lecture on the topic of "The computer is the new microscope."

&lt;!--more--&gt;

It's traditional when appointed a full professor in the UK (strictly speaking, when appointed full prof for the first time) to give an open lecture on a topic of your choice. Because the lecture is open to anyone, they have to be very accessible (well, as accessible as the academic can make it, which often diverges from the normal meaning of "accessible"). My choice of topic follows on from a subject &lt;a href="https://simondobson.org/2010/04/computer-microscope/" target="_blank"&gt;I've been thinking about for a while&lt;/a&gt;, that computers change both the way we do science and the science we do, and that this needs to be more fully understood within both communities.

Date: 7 December, 2011
Time: 1715
Venue: Lecture theatre, Medical and Biological Science Building, University of St Andrews, North Haugh, St Andrews, Fife

Followed by a reception in the School of Computer Science next door.

[UPDATE 16Dec2011: the &lt;a href="https://simondobson.org/research/publications#TheComputerIsTheNewMicroscope11"&gt;slides&lt;/a&gt; are now available.]&lt;/p&gt;</description><category>sensor networks</category><category>university</category><guid>https://simondobson.org/2011/11/25/inaugural/</guid><pubDate>Fri, 25 Nov 2011 12:49:10 GMT</pubDate></item><item><title>Studentships in wireless sensor networks in Leuven</title><link>https://simondobson.org/2011/11/07/phd-leuven/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;A number of PHD positions are available with Danny Hughes in the Netherlands.

&lt;!--more--&gt;

Wireless Sensor Networks are expected to play a key role in future  Internet architectures and the Internet of Things. The &lt;a href="http://distrinet.cs.kuleuven.be/" target="_blank"&gt;DistriNet  research group of the Katholieke Universiteit Leuven&lt;/a&gt; wishes to expand  its Wireless Sensor Network (WSN) research team. You will play a key  role in a highly integrated team, which has a strong and growing  research profile in the area of middleware and software development  support for WSN. Three positions are available, starting immediately.

&lt;em&gt;Possible Research Topics:&lt;/em&gt;
• System-level support for realizing WSN applications that are reliable  and reconfigurable from the lowest-levels of the network stack to the  application layer.
• Development-time support for building autonomic and reconfigurable  applications for networked embedded systems and sensor networks.
• Distributed component based software engineering approaches for  networked heterogeneous networked embedded systems such as sensors,  smart phones and web pads.

&lt;em&gt;Profile &amp;amp; Skills:&lt;/em&gt;
• The student must demonstrate significant enthusiasm for, and knowledge  of the subject area based upon their previous education, work and  research experience.
• A master degree in Computer Science or Informatics with previous  experience in: Distributed Systems, Middleware, Embedded Systems or  related areas.
• A team player with the capability to work in an international research team.
• Proficiency in English and excellent communication skills, both oral and written.

&lt;em&gt;About DistriNet:&lt;/em&gt;

DistriNet is an international research group with extensive expertise in  secure and distributed software – obviously including middleware .   Research on software engineering techniques is performed in both domains  on a wide range of topics such as middleware for cloud computing,   internet architectures, network and software security, embedded systems  and multi-agent systems.  Embedded in the department of Computer Science  of the K.U.Leuven, DistriNet has a headcount of over 70 researchers of  which 9 professors and 15 Post-Docs.

DistriNet has a tradition of application driven research often in close  collaboration with industry partners. Currently DistriNet is actively  involved in about 35 national and international research projects,  ranging from fundamental over strategic-basic  to applied research. More  information on projects and publications can be found at the  IBBT-DistriNet web pages:  http://distrinet.cs.kuleuven.be.

The three open positions are situated within a team that has been  established to provide software development support for Wireless Sensor  Networks.

&lt;strong&gt;Key words: &lt;/strong&gt; Internet of Things (IoT), Networked Embedded Systems, Wireless Sensor Networks (WSN), Middleware, Component Based Softwa

&lt;strong&gt;Latest application date: &lt;/strong&gt; 2011-12-31

&lt;strong&gt;Financing: &lt;/strong&gt; available

&lt;strong&gt;Type of  Position: &lt;/strong&gt; scholarship

&lt;strong&gt;Source of Funding: &lt;/strong&gt; IWT

&lt;strong&gt;Duration of the Project : &lt;/strong&gt; 4  years

&lt;strong&gt;Link: &lt;/strong&gt; &lt;a href="http://distrinet.cs.kuleuven.be/" target="_blank"&gt; http://distrinet.cs.kuleuven.be&lt;/a&gt;

&lt;strong&gt;Research group: &lt;/strong&gt;Department of Computer Science

&lt;strong&gt;Remarks:&lt;/strong&gt;
To apply you should send your:
• Curriculum Vitae
• Motivation
• Relevant research experience
• Study curriculum with rankings
• English proficiency (for foreign students)
• Pdf of diploma and transcripts (translation if necessary)
• Names (and e-mail) of 2 reference persons and the nature of contact with them
By e-mail to Danny Hughes: danny.hughes  at  cs.kuleuven.be

Informal inquiries: Danny Hughes (danny.hughes  at cs.kuleuven.be)

&lt;strong&gt;Start date&lt;/strong&gt;
Between 2011-11-01 and 2012-31-04&lt;/p&gt;</description><category>jobs</category><category>sensor networks</category><guid>https://simondobson.org/2011/11/07/phd-leuven/</guid><pubDate>Mon, 07 Nov 2011 11:39:02 GMT</pubDate></item><item><title>Research fellowship in sensor networks</title><link>https://simondobson.org/2011/10/03/research-fellowship-sensor-networks/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;We have a three-year postdoc available immediately to work on programming languages and platforms for sensor networks.

&lt;!--more--&gt;
&lt;/p&gt;&lt;h3&gt;Research Fellow – CD1060&lt;/h3&gt;
School of Computer Science,  £32,751 - £35,788 per annum. Start: As soon as possible, Fixed Term 3 years

We seek a  Research Fellow to design and implement an integrated software platform  based on mission specifications and evolution operators. The work will  be evaluated based on case study deployments in the context of  real-world large-scale WSANs.  You will specifically focus on generative programming techniques to  integrate the overall design, and will work with Professors Dearle and  Dobson.

The project involves re-architecting WSAN systems so that system-wide  behaviour is defined using explicit mission specifications. These allow  top-level constraints and trade-offs to be captured directly and used to  inform software deployment and evolution in a well-founded manner. We  compile mission-level components to collections of node-level components  connected using network overlays. We maintain both mission constraints  and management interfaces through to run-time where they can be  manipulated by evolution and recomposition operators.

You should have a good honours degree in Computer Science or a related  discipline, and preferably have, or be about to obtain, a PhD in  Computer Science. You will have strong software  development/OS/programming language skills. Experience in generative  programming, compilers, operating systems, component deployment and/or  sensor networks would be advantageous.  You should be a highly motivated  individual and be able to lead the day-to-day work.

This is a fixed-term post for 3 years, starting as soon as possible.

More information on the &lt;a href="https://www.vacancies.st-andrews.ac.uk/ViewVacancy.aspx?enc=mEgrBL4XQK0+ld8aNkwYmO99IkxqH9eijvsCHvh08k+ze95XIC1eOev5uSd2OdKptmQ+WLedl2A+Qx1I/0DsdA==" target="_blank"&gt;university's job page&lt;/a&gt;. You can also email &lt;a href="mailto:alan.dearle@st-andrews.ac.uk"&gt;Al&lt;/a&gt; or &lt;a href="mailto:simon.dobson@st-andrews.ac.uk"&gt;myself&lt;/a&gt; for more information.</description><category>jobs</category><category>sensor networks</category><guid>https://simondobson.org/2011/10/03/research-fellowship-sensor-networks/</guid><pubDate>Mon, 03 Oct 2011 10:36:09 GMT</pubDate></item><item><title>An issue for smart grids</title><link>https://simondobson.org/2011/09/09/smart-grids/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;Unbeknown to her -- until she reads this, anyway -- the other day my mother trashed an idea that's been a cornerstone of a lot of research on smart grids.

&lt;!--more--&gt;

In the UK the fire services often send people around to check people's smoke alarms and the like. Not usually firemen &lt;em&gt;per se&lt;/em&gt;, but information providers who might reasonably be described as the propaganda department of the fire service, intent on giving advice on how not to burn to death. They also change batteries. Pretty useful public service, all told.

Anyway, my mother lives in Cheshire, and recently had a visit from two such anti-fire propagandists.They did the usual useful things, but also got talking about the various risk factors one can avoid beyond the usual ones of having a smoke alarm and not searching for gas leaks with a cigarette lighter. The conversation turned to the subject of appliances, and they revealed that the most dangerous appliances from a fire-causing perspective are washing machines. In fact, they said, the Cheshire fire service gets called to more washing-machine fires than &lt;em&gt;any other kind&lt;/em&gt; of domestic fire. (I don't know if that includes hoaxes, which are a major problem.) Since they have in common (a) lots of current and (b) water, I would guess that dishwashers are a similar problem.

So their advice was never to run a washing machine or dishwasher overnight or when in bed, as the chances of a fire are relatively high. "Relatively high" probably still means low on any meaningful  scale, but it makes sense to minimise even small hazards when the costs are potentially to catastrophic.

Mum related this to me to encourage me also not to run appliances at night. But of course this has research consequences as well.

Smart grids are the application of information technology to the provision and management of electricity and (to a lesser extent) gas. The idea is that the application of data science can provide better models of how people use their power, and can allow the grid operators and power generators to schedule and provision their supplies more accurately. It usually involves more detailed monitoring of electricity usage, for example using an internet-connected smart meter to log and return the power usage profile instead of just aggregated power usage for billing.

The idea is getting more and more common because of the rise in renewable energy. Most countries have feed-in tariffs for the grid that power generators have to pay. The scheme is usually some variant of the following: at every accounting period (say three hours), each generator  has to present an estimate of the power it will generate in the &lt;em&gt;next&lt;/em&gt; several accounting periods (say three).  So using these numbers, every three hours an electricity generator has to say how much power it will inject into the grid in the next nine hours. There's a complementary tariff scheme for aggregate consumers (not individuals), and taken together these allow the grid operators to balance supply and demand. The important point is that this exercise has real and quantifiable financial costs: generators are charged if they over- or under-supply by more than an agreed margin of error.

Now this is fine if you run a gas-, oil- or nuclear-powered power station. However, if you run a wind farm or a tidal barrage, it's rather more tricky, since you don't know with any accuracy how much power you'll generate: it depends on circumstances outwith your control. (I did some work for a company making control systems for wind farms, and one of their major issues was power prediction.) The tariffs can be a show-stopper, and can cause a lot of renewable-energy generators to run significantly below capacity just to hedge their tariff risk.

The other side of smart grids is to manage demand. It's well-known that demand is spiky, for example leaping a half-time in a popular televised football match as everybody puts the kettle on. A major goal of smart grids is to smooth-out demand, and one of the ways to do this is to identify power loads than can be time-shifted: they are relatively insensitive to when they occur, and so can be moved so that they occur at times when the aggregate power demand is less. In a domestic setting, some kinds of storage heating work like this and can create and store heat during off-peak hours (overnight). Lights and television can't be time-shifted as they're needed at particular times. So what are the major power loads, other than storage heating, in domestic settings that can apparently be time-shifted?

Washing machines and dishwashers.

Except we now know that time-shifting them to overnight running runs exactly counter to fire service advice as it increases the dangers of domestic fires. So one of the major strategies for smart grid demand management would, if widely deployed, potentially cause significant losses, of property and even lives. Reducing energy bills will (in time) increase the insurance premiums for anyone allowing time-shifting of their main appliances. In other words, while these risks exist, its a non-starter.

In some ways this is a good thing: good to learn about now, anyway, before too much investment. There are a lot of things that could be done to ameliorate the risks, for example designing machines explicitly designed for time-shifted operation.

But I think a more pertinent observation is the holistic nature of this kind of pervasive computing system. You can't treat &lt;em&gt;any one element&lt;/em&gt; in isolation, as they all interact with each other. It's as though pervasive computing breaks the normal way we think of computing systems as being built from independent components. In pervasive computing the composition operators are non-linear: two independently-correct components or solutions do not always compose to form one that is also correct. This has major implications for design and analysis, as well as for engineering.

Thanks, mum!&lt;/p&gt;</description><category>pervasive systems</category><category>sensor networks</category><category>smart grid</category><guid>https://simondobson.org/2011/09/09/smart-grids/</guid><pubDate>Fri, 09 Sep 2011 06:30:09 GMT</pubDate></item><item><title>Call for papers: MidSens'11</title><link>https://simondobson.org/2011/06/06/cfp-midsens11/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;Papers are invited on topics in middleware, tools and services  for sensor and other embedded systems.

&lt;!--more--&gt;
&lt;/p&gt;&lt;h2&gt;Sixth International Workshop on Middleware Tools, Services and  Run-time Support for Networked Embedded Systems (&lt;a href="http://www.midsens.org/index.html" target="_blank"&gt;MidSens’11&lt;/a&gt;)&lt;/h2&gt;
&lt;h3&gt;Co-located with &lt;a href="http://2011.middleware-conference.org/"&gt;Middleware 2011&lt;/a&gt; (December 12th - December 16th, 2011), Lisbon, Portugal&lt;/h3&gt;
The aim of MidSens’11 is to stimulate research in the  specific domain of middleware for networked embedded systems. This  year’s focus is on sensor networks and robotics control – a broader  focus than the previous editions – since we believe that the extended  scope will result in complementary and synergetic submissions from  researchers working in both niches. Along with the ‘core’ topic of  middleware architectures, services and tool support, MidSens’11 will  also seek quality papers describing novel programming languages,  run-time support and relevant experience reports. As with previous  editions of this workshop, MidSens’11 will investigate how middleware  support can relieve developers from low-level, platform specific  concerns, while enabling optimal exploitation of available resources. We  hope that you will be able to join us in Lisbon on December 12th 2011.

Middleware for networked embedded systems such as sensor networks and  robotics is a critical research domain which addresses key challenges  that application developers are facing today. The five previous editions  of this workshop (&lt;a href="http://www.cs.kuleuven.ac.be/conference/MidSens2006/"&gt;MidSens'06&lt;/a&gt;, &lt;a href="http://www.cs.kuleuven.be/conference/MidSens2007/"&gt;MidSens'07&lt;/a&gt;, &lt;a href="http://www.comp.lancs.ac.uk/computing/midsens08/"&gt;MidSens'08&lt;/a&gt;, &lt;a href="http://distrinet.cs.kuleuven.be/events/midsens09/"&gt;MidSens'09&lt;/a&gt; and &lt;a href="http://www.midsens.org/2010/"&gt; MidSens'10&lt;/a&gt;)  attracted researchers from Europe, Asia, and the United States. The  MidSens workshop series has served to trigger and guide research efforts  to create an &lt;em&gt;integrated middleware vision&lt;/em&gt;, which is required to  handle the challenges inherent in developing, deploying and managing  complex networked embedded applications in an efficient way.

The workshop seeks papers in, but not limited to:
&lt;ul&gt;
    &lt;li&gt;Middleware Tools and Architectures:
&lt;ul&gt;
    &lt;li&gt; Architectures for networked embedded systems.&lt;/li&gt;
    &lt;li&gt; Novel programming abstractions.&lt;/li&gt;
    &lt;li&gt; Lightweight agent middleware for embedded systems.&lt;/li&gt;
    &lt;li&gt; Testing and simulation tools.&lt;/li&gt;
    &lt;li&gt; Fault identification, diagnosis and repair.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
    &lt;li&gt;Middleware services:
&lt;ul&gt;
    &lt;li&gt; Location tracking, localization, and synchronization.&lt;/li&gt;
    &lt;li&gt; Support for real-time and safety-critical systems.&lt;/li&gt;
    &lt;li&gt; Data management, aggregation and filtering.&lt;/li&gt;
    &lt;li&gt; Energy-aware middleware mechanisms.&lt;/li&gt;
    &lt;li&gt; Fault tolerance, reliability and quality of service.&lt;/li&gt;
    &lt;li&gt; Privacy and security services.&lt;/li&gt;
    &lt;li&gt; Virtualization, sharing and trading of resources.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
    &lt;li&gt;Run-time Support:
&lt;ul&gt;
    &lt;li&gt; Overlay and topology creation, maintenance and   management.&lt;/li&gt;
    &lt;li&gt; Resource/Service discovery and management.&lt;/li&gt;
    &lt;li&gt; Support for reconfiguration and adaptation.&lt;/li&gt;
    &lt;li&gt; Effective naming and addressing schemes.&lt;/li&gt;
    &lt;li&gt; Support for modeling and enacting safe software  reconfiguration.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
    &lt;li&gt;Management and Experiences:
&lt;ul&gt;
    &lt;li&gt; Managing heterogeneity and network dynamism.&lt;/li&gt;
    &lt;li&gt; Integration of embedded systems with web services.&lt;/li&gt;
    &lt;li&gt; Experience and evaluation of middleware platforms.&lt;/li&gt;
    &lt;li&gt; Support for the unification of various networked embedded platforms.&lt;/li&gt;
    &lt;li&gt; Shared infrastructure embedded systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Submission&lt;/h3&gt;
Submitted papers must be original work in English without substantial  overlap with papers that have been published or that are simultaneously  submitted to a journal or conference with proceedings. Submissions must  not exceed 6 pages, must strictly follow the ACM conference proceedings  format, and must be submitted in PDF format.  All workshop papers will  be uploaded to the ACM Digital Library. Full instructions can be found &lt;a href="http://www.midsens.org/2011/submission.html" target="_blank"&gt;here&lt;/a&gt;.
&lt;h3&gt;Important dates&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;Paper submission: 15 August 2011&lt;/li&gt;
    &lt;li&gt;Review notification: 29 September 2011&lt;/li&gt;
    &lt;li&gt;Camera-ready: 10 October 2011&lt;/li&gt;
    &lt;li&gt;Registration: 7 October 2011&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Programme committee&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;Gordon Blair, Lancaster University, UK&lt;/li&gt;
    &lt;li&gt;Vinny Cahill, Trinity College, Ireland&lt;/li&gt;
    &lt;li&gt;Paolo Costa, Imperial College London, UK&lt;/li&gt;
    &lt;li&gt;Simon Dobson, University of St. Andrews, UK&lt;/li&gt;
    &lt;li&gt;Michael Fisher, University of Liverpool, UK&lt;/li&gt;
    &lt;li&gt;Wen Hu, CSIRO, Australia&lt;/li&gt;
    &lt;li&gt;Joerg Kaiser, University of Magdeburg, Germany&lt;/li&gt;
    &lt;li&gt;Torsten Kroeger, Stanford University, USA&lt;/li&gt;
    &lt;li&gt;Ajay Kshemkalyani, University of Illinois at Chicago&lt;/li&gt;
    &lt;li&gt;Kristof Van Laerhoven, Technical University of Darmstadt&lt;/li&gt;
    &lt;li&gt;Sam Michiels, K.U.Leuven, Belgium&lt;/li&gt;
    &lt;li&gt;Nader Mohamed, United Arab Emirates University, UAE&lt;/li&gt;
    &lt;li&gt;Luca Mottola, SICS, Sweden&lt;/li&gt;
    &lt;li&gt;Mirco Musolesi, University of Birmingham, UK&lt;/li&gt;
    &lt;li&gt;Dennis Pfisterer, University of Lübeck, Germany&lt;/li&gt;
    &lt;li&gt;Kay Römer, University of Lübeck, Germany&lt;/li&gt;
    &lt;li&gt;Coen De Roover, Vrije Universiteit Brussel, Belgium&lt;/li&gt;
    &lt;li&gt;Romain Rouvoy, INRIA Lille, France&lt;/li&gt;
    &lt;li&gt;Jo Ueyama, Universidade de Sao Paulo, Brazil&lt;/li&gt;
&lt;/ul&gt;</description><category>cfp</category><category>conference</category><category>middleware</category><category>sensor networks</category><guid>https://simondobson.org/2011/06/06/cfp-midsens11/</guid><pubDate>Mon, 06 Jun 2011 09:30:18 GMT</pubDate></item></channel></rss>