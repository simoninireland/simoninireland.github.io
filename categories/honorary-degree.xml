<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simon Dobson (Posts about honorary degree)</title><link>https://simondobson.org/</link><description></description><atom:link href="https://simondobson.org/categories/honorary-degree.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2023 &lt;a href="mailto:simoninireland@gmail.com"&gt;Simon Dobson&lt;/a&gt; </copyright><lastBuildDate>Tue, 19 Dec 2023 12:45:05 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Laureation for Professor Dana Scott</title><link>https://simondobson.org/2014/06/26/scott-laureation/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;p&gt;I had the honour (and the great personal pleasure) of inviting the Vice-Chancellor to bestow an honorary degree upon &lt;a href="https://en.wikipedia.org/wiki/Dana_Scott" target="_blank"&gt;Dana Scott&lt;/a&gt;, the inventor of some of the most influential ideas in computer science.

&lt;!--more--&gt;

Vice-Chancellor, I have the privilege to present Professor Dana Scott for the degree of Doctor of Science, &lt;i&gt;honoris causa&lt;/i&gt;.

Vice-Chancellor, colleagues, friends, ladies and gentlemen:

For millennia, people have performed calculations, sometimes changing the way we live or understand the world. Many of these calculations have involved long, complicated sequences of actions — what we now refer to as &lt;i&gt;algorithms&lt;/i&gt;. But it was only in the 1930s that researchers such as Alonzo Church, John von Neumann, Alan Turing, and others formally studied &lt;i&gt;how &lt;/i&gt;we perform calculations, which rapidly opened-up the mechanisation of such operations and led to what we now know as computer science.

What does it mean to describe a calculation? For Turing, it meant designing an ideal machine whose small set of simple operations could perform computation — an operational view of computing that allows machines to perform tasks previously thought to require humans. But we can also think of computation independent of mechanisation, where mathematics can be applied to studying computation, and a theory of computation becomes available for the study of mathematics, physics, and other disciplines. And when we take this view, we are making use of ideas that owe their modern existence to the work of Dana Scott.

Scott was a PhD student of the logician &lt;a href="https://en.wikipedia.org/wiki/Alonzo_Church" target="_blank"&gt;Alonzo Church&lt;/a&gt;, whom I mentioned earlier. Working with the late &lt;a href="https://en.wikipedia.org/wiki/Christopher_Strachey" target="_blank"&gt;Christopher Strachey&lt;/a&gt; at Oxford, Scott developed a theory of computation that allows calculations to be analysed, studied, and compared. Scott’s insight was to view computation as a steady increase in information. His development of the mathematical structures now known as &lt;a href="https://en.wikipedia.org/wiki/Scott_domain" target="_blank"&gt;Scott domains&lt;/a&gt; provided a way of precisely describing this progression. They in turn led directly to an approach for formally describing programs and programming languages — &lt;a href="https://en.wikipedia.org/wiki/Denotational_semantics" target="_blank"&gt;the Scott-Strachey approach to denotational semantics&lt;/a&gt; — and indirectly both to approaches to proving programs correct, and to the development of lazy functional programming languages that today form a major strand of computer science research: one to which St Andrews is proud to be making an on-going contribution.

If asked, most computer scientists would agree that denotational semantics forms Scott’s most lasting contribution; they might marvel that, later this year, at the age of 81, he will be delivering a keynote lecture in Vienna at the main international conference on computational logic; and they would probably be able to tell you that he is a recipient of the &lt;a href="http://amturing.acm.org/" target="_blank"&gt;Turing Award&lt;/a&gt;, often referred to as the “Nobel Prize for Computer Science”. However, Scott in fact &lt;a href="http://amturing.acm.org/award_winners/scott_1193622.cfm" target="_blank"&gt;won the Turing Award, jointly with Michael Rabin&lt;/a&gt;, for work on automata theory that predates his work on semantics. In other words, he won the highest accolade his discipline has to offer for work not generally considered to be his most significant. As you might imagine, this is a rather unusual occurrence: in fact, the only other example I can find in the entire history of science is the award of the Nobel Prize to Albert Einstein for work other than his theory of relativity. That’s not bad company to be keeping.

When we think of computers, we often think of their visible manifestations: the internet, mobile phones, aircraft flight control systems, Angry Birds. But no matter how impressive, and how much they continue to change our lives for the better, these systems are possible only because of the foundational intellectual developments that let us reason about proofs, calculations, and computations, as well as simply carrying them out. Vice Chancellor, the work of Dana Scott grounded the discipline of computer science, not only in a specific piece of theory, but also in an approach and a mindset that changed how we think about computing and, through this, has had a profound influence across the whole of human endeavour. It is in recognition of these seminal contributions to science that I invite you to confer upon Professor Dana Scott the degree of Doctor of Science, &lt;i&gt;honoris causa&lt;/i&gt;.

Photo &lt;a href="http://instagram.com/p/prF477OWRs/" target="_blank"&gt;here&lt;/a&gt;.

(Thanks to Al Dearle, Steve Linton, Lisa Dow, and Muffy Calder for comments that made this better than the first draft I did.)

 

 &lt;/p&gt;</description><category>Blog</category><category>dana scott</category><category>honorary degree</category><category>university</category><guid>https://simondobson.org/2014/06/26/scott-laureation/</guid><pubDate>Thu, 26 Jun 2014 08:10:23 GMT</pubDate></item></channel></rss>