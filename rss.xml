<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simon Dobson</title><link>https://simondobson.org/</link><description>Aut tace aut loquere meliora silentio</description><atom:link href="https://simondobson.org/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:simon.dobson@computer.org"&gt;Simon Dobson&lt;/a&gt; </copyright><lastBuildDate>Sat, 20 Mar 2021 16:38:55 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>IDE convergence</title><link>https://simondobson.org/blog/2021/02/23/ide-convergence/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;div&gt;&lt;p&gt;I recently tried out a new development environment for my Python
development, and noticed an unexpected convergence in the designs of
the two tools.&lt;/p&gt;
&lt;!-- TASTER_END --&gt;

&lt;p&gt;I've been a long-time &lt;a href="https://emacs.org"&gt;Emacs&lt;/a&gt; user. I periodically
get a desire to try something new, something less old-school, just to
see whether there are advantages. There always &lt;em&gt;are&lt;/em&gt; advantages, of
course -- but often significant disadvantages as well, which often
keep me coming back to my comfort zone.&lt;/p&gt;
&lt;p&gt;My most recent excursion was to try Microsoft's &lt;a href="https://code.visualstudio.com/"&gt;VS
Code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Microsoft VS Code" src="https://simondobson.org/images/posts/20210223-vscode.png"&gt;&lt;/p&gt;
&lt;p&gt;This is handily cross-platform, being built in Javascript on top of
&lt;a href="https://www.electronjs.org/"&gt;Electron&lt;/a&gt;. It's got a lot of nice
features: a tree view of the project in the left-hand pane, syntax
colouring, code style linting, integrated debugging and unit test
running, integrated connection to git, and so on. Looking a little
closer there are all sorts of status markers around the code and in
the ribbons at the bottom of panes and the window overall to show
status that might be important.&lt;/p&gt;
&lt;p&gt;But it's so &lt;em&gt;slow&lt;/em&gt;. That's a feature of VS Code, not of Electron (as I
first suspected), because other Electron-based editors like
&lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt; aren't as slow. And my development box isn't
the latest, but it also isn't &lt;em&gt;that&lt;/em&gt; old.&lt;/p&gt;
&lt;p&gt;So I reverted to Emacs, but upgraded it a little to more modern
standards. Specifically, I installed the
&lt;a href="https://elpy.readthedocs.io/en/latest/index.html"&gt;elpy&lt;/a&gt; Python IDE,
with assorted other packages suggested by various sites. The result is
this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Emacs with elpy" src="https://simondobson.org/images/posts/20210223-emacs.png"&gt;&lt;/p&gt;
&lt;p&gt;Now for anyone who's used Emacs for a while, it's definitely still
Emacs -- not least with the convoluted keystrokes and infinite
customisation you either love or hate. But it's striking how similar
the two IDEs now are, and striking how VS Code has inherited some
ideas from Emacs: resizeable panes, modelines in the ribbon, markers
in pane gutters, and so forth -- things that Emacs-based applications
have had for years, which have now migrated into "the mainstream".
Both the feature sets and the visuals of the two systems are very
similar indeed. Both are entirely cross-platform and extensible. For
VS Code you write extensions in Javascript; for Emacs you write them
in Lisp; and that's about it. And Emacs is a &lt;em&gt;lot&lt;/em&gt; faster on my
set-up. There are some limitations -- I've yet to get the hang of
using &lt;code&gt;pdb&lt;/code&gt; as a debugger, for example, especially for modules
and from within tests -- but the functionality is really quite comparable.&lt;/p&gt;
&lt;p&gt;I think it's safe to say there's been cross-fertilisation between VS
Code (and other IDEs) and Emacs over the years. A lot of the
developers of the former quite possibly used the latter. But I
strongly suspect that most of the traffic has gone &lt;em&gt;from&lt;/em&gt; Emacs &lt;em&gt;to&lt;/em&gt;
the other systems: the similarities are just too great to be
accidental. It's interesting to think that a system that emerged at
the dawn of the free-software movement has had -- and is still having
-- such an influence on modern development tools. And I'm happily back
in my comfort zone.&lt;/p&gt;&lt;/div&gt;</description><category>emacs</category><category>python</category><category>software engineering</category><category>vs code</category><guid>https://simondobson.org/blog/2021/02/23/ide-convergence/</guid><pubDate>Tue, 23 Feb 2021 12:21:05 GMT</pubDate></item><item><title>Paper on clustered percolation accepted</title><link>https://simondobson.org/blog/2020/12/21/clustered-percolation/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;figure&gt;&lt;img src="https://simondobson.org/images/posts/20201221-clustering.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;Our paper "Percolation on random graphs with higher-order clustering"
was accepted into &lt;em&gt;Physical Review E&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://simondobson.org/blog/2020/12/21/clustered-percolation/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>clustering</category><category>complex networks</category><category>news</category><category>percolation</category><guid>https://simondobson.org/blog/2020/12/21/clustered-percolation/</guid><pubDate>Mon, 21 Dec 2020 15:55:42 GMT</pubDate></item><item><title>A talk on "Exploring epidemic spreading using network models"</title><link>https://simondobson.org/blog/2020/12/19/ima-talk/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;figure&gt;&lt;img src="https://simondobson.org/images/posts/20201219-waterfall.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;I gave a talk by Zoom to the &lt;a href="https://ima.org.uk"&gt;Institute of Mathematics and its Applications&lt;/a&gt;
arising from my epidemic modelling &lt;a href="https://simondobson.org/writing/em-book/"&gt;book&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://simondobson.org/blog/2020/12/19/ima-talk/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>complex networks</category><category>epidemic spreading</category><category>epydemic</category><category>news</category><category>talk</category><guid>https://simondobson.org/blog/2020/12/19/ima-talk/</guid><pubDate>Sat, 19 Dec 2020 09:10:00 GMT</pubDate></item><item><title>Co-infection dynamics paper submitted</title><link>https://simondobson.org/blog/2020/12/18/coinfection-dynamics/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;figure&gt;&lt;img src="https://simondobson.org/images/posts/20201218-cycles.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;What happens when two diseases spread through a population?&lt;/p&gt;
&lt;p&gt;&lt;a href="https://simondobson.org/blog/2020/12/18/coinfection-dynamics/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>complex networks</category><category>news</category><category>paper</category><guid>https://simondobson.org/blog/2020/12/18/coinfection-dynamics/</guid><pubDate>Fri, 18 Dec 2020 18:26:10 GMT</pubDate></item><item><title>The Shanghai Free Taxi: Journeys with the Hustlers and Rebels of the New China</title><link>https://simondobson.org/blog/goodreads/the-shanghai-free-taxi-journeys-with-the-hustlers-and-rebels-of-the-new-china/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;div&gt;
	&lt;div&gt;
		&lt;div&gt;
			&lt;img src="https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1580583448l/42283958._SX98_.jpg" style="float: left; margin-right: 10px"&gt;
			&lt;div&gt;
				&lt;h2&gt;Frank Langfitt&lt;/h2&gt;
				   2019
				&lt;p&gt;
				&lt;/p&gt;&lt;hr&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;p&gt;
		The taxi, while an essential part of the plot, doesn't perhaps feature quite as much as one might expect in this exploration of China and the Chinese as they start to drive the 21st century. It's a view from part way inside: not a Chinese view &lt;i&gt;per se&lt;/i&gt;, but from a Western journalist with deep knowledge and strong sympathies for China, who manages to get a variety of people from the city and countryside to comment reasonably candidly about their experiences. It strikes me as a balanced and important contribution to understanding the nature of the emerging "Chinese century" (as it may, but will not necessarily, become), both its strengths and weaknesses.
		&lt;/p&gt;&lt;p&gt;
		   Finished on Thu, 17 Dec 2020 00:00:00 -0800.  
		Rating 3*/5*.
	&lt;/p&gt;&lt;/div&gt;
   &lt;/div&gt;</description><category>books</category><category>goodreads</category><category>reviews</category><guid>https://simondobson.org/blog/goodreads/the-shanghai-free-taxi-journeys-with-the-hustlers-and-rebels-of-the-new-china/</guid><pubDate>Thu, 17 Dec 2020 08:00:00 GMT</pubDate></item><item><title>Backporting Python type annotations</title><link>https://simondobson.org/blog/2020/12/09/backporting-python-types/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;div&gt;&lt;p&gt;I recently added type annotations to my
&lt;a href="https://simondobson.org/development/epyc/"&gt;&lt;code&gt;epyc&lt;/code&gt;&lt;/a&gt; and
&lt;a href="https://simondobson.org/development/epydemic/"&gt;&lt;code&gt;epydemic&lt;/code&gt;&lt;/a&gt; libraries. Making these work
while not sacrificing interoperability a wide range of Python versions
is quite delicate.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://simondobson.org/blog/2020/12/09/backporting-python-types/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>epyc</category><category>epydemic</category><category>programming</category><category>python</category><guid>https://simondobson.org/blog/2020/12/09/backporting-python-types/</guid><pubDate>Wed, 09 Dec 2020 10:45:43 GMT</pubDate></item><item><title>What the Dormouse Said: How the Sixties Counterculture Shaped the Personal Computer Industry</title><link>https://simondobson.org/blog/goodreads/what-the-dormouse-said-how-the-sixties-counterculture-shaped-the-personal-computer-industry/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;div&gt;
	&lt;div&gt;
		&lt;div&gt;
			&lt;img src="https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1442903066l/725789._SX98_.jpg" style="float: left; margin-right: 10px"&gt;
			&lt;div&gt;
				&lt;h2&gt;John Markoff&lt;/h2&gt;
				   2005
				&lt;p&gt;
				&lt;/p&gt;&lt;hr&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;p&gt;
		Another history of the early days of computing. The goal is to link the rise of personal computing to the rise of the counterculture and (especially) to the psychedelics of the acid tests of the Merry Pranksters. There's some overlap in individuals, notably Stewart Brand (who makes a brief appearance in &lt;a href="https://www.goodreads.com/book/show/7442.The_Electric_Kool_Aid_Acid_Test" title="The Electric Kool-Aid Acid Test by Tom Wolfe" rel="nofollow noopener"&gt;The Electric Kool-Aid Acid Test&lt;/a&gt;). But overall it seems something of a stretch: the most influential players at the time (Doug Engelbart, Alan Kay) weren't especially counter-cultural. But the contrast between the corporate computing world and those of Engelbart and Kay – and for all their differences they share a lot of similarities – is profound, and it's sad that in many ways the corporate side won: modern software draws on the surface aspects of Kay's work on Smalltalk, for example, but at a deeper level is more heavily influenced by corporate needs, and that's become even more pronounced in the years since this book was written.
		&lt;/p&gt;&lt;p&gt;
		   Finished on Wed, 09 Dec 2020 00:00:00 -0800.  
		Rating 4*/5*.
	&lt;/p&gt;&lt;/div&gt;
   &lt;/div&gt;</description><category>books</category><category>goodreads</category><category>reviews</category><guid>https://simondobson.org/blog/goodreads/what-the-dormouse-said-how-the-sixties-counterculture-shaped-the-personal-computer-industry/</guid><pubDate>Wed, 09 Dec 2020 08:00:00 GMT</pubDate></item><item><title>Random graphs with arbitrary clustering and their applications</title><link>https://simondobson.org/blog/2020/12/03/random-graphs-clustering/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;figure&gt;&lt;img src="https://simondobson.org/images/posts/20201203-good-fit.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;Our paper on clustering was accepted into &lt;em&gt;Physical Review E&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://simondobson.org/blog/2020/12/03/random-graphs-clustering/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>clustered networks</category><category>complex networks</category><category>news</category><category>paper</category><category>pre</category><guid>https://simondobson.org/blog/2020/12/03/random-graphs-clustering/</guid><pubDate>Thu, 03 Dec 2020 13:31:56 GMT</pubDate></item><item><title>Mythos:  The Greek Myths Retold</title><link>https://simondobson.org/blog/goodreads/mythos-the-greek-myths-retold/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;div&gt;
	&lt;div&gt;
		&lt;div&gt;
			&lt;img src="https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1526867104l/38213085._SX98_.jpg" style="float: left; margin-right: 10px"&gt;
			&lt;div&gt;
				&lt;h2&gt;Stephen Fry&lt;/h2&gt;
				   2017
				&lt;p&gt;
				&lt;/p&gt;&lt;hr&gt;
			&lt;/div&gt;
		&lt;/div&gt;
		&lt;p&gt;
		Billed as "Greek myths for the 21st century", which I think is an accurate description, both good and bad. This is clear, humorous, erudite take on the key stories without giving way to too much modernising, and with the thoughtful and witty asides one would expect from Stephen Fry.&lt;br&gt;&lt;br&gt;The style does occasionally drift too far into the casual for my tastes, I have to say, but that's a minor criticism: I certainly intend to read the other books in this series, dealing with heroic myths and the Trojan War.&lt;br&gt;
		&lt;/p&gt;&lt;p&gt;
		   Finished on Wed, 02 Dec 2020 00:00:00 -0800.  
		Rating 4*/5*.
	&lt;/p&gt;&lt;/div&gt;
   &lt;/div&gt;</description><category>books</category><category>goodreads</category><category>reviews</category><guid>https://simondobson.org/blog/goodreads/mythos-the-greek-myths-retold/</guid><pubDate>Wed, 02 Dec 2020 08:00:00 GMT</pubDate></item><item><title>Where am I (in git)?</title><link>https://simondobson.org/blog/2020/11/27/where-am-i/</link><dc:creator>Simon Dobson</dc:creator><description>&lt;div&gt;&lt;p&gt;I recently started using &lt;code&gt;git&lt;/code&gt; and &lt;a href="https://github.com/simoninireland/"&gt;Github&lt;/a&gt;
in a more serious way than I've done in the past -- and promptly
started getting horrendously lost in the process.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://simondobson.org/blog/2020/11/27/where-am-i/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>bash</category><category>git</category><category>linux</category><guid>https://simondobson.org/blog/2020/11/27/where-am-i/</guid><pubDate>Fri, 27 Nov 2020 11:14:08 GMT</pubDate></item></channel></rss>